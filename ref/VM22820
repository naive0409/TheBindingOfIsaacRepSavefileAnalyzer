mw.loader.implement("skins.dragonhide.cockpit@1c0lz", function ($, jQuery, require, module) { if (mw.config.get('wgTestVar') != 1) { var isDebug = Boolean(mw.config.get('debugInfo')); var baseUrl = 'https://spa.huijistatic.com/' + (isDebug ? 'huiji_social_dev' : 'huiji_social'); if (isDebug) { cockpitConfig = mw.config.get('wgCockpitConfig')['dev']; } else { cockpitConfig = mw.config.get('wgCockpitConfig')['prod']; } import(baseUrl + '/' + cockpitConfig['script']); for (css_path of cockpitConfig['css']) { var cockpitStyleTag = document.createElement('link'); cockpitStyleTag.rel = 'stylesheet'; cockpitStyleTag.href = baseUrl + '/' + css_path; document.head.append(cockpitStyleTag); } } }, { "css": ["#skin-root-static{display:flex !important;width:100%;flex-direction:row;align-items:center;gap:6px;color:#fff;transition:top 0.2s linear}#skin-root-static .skin-root-loading{width:34px;height:100%;display:flex;align-items:center;text-align:center}#skin-root-static .skin-root-brand img{height:30px;display:flex;align-items:center;width:auto}@keyframes skincontainer-preload-loading{from{transform:rotate(0)}50%{transform:rotate(180deg)}to{transform:rotate(360deg)}}#skin-root-static .skin-root-spinner{margin-left:12px;width:16px;height:16px;color:#139bff;animation:skincontainer-preload-loading 1333ms linear infinite both}.skin-root-links-ph{display:flex;flex-direction:row;align-items:center;gap:26px;margin:0 6px 0 16px}@media screen and (max-width:992px){.skin-root-links-ph{display:none}}.skin-root-link-skeleton{width:28px;height:14px;background:rgba(255,255,255,0.2);border-radius:4px}.skin-root-searcherwrapper{height:100%;display:flex;align-items:center;flex:1 1 0%;margin-left:10px}.skin-root-searcherwrapper .skin-root-input{width:100%;height:28px;background:rgba(255,255,255,0.1);display:flex;align-items:center;border-radius:3px;position:relative}.skin-root-searcherwrapper .skin-root-searcher{background:transparent;font-size:inherit;line-height:inherit;outline:none;cursor:text;box-sizing:border-box;border:none;width:100%;color:rgb(255 255 255 / 82%);padding:0 26px 0 12px}.skin-root-searcherwrapper .skin-root-searcher::placeholder{color:rgb(255 255 255 / 38%)}.skin-root-searcherwrapper .search-button{font-size:16px;color:rgb(255 255 255 / 38%);cursor:pointer;position:absolute;top:50%;transform:translateY(-50%);right:10px;width:1em;height:1em}.skin-root-userarea img{border-radius:4px;height:28px;width:28px}.skin-root-userarea-anon{display:flex;flex-direction:row;align-items:center;gap:6px}.skin-root-button{color:rgb(255 255 255 / 82%);display:block;cursor:pointer;padding:4px 10px;background:rgb(255 255 255 / 8%);border-radius:3px}.skin-root-button:focus,.skin-root-button:hover{text-decoration:none;color:rgb(255 255 255 / 82%)}.skin-root-button:focus{outline:none}"] }, null, null);; mw.loader.implement("skins.dragonhide.fork@1td1b", function ($, jQuery, require, module) {
       function ForkWiki() { this.isBatch = false; } function getFormattedDate() { var date = new Date(); var str = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds(); return str; } ForkWiki.prototype = {
              init: function () { this._addListener(); this._addModal(); }, _addListener: function () {
                     var self = this; $('.tf-batch').on('click', function () { self.$element = $(this); self.$element.button('loading'); self.isBatch = true; if (mw.config.get('wgArticleId') == 0 && mw.config.get('wgHuijiPrefix') !== 'templatemanager') { self.targetPrefix = mw.config.get('wgHuijiPrefix'); self.ajaxurl = 'https://' + mw.config.get('wgHuijiPrefix') + '.huijiwiki.com/api.php'; self.redirectUrl = window.location; self.interwikisource = 'https://templatemanager.huijiwiki.com'; self.interwikipage = self.$element.data('manifest'); self._importBatch(); return; } self._getFollow(); }); $('body').on('click', '#ca-fork a, .ca-fork',
                            function () { self.$element = $(this); self.$element.button('loading'); self._getFollow(); }); $('.tf-sync').on('click', function () { self.$element = $(this); self.$element.button('loading'); self._sync(); }); $('body').on('click', '.copy-modal .copy', $.proxy(this._wikiSelect, this));
              }, _sync: function () {
                     this.targetPrefix = mw.config.get('wgHuijiPrefix'); this.ajaxurl = 'https://' + mw.config.get('wgHuijiPrefix') + '.huijiwiki.com/api.php'; this.redirectUrl = window.location; this.interwikisource = this.$element.data('prefix'); this.interwikipage = this.$element.data('page'); var api = new mw.ForeignApi('https://' + this.$element.data('prefix') + '.huijiwiki.com/api.php'); var self = this; api.get({ action: 'query', prop: 'revisions', rvprop: 'ids', titles: this.interwikipage, }).done(function (data) {
                            for (var i in data.query.pages) {
                                   token = mw.user.tokens.get('editToken'); self.interwikipagename = self.$element.data('page'); self.interwikipageid = data.query.pages[i].pageid; if (!data.query.pages[i].revisions) { self._importWiki(token); } self.
                                          interwikipagerevision = data.query.pages[i].revisions[0].revid; if (self.interwikipagerevision != self.$element.data('revision') && self.$element.data('revision') != undefined) { var warn = '<div class="alert alert-warning copy-warn alert-dismissible fade in" role="alert">' + '<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>' + '<h4>校验版本</h4>' + '<p>当前版本' + self.$element.data('revision') + '，小于源维基最新版本' + self.interwikipagerevision + '，点击同步更新至最新版本。</p>' + '<p><button type="button" class="btn btn-danger" data-loading-text="同步中" autocomplete="off">同步</button></p>' + '</div>'; $('body').append(warn).on('click', '.copy-warn .btn', $.proxy(self._importWiki, self, token)); $('body').append(warn).on('click', '.copy-warn .close', function () { $('.copy-modal').modal('hide'); $('.copy-warn').remove(); }); } else if (self.$element.data('revision') == undefined) { self._importWiki(token); } else {
                                                 var options = {
                                                        tag: 'import', type: 'info',
                                                 }; mw.notification.notify('经检验，本版本（' + self.$element.data('revision') + '）已是最新版本。', options); api.post({ action: 'huiji', module: 'forklog', task: 'markAsSync', target: mw.config.get('wgPageName'), }).done(function () { self.$element.text('已同步').addClass('quiet'); });
                                          } break;
                            }
                     });
              }, _getFollow: function ($isBatch) {
                     var user_name = mw.config.get('wgUserName'); $('.copy-modal').modal(); if (user_name == null) { e.preventDefault(); mw.notification.notify('请登录'); } else {
                            $.post(mw.util.wikiScript('api'), { action: 'huiji', module: 'userfollow', type: 'site', limit: 100, format: 'json', utf8: '1', }, function (res) {
                                   var content = ''; if (res.followingSiteCount == 0) { if (this.isBatch) { content = '<a>您要把这组页面搬运到哪里呢？不妨先关注那个维基吧</a>'; } else { content = '<a>您要把这个页面搬运到哪里呢？不妨先关注那个维基吧</a>'; } $('.copy-modal .modal-body').empty().append(content); return; } $.each(res.followingSite, function (i, item) {
                                          content +=
                                          '<p><a class="copy" data-src="' + item.prefix + '">' + item.name + '</a></p>';
                                   }); $('.copy-modal .modal-body').empty().append(content);
                            });
                     }
              }, _addModal: function () { var modal = '<div class="modal fade copy-modal in" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">' + '<div class="modal-dialog modal-sm">' + '<div class="modal-content">' + '<div class="modal-header">' + '<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>' + '<h4 class="modal-title copy-modal-title" id="mySmallModalLabel">请选择搬运目标</h4>' + '<p class="copy-modal-desc">根据页面长短、嵌套数量，搬运会需要相应的等候时间。<br />该列表中仅会出现<b>已关注</b>的站点，不要忘记点标题旁边的关注哦。</p>' + '</div>' + '<div class="modal-body">' + '<i class="fa fa-spinner fa-pulse"></i>' + '</div>' + '</div><!-- /.modal-content -->' + '</div><!-- /.modal-dialog -->' + '</div>'; $('body').append(modal); }, _wikiSelect: function (e) {
                     e
                            .stopPropagation(); var targetPrefix = $(e.target).data('src'); var ajaxurl = 'https://' + $(e.target).data('src') + '.huijiwiki.com/api.php'; var redirectUrl = 'https://' + $(e.target).data('src') + '.huijiwiki.com' + '/wiki/' + mw.config.get('wgPageName'); $(e.target).append('<i class="fa fa-spinner fa-pulse"></i>'); this.targetPrefix = targetPrefix; this.ajaxurl = ajaxurl; this.redirectUrl = redirectUrl; if (this.isBatch) { this.interwikisource = 'templatemanager'; this.interwikipage = this.$element.data('manifest'); this._importBatch(); return; } this.interwikisource = mw.config.get('wgHuijiPrefix'); this.interwikipage = mw.config.get('wgPageName'); this.interwikipageid = mw.config.get('wgArticleId'); this.interwikipagename = mw.config.get('wgPageName'); this.interwikipagerevision = mw.config.get('wgRevisionId'); this._getToken();
              }, _getToken: function () {
                     $.ajax({
                            url: this.ajaxurl, data: { action: 'query', meta: 'tokens', format: 'json', origin: 'https://' + mw.config.get('wgHuijiPrefix') + '.huijiwiki.com', }, xhrFields: { withCredentials: true, }, dataType:
                                   'json', type: 'POST', context: this, success: function (data) { var token = data.query.tokens.csrftoken; this._queryPage(token); }, error: function (error) { console.log(error); },
                     });
              }, _queryData: function () { $.ajax({ url: mw.util.wikiScript('api'), data: { format: 'xml', action: 'query', titles: '首页', prop: 'revisions', rvprop: 'content', }, type: 'POST', success: function (data) { console.log(data); this._importData(data); }, error: function (xhr) { alert('Error: Request failed.'); }, }); }, _queryPage: function (token) {
                     $.ajax({
                            url: this.ajaxurl, data: { action: 'query', titles: mw.config.get('wgPageName'), format: 'json', origin: 'https://' + mw.config.get('wgHuijiPrefix') + '.huijiwiki.com', }, xhrFields: { withCredentials: true, }, type: 'post', success: $.proxy(function (data) {
                                   for (var key in data.query.pages) {
                                          if (key < 0) { this._importWiki(token); } else {
                                                 var warn = '<div class="alert alert-danger copy-warn alert-dismissible fade in" role="alert">' +
                                                        '<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>' + '<h4>页面已存在!</h4>' + '<p>点击覆盖，将覆盖您维基的同名页面内容。否则请关闭。</p>' + '<p><button type="button" class="btn btn-danger" data-loading-text="搬运中" autocomplete="off">覆盖</button></p>' + '</div>'; $('body').append(warn).on('click', '.copy-warn .btn', $.proxy(this._importWiki, this, token)); $('body').append(warn).on('click', '.copy-warn .close', function () { $('.copy-modal').modal('hide'); $('.copy-warn').remove(); });
                                          }
                                   }
                            }, this), error: function (error) { console.log(error); },
                     });
              }, _importBatch: function (token) {
                     var self = this; self.redirectUrl = window.location; var $btn = $('.copy-warn .btn').button('loading'); var api = new mw.ForeignApi(this.ajaxurl); var fromSitePrefix = this.interwikisource; api.post({ action: 'carrier', manifestName: this.interwikipage, force: true, }).done(function (data) {
                            var error = data.error || ''; if (data.error) {
                                   var options = {
                                          tag: 'import',
                                          type: 'error',
                                   }; mw.notification.notify(error.code, options);
                            } else { var options = { tag: 'import', type: 'info', }; mw.notification.notify('操作成功', options); } $('.copy-modal').modal('hide'); $('.copy-warn .close').trigger('click'); self._redirect();
                     }).fail(function (err, data) { var error = data.error || ''; if (error.code == 'busy-server') { var options = { tag: 'import', type: 'error', }; mw.notification.notify('零件配置有问题，请联系零件维护者。', options); } else if (error.code == 'bug') { var options = { tag: 'import', type: 'error', }; mw.notification.notify('服务出错，请稍后再试', options); } else if (error.code == 'no-right') { var options = { tag: 'import', type: 'error', }; mw.notification.notify('对不起，您在目标维基没有足够权限', options); } else if (data.error) { var options = { tag: 'import', type: 'error', }; mw.notification.notify(error.code, options); } $('.copy-modal').modal('hide'); $('.copy-warn .close').trigger('click'); self._redirect(); });
              }, _importWiki: function (token) {
                     var $btn = $('.copy-warn .btn').
                            button('loading'); var self = this; $.ajax({
                                   url: this.ajaxurl, data: { action: 'import', interwikisource: this.interwikisource, interwikipage: this.interwikipage, token: token, format: 'json', templates: true, origin: 'https://' + mw.config.get('wgHuijiPrefix') + '.huijiwiki.com', summary: 'interwiki import', }, type: 'post', xhrFields: { withCredentials: true, }, success: $.proxy(function (data) {
                                          var result = data.import || []; var error = data.error || ''; $('.copy .fa-spinner').remove(); if (result.length > 0) {
                                                 $btn.button('reset'); $('.copy-warn .close').trigger('click'); var options = { tag: 'import', type: 'info', }; $('.copy-modal').modal('hide'); this._redirect(token); var queries = []; var api = new mw.ForeignApi(self.ajaxurl); for (var i in result) { queries.push(api.post({ action: 'huiji', module: 'forklog', task: 'log', target: result[i].title, upstream: self.interwikisource, upstreamPageId: self.interwikipageid, upstreamPageName: self.interwikipage, upstreamPageRevision: self.interwikipagerevision, })); break; } $.when.apply($, queries).done(function () {
                                                        mw.
                                                               notification.notify('操作成功', options);
                                                 });
                                          } else if (error.code == 'cantimport') { var options = { tag: 'import', type: 'error', }; mw.notification.notify('您在目标维基没有管理员权限', options); } else if (error.code == 'unknown_interwikisource') { var options = { tag: 'import', type: 'error', }; mw.notification.notify('您选择的维基不能为当前维基', options); } else if (error.code == 'badinterwiki') { var options = { tag: 'import', type: 'error', }; mw.notification.notify('Sorry，源维基上的相关页面可能已经被删除或移动了', options); } else { console.log(data); } $('.copy-modal').modal('hide'); $('.copy-warn .close').trigger('click');
                                   }, this), error: function (error) { console.log(error); $('.copy-modal').modal('hide'); $('.copy-warn .close').trigger('click'); },
                            });
              }, _redirect: function (token) { if (window.location != this.redirectUrl) { window.location = this.redirectUrl; } else { this.$element.button('reset'); this.$element.attr('disabled', 'disabled'); this.$element.addClass('quite'); } },
       }; $(function () {
              var c = new
                     ForkWiki(); c.init(); mw.ForkWiki = c;
       });
}, { "css": [".copy-warn{position:fixed;top:300px;left:50%;margin-left:-215px;z-index:1051}.copy-warn .btn{float:right;margin-top:10px}.copy-modal .modal-dialog{margin-top:200px}.copy-modal .modal-body{max-height:300px;overflow-y:auto}.copy-modal p{margin-bottom:5px}.copy-modal .copy{cursor:pointer} .mw-templatedata-doc-params td dt,.mw-templatedata-doc-params td dd{margin:0 0.8em 0 0.2em;display:inline}table.mw-templatedata-doc-params{width:100% }"] }, null, null);; mw.loader.implement("skins.dragonhide.wikieditor.sisyphus@85ie6", function ($, jQuery, require, module) {
       (function ($) {
              function getElementIdentifier(el) { return '[id=' + el.attr("id") + '][name=' + el.attr("name") + ']'; } $.fn.sisyphus = function (options) { var identifier = $.map(this, function (obj) { return getElementIdentifier($(obj)); }).join(); var sisyphus = Sisyphus.getInstance(identifier); sisyphus.protect(this, options); return sisyphus; }; var browserStorage = {}; browserStorage.isAvailable = function () { if (typeof $.jStorage === "object") { return true; } try { return localStorage.getItem; } catch (e) { return false; } }; browserStorage.set = function (key, value) { if (typeof $.jStorage === "object") { $.jStorage.set(key, value + ""); } else { try { localStorage.setItem(key, value + ""); } catch (e) { } } }; browserStorage.get = function (key) { if (typeof $.jStorage === "object") { var result = $.jStorage.get(key); return result ? result.toString() : result; } else { return localStorage.getItem(key); } }; browserStorage.remove = function (key) {
                     if (typeof $.jStorage === "object") {
                            $.jStorage.
                            deleteKey(key);
                     } else { localStorage.removeItem(key); }
              }; Sisyphus = (function () {
                     var params = { instantiated: [], started: [] }; var CKEDITOR = window.CKEDITOR; function init() {
                            return {
                                   setInstanceIdentifier: function (identifier) { this.identifier = identifier; }, getInstanceIdentifier: function () { return this.identifier; }, setInitialOptions: function (options) { var defaults = { excludeFields: [], customKeySuffix: "", locationBased: false, timeout: 0, autoRelease: true, onBeforeSave: function () { }, onSave: function () { }, onBeforeRestore: function () { }, onRestore: function () { }, onRelease: function () { } }; this.options = this.options || $.extend(defaults, options); this.browserStorage = browserStorage; }, setOptions: function (options) { this.options = this.options || this.setInitialOptions(options); this.options = $.extend(this.options, options); }, protect: function (targets, options) {
                                          this.setOptions(options); targets = targets || {}; var self = this; this.targets = this.targets || []; if (self.options.name) { this.href = self.options.name; } else {
                                                 this.href = location.hostname + location.pathname
                                                        + location.search + location.hash;
                                          } this.targets = $.merge(this.targets, targets); this.targets = $.unique(this.targets); this.targets = $(this.targets); if (!this.browserStorage.isAvailable()) { return false; } if (this.restoreCanBeMade()) { var callback_result = self.options.onBeforeRestore.call(self); if (callback_result === undefined || callback_result) { self.restoreAllData(); } } if (this.options.autoRelease) { self.bindReleaseData(); } if (!params.started[this.getInstanceIdentifier()]) { if (self.isCKEditorPresent()) { var intervalId = setInterval(function () { if (CKEDITOR.isLoaded) { clearInterval(intervalId); self.bindSaveData(); params.started[self.getInstanceIdentifier()] = true; } }, 100); } else { self.bindSaveData(); params.started[self.getInstanceIdentifier()] = true; } }
                                   }, isCKEditorPresent: function () { if (this.isCKEditorExists()) { CKEDITOR.isLoaded = false; CKEDITOR.on('instanceReady', function () { CKEDITOR.isLoaded = true; }); return true; } else { return false; } }, isCKEditorExists: function () { return typeof CKEDITOR !== "undefined"; }, findFieldsToProtect:
                                          function (target) { return target.find(":input").not(":submit").not(":reset").not(":button").not(":file").not(":password").not(":disabled").not("[readonly]"); }, bindSaveData: function () { var self = this; if (self.options.timeout) { self.saveDataByTimeout(); } self.targets.each(function () { var targetFormIdAndName = getElementIdentifier($(this)); self.findFieldsToProtect($(this)).each(function () { if ($.inArray(this, self.options.excludeFields) !== -1) { return true; } var field = $(this); var prefix = (self.options.locationBased ? self.href : "") + targetFormIdAndName + getElementIdentifier(field) + self.options.customKeySuffix; if (field.is(":text") || field.is("textarea")) { if (!self.options.timeout) { self.bindSaveDataImmediately(field, prefix); } } self.bindSaveDataOnChange(field); }); }); }, saveAllData: function () {
                                                 var self = this; self.targets.each(function () {
                                                        var targetFormIdAndName = getElementIdentifier($(this)); var multiCheckboxCache = {}; self.findFieldsToProtect($(this)).each(function () {
                                                               var field = $(this); if ($.inArray(this, self.options.
                                                                      excludeFields) !== -1 || (field.attr("name") === undefined && field.attr("id") === undefined)) { return true; } var prefix = (self.options.locationBased ? self.href : "") + targetFormIdAndName + getElementIdentifier(field) + self.options.customKeySuffix; var value = field.val(); if (field.is(":checkbox")) { var name = field.attr("name"); if (name !== undefined && name.indexOf("[") !== -1) { if (multiCheckboxCache[name] === true) { return; } value = []; $("[name='" + name + "']:checked").each(function () { value.push($(this).val()); }); multiCheckboxCache[name] = true; } else { value = field.is(":checked"); } self.saveToBrowserStorage(prefix, value, false); } else if (field.is(":radio")) { if (field.is(":checked")) { value = field.val(); self.saveToBrowserStorage(prefix, value, false); } } else {
                                                                             if (self.isCKEditorExists()) { var editor = CKEDITOR.instances[field.attr("name")] || CKEDITOR.instances[field.attr("id")]; if (editor) { editor.updateElement(); self.saveToBrowserStorage(prefix, field.val(), false); } else { self.saveToBrowserStorage(prefix, value, false); } } else {
                                                                                    self.saveToBrowserStorage(
                                                                                           prefix, value, false);
                                                                             }
                                                                      }
                                                        });
                                                 }); self.options.onSave.call(self);
                                          }, restoreAllData: function () { var self = this; var restored = false; self.targets.each(function () { var target = $(this); var targetFormIdAndName = getElementIdentifier($(this)); self.findFieldsToProtect(target).each(function () { if ($.inArray(this, self.options.excludeFields) !== -1) { return true; } var field = $(this); var prefix = (self.options.locationBased ? self.href : "") + targetFormIdAndName + getElementIdentifier(field) + self.options.customKeySuffix; var resque = self.browserStorage.get(prefix); if (resque !== null) { self.restoreFieldsData(field, resque); restored = true; } }); }); if (restored) { self.options.onRestore.call(self); } }, restoreCanBeMade: function () {
                                                 var self = this; var restored = false; self.targets.each(function () {
                                                        var target = $(this); var targetFormIdAndName = getElementIdentifier($(this)); self.findFieldsToProtect(target).each(function () {
                                                               if ($.inArray(this, self.options.excludeFields) !== -1) { return true; } var field = $(this); var prefix = (self.options.locationBased ? self.href : "")
                                                                      + targetFormIdAndName + getElementIdentifier(field) + self.options.customKeySuffix; var resque = self.browserStorage.get(prefix); if (resque !== null) { restored = true; }
                                                        });
                                                 }); return restored;
                                          }, restoreFieldsData: function (field, resque) { if (field.attr("name") === undefined && field.attr("id") === undefined) { return false; } var name = field.attr("name"); if (field.is(":checkbox") && resque !== "false" && (name === undefined || name.indexOf("[") === -1)) { field.prop("checked", true); } else if (field.is(":checkbox") && resque === "false" && (name === undefined || name.indexOf("[") === -1)) { field.prop("checked", false); } else if (field.is(":radio")) { if (field.val() === resque) { field.prop("checked", true); } } else if (name === undefined || name.indexOf("[") === -1) { field.val(resque); } else { resque = resque.split(","); field.val(resque); } }, bindSaveDataImmediately: function (field, prefix) {
                                                 var self = this; if ('onpropertychange' in field) { field.get(0).onpropertychange = function () { self.saveToBrowserStorage(prefix, field.val()); }; } else {
                                                        field.get(0).oninput = function () {
                                                               self.
                                                                      saveToBrowserStorage(prefix, field.val());
                                                        };
                                                 } if (this.isCKEditorExists()) { var editor = CKEDITOR.instances[field.attr("name")] || CKEDITOR.instances[field.attr("id")]; if (editor) { editor.document.on('keyup', function () { editor.updateElement(); self.saveToBrowserStorage(prefix, field.val()); }); } }
                                          }, saveToBrowserStorage: function (key, value, fireCallback) { var self = this; var callback_result = self.options.onBeforeSave.call(self); if (callback_result !== undefined && callback_result === false) { return; } fireCallback = fireCallback === undefined ? true : fireCallback; this.browserStorage.set(key, value); if (fireCallback && value !== "") { this.options.onSave.call(this); } }, bindSaveDataOnChange: function (field) { var self = this; field.change(function () { self.saveAllData(); }); }, saveDataByTimeout: function () { var self = this; var targetForms = self.targets; setTimeout((function () { function timeout() { self.saveAllData(); setTimeout(timeout, self.options.timeout * 1000); } return timeout; })(targetForms), self.options.timeout * 1000); }, bindReleaseData: function () {
                                                 var
                                                 self = this; self.targets.each(function () { var target = $(this); var formIdAndName = getElementIdentifier(target); $(this).bind("submit reset", function () { self.releaseData(formIdAndName, self.findFieldsToProtect(target)); }); });
                                          }, manuallyReleaseData: function () { var self = this; self.targets.each(function () { var target = $(this); var formIdAndName = getElementIdentifier(target); self.releaseData(formIdAndName, self.findFieldsToProtect(target)); }); }, releaseData: function (targetFormIdAndName, fieldsToProtect) { var released = false; var self = this; params.started[self.getInstanceIdentifier()] = false; fieldsToProtect.each(function () { if ($.inArray(this, self.options.excludeFields) !== -1) { return true; } var field = $(this); var prefix = (self.options.locationBased ? self.href : "") + targetFormIdAndName + getElementIdentifier(field) + self.options.customKeySuffix; self.browserStorage.remove(prefix); released = true; }); if (released) { self.options.onRelease.call(self); } }
                            };
                     } return {
                            getInstance: function (identifier) {
                                   if (!params.instantiated[identifier]) {
                                          params.instantiated[identifier] = init(); params.instantiated[identifier].setInstanceIdentifier(identifier); params.instantiated[identifier].setInitialOptions();
                                   } if (identifier) { return params.instantiated[identifier]; } return params.instantiated[identifier];
                            }, free: function () { params = { instantiated: [], started: [] }; return null; }, version: '1.1.2'
                     };
              })();
       })(jQuery);
}, null, null, null);; mw.loader.implement("skins.dragonhide.legacy.bottomjs@10psr", function ($, jQuery, require, module) {
       ; (function () {
              'use strict'; function FastClick(layer, options) {
                     var oldOnClick; options = options || {}; this.trackingClick = false; this.trackingClickStart = 0; this.targetElement = null; this.touchStartX = 0; this.touchStartY = 0; this.lastTouchIdentifier = 0; this.touchBoundary = options.touchBoundary || 10; this.layer = layer; this.tapDelay = options.tapDelay || 200; this.tapTimeout = options.tapTimeout || 700; if (FastClick.notNeeded(layer)) { return; } function bind(method, context) { return function () { return method.apply(context, arguments); }; } var methods = ['onMouse', 'onClick', 'onTouchStart', 'onTouchMove', 'onTouchEnd', 'onTouchCancel']; var context = this; for (var i = 0, l = methods.length; i < l; i++) { context[methods[i]] = bind(context[methods[i]], context); } if (deviceIsAndroid) { layer.addEventListener('mouseover', this.onMouse, true); layer.addEventListener('mousedown', this.onMouse, true); layer.addEventListener('mouseup', this.onMouse, true); } layer.
                            addEventListener('click', this.onClick, true); layer.addEventListener('touchstart', this.onTouchStart, false); layer.addEventListener('touchmove', this.onTouchMove, false); layer.addEventListener('touchend', this.onTouchEnd, false); layer.addEventListener('touchcancel', this.onTouchCancel, false); if (!Event.prototype.stopImmediatePropagation) { layer.removeEventListener = function (type, callback, capture) { var rmv = Node.prototype.removeEventListener; if (type === 'click') { rmv.call(layer, type, callback.hijacked || callback, capture); } else { rmv.call(layer, type, callback, capture); } }; layer.addEventListener = function (type, callback, capture) { var adv = Node.prototype.addEventListener; if (type === 'click') { adv.call(layer, type, callback.hijacked || (callback.hijacked = function (event) { if (!event.propagationStopped) { callback(event); } }), capture); } else { adv.call(layer, type, callback, capture); } }; } if (typeof layer.onclick === 'function') {
                                   oldOnClick = layer.onclick; layer.addEventListener('click', function (event) { oldOnClick(event); }, false); layer.onclick =
                                          null;
                            }
              } var deviceIsWindowsPhone = navigator.userAgent.indexOf("Windows Phone") >= 0; var deviceIsAndroid = navigator.userAgent.indexOf('Android') > 0 && !deviceIsWindowsPhone; var deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent) && !deviceIsWindowsPhone; var deviceIsIOS4 = deviceIsIOS && (/OS 4_\d(_\d)?/).test(navigator.userAgent); var deviceIsIOSWithBadTarget = deviceIsIOS && (/OS [6-7]_\d/).test(navigator.userAgent); var deviceIsBlackBerry10 = navigator.userAgent.indexOf('BB10') > 0; FastClick.prototype.needsClick = function (target) { switch (target.nodeName.toLowerCase()) { case 'button': case 'select': case 'textarea': if (target.disabled) { return true; } break; case 'input': if ((deviceIsIOS && target.type === 'file') || target.disabled) { return true; } break; case 'label': case 'iframe': case 'video': return true; }return (/\bneedsclick\b/).test(target.className); }; FastClick.prototype.needsFocus = function (target) {
                     switch (target.nodeName.toLowerCase()) {
                            case 'textarea': return true; case 'select': return !deviceIsAndroid; case 'input': switch (target.type
                            ) { case 'button': case 'checkbox': case 'file': case 'image': case 'radio': case 'submit': return false; }return !target.disabled && !target.readOnly; default: return (/\bneedsfocus\b/).test(target.className);
                     }
              }; FastClick.prototype.sendClick = function (targetElement, event) { var clickEvent, touch; if (document.activeElement && document.activeElement !== targetElement) { document.activeElement.blur(); } touch = event.changedTouches[0]; clickEvent = document.createEvent('MouseEvents'); clickEvent.initMouseEvent(this.determineEventType(targetElement), true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null); clickEvent.forwardedTouchEvent = true; targetElement.dispatchEvent(clickEvent); }; FastClick.prototype.determineEventType = function (targetElement) { if (deviceIsAndroid && targetElement.tagName.toLowerCase() === 'select') { return 'mousedown'; } return 'click'; }; FastClick.prototype.focus = function (targetElement) {
                     var length; if (deviceIsIOS && targetElement.setSelectionRange && targetElement.type.indexOf
                            ('date') !== 0 && targetElement.type !== 'time' && targetElement.type !== 'month') { length = targetElement.value.length; targetElement.setSelectionRange(length, length); } else { targetElement.focus(); }
              }; FastClick.prototype.updateScrollParent = function (targetElement) { var scrollParent, parentElement; scrollParent = targetElement.fastClickScrollParent; if (!scrollParent || !scrollParent.contains(targetElement)) { parentElement = targetElement; do { if (parentElement.scrollHeight > parentElement.offsetHeight) { scrollParent = parentElement; targetElement.fastClickScrollParent = parentElement; break; } parentElement = parentElement.parentElement; } while (parentElement); } if (scrollParent) { scrollParent.fastClickLastScrollTop = scrollParent.scrollTop; } }; FastClick.prototype.getTargetElementFromEventTarget = function (eventTarget) { if (eventTarget.nodeType === Node.TEXT_NODE) { return eventTarget.parentNode; } return eventTarget; }; FastClick.prototype.onTouchStart = function (event) {
                     var targetElement, touch, selection; if (event.targetTouches.length > 1) { return true; }
                     targetElement = this.getTargetElementFromEventTarget(event.target); touch = event.targetTouches[0]; if (deviceIsIOS) { selection = window.getSelection(); if (selection.rangeCount && !selection.isCollapsed) { return true; } if (!deviceIsIOS4) { if (touch.identifier && touch.identifier === this.lastTouchIdentifier) { event.preventDefault(); return false; } this.lastTouchIdentifier = touch.identifier; this.updateScrollParent(targetElement); } } if (!(event.target.getAttribute('contenteditable') == 'true')) { this.trackingClick = true; } this.trackingClickStart = event.timeStamp; this.targetElement = targetElement; this.touchStartX = touch.pageX; this.touchStartY = touch.pageY; if ((event.timeStamp - this.lastClickTime) < this.tapDelay) { event.preventDefault(); } return true;
              }; FastClick.prototype.touchHasMoved = function (event) { var touch = event.changedTouches[0], boundary = this.touchBoundary; if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) { return true; } return false; }; FastClick.prototype.onTouchMove = function (
                     event) { if (!this.trackingClick) { return true; } if (this.targetElement !== this.getTargetElementFromEventTarget(event.target) || this.touchHasMoved(event)) { this.trackingClick = false; this.targetElement = null; } return true; }; FastClick.prototype.findControl = function (labelElement) { if (labelElement.control !== undefined) { return labelElement.control; } if (labelElement.htmlFor) { return document.getElementById(labelElement.htmlFor); } return labelElement.querySelector('button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea'); }; FastClick.prototype.onTouchEnd = function (event) {
                            var forElement, trackingClickStart, targetTagName, scrollParent, touch, targetElement = this.targetElement; if (!this.trackingClick) { return true; } if ((event.timeStamp - this.lastClickTime) < this.tapDelay) { this.cancelNextClick = true; return true; } if ((event.timeStamp - this.trackingClickStart) > this.tapTimeout) { return true; } this.cancelNextClick = false; this.lastClickTime = event.timeStamp; trackingClickStart = this.trackingClickStart; this.
                                   trackingClick = false; this.trackingClickStart = 0; if (deviceIsIOSWithBadTarget) { touch = event.changedTouches[0]; targetElement = document.elementFromPoint(touch.pageX - window.pageXOffset, touch.pageY - window.pageYOffset) || targetElement; targetElement.fastClickScrollParent = this.targetElement.fastClickScrollParent; } targetTagName = targetElement.tagName.toLowerCase(); if (targetTagName === 'label') { forElement = this.findControl(targetElement); if (forElement) { this.focus(targetElement); if (deviceIsAndroid) { return false; } targetElement = forElement; } } else if (this.needsFocus(targetElement)) { if ((event.timeStamp - trackingClickStart) > 100 || (deviceIsIOS && window.top !== window && targetTagName === 'input')) { this.targetElement = null; return false; } this.focus(targetElement); this.sendClick(targetElement, event); if (!deviceIsIOS || targetTagName !== 'select') { this.targetElement = null; event.preventDefault(); } return false; } if (deviceIsIOS && !deviceIsIOS4) {
                                          scrollParent = targetElement.fastClickScrollParent; if (scrollParent && scrollParent.
                                                 fastClickLastScrollTop !== scrollParent.scrollTop) { return true; }
                                   } if (!this.needsClick(targetElement)) { event.preventDefault(); this.sendClick(targetElement, event); } return false;
                     }; FastClick.prototype.onTouchCancel = function () { this.trackingClick = false; this.targetElement = null; }; FastClick.prototype.onMouse = function (event) { if (!this.targetElement) { return true; } if (event.forwardedTouchEvent) { return true; } if (!event.cancelable) { return true; } if (!this.needsClick(this.targetElement) || this.cancelNextClick) { if (event.stopImmediatePropagation) { event.stopImmediatePropagation(); } else { event.propagationStopped = true; } event.stopPropagation(); event.preventDefault(); return false; } return true; }; FastClick.prototype.onClick = function (event) { var permitted; if (this.trackingClick) { this.targetElement = null; this.trackingClick = false; return true; } if (event.target.type === 'submit' && event.detail === 0) { return true; } permitted = this.onMouse(event); if (!permitted) { this.targetElement = null; } return permitted; }; FastClick.prototype.destroy =
                            function () { var layer = this.layer; if (deviceIsAndroid) { layer.removeEventListener('mouseover', this.onMouse, true); layer.removeEventListener('mousedown', this.onMouse, true); layer.removeEventListener('mouseup', this.onMouse, true); } layer.removeEventListener('click', this.onClick, true); layer.removeEventListener('touchstart', this.onTouchStart, false); layer.removeEventListener('touchmove', this.onTouchMove, false); layer.removeEventListener('touchend', this.onTouchEnd, false); layer.removeEventListener('touchcancel', this.onTouchCancel, false); }; FastClick.notNeeded = function (layer) {
                                   var metaViewport; var chromeVersion; var blackberryVersion; var firefoxVersion; if (typeof window.ontouchstart === 'undefined') { return true; } chromeVersion = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [, 0])[1]; if (chromeVersion) {
                                          if (deviceIsAndroid) {
                                                 metaViewport = document.querySelector('meta[name=viewport]'); if (metaViewport) {
                                                        if (metaViewport.content.indexOf('user-scalable=no') !== -1) { return true; } if (chromeVersion > 31 && document.documentElement
                                                               .scrollWidth <= window.outerWidth) { return true; }
                                                 }
                                          } else { return true; }
                                   } if (deviceIsBlackBerry10) { blackberryVersion = navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/); if (blackberryVersion[1] >= 10 && blackberryVersion[2] >= 3) { metaViewport = document.querySelector('meta[name=viewport]'); if (metaViewport) { if (metaViewport.content.indexOf('user-scalable=no') !== -1) { return true; } if (document.documentElement.scrollWidth <= window.outerWidth) { return true; } } } } if (layer.style.msTouchAction === 'none' || layer.style.touchAction === 'manipulation') { return true; } firefoxVersion = +(/Firefox\/([0-9]+)/.exec(navigator.userAgent) || [, 0])[1]; if (firefoxVersion >= 27) { metaViewport = document.querySelector('meta[name=viewport]'); if (metaViewport && (metaViewport.content.indexOf('user-scalable=no') !== -1 || document.documentElement.scrollWidth <= window.outerWidth)) { return true; } } if (layer.style.touchAction === 'none' || layer.style.touchAction === 'manipulation') { return true; } return false;
                            }; FastClick.attach = function (layer, options) {
                                   return new
                                          FastClick(layer, options);
                            }; if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) { define(function () { return FastClick; }); } else if (typeof module !== 'undefined' && module.exports) { module.exports = FastClick.attach; module.exports.FastClick = FastClick; } else { window.FastClick = FastClick; }
       }()); $(document).ready(function () { try { FastClick.attach(document.body); } catch (e) { } })
       var doc = document; var _wheelData = -1; function bind(obj, type, handler) { var node = typeof obj == 'string' ? $(obj) : obj; if (node.addEventListener) { node.addEventListener(type, handler, false); } else if (node.attachEvent) { node.attachEvent('on' + type, handler); } else { node['on' + type] = handler; } } function mouseWheel(obj, handler) { var node = typeof obj == 'string' ? $(obj) : obj; bind(node, 'mousewheel', function (event) { var data = -getWheelData(event); handler(data); if (document.all) { window.event.returnValue = false; } else { event.preventDefault(); } }); bind(node, 'DOMMouseScroll', function (event) { var data = getWheelData(event); handler(data); event.preventDefault(); }); function getWheelData(event) { var e = event || window.event; return e.wheelDelta ? e.wheelDelta : e.detail * 40; } } function addScroll() { this.init.apply(this, arguments); } addScroll.prototype = {
              init: function (mainBox, contentBox, className) {
                     var mainBox = doc.getElementById(mainBox); var contentBox = doc.getElementById(contentBox); var scrollDiv = this._createScroll(mainBox, className); this._resizeScorll(
                            scrollDiv, mainBox, contentBox); this._responseScroll(scrollDiv, mainBox, contentBox); this._tragScroll(scrollDiv, mainBox, contentBox); this._wheelChange(scrollDiv, mainBox, contentBox); this._clickScroll(scrollDiv, mainBox, contentBox);
              }, _createScroll: function (mainBox, className) { var _scrollBox = doc.createElement('div'); var _scroll = doc.createElement('div'); var span = doc.createElement('span'); _scrollBox.appendChild(_scroll); _scroll.appendChild(span); _scroll.id = className; mainBox.appendChild(_scrollBox); return _scroll; }, _resizeScorll: function (element, mainBox, contentBox) {
                     var p = element.parentNode; var conHeight = contentBox.offsetHeight; var _height = mainBox.offsetHeight; var _scrollWidth = element.offsetWidth; p.style.width = _scrollWidth + 'px'; p.style.height = _height + 'px'; p.style.left = '225px'; p.style.position = 'absolute'; var _scrollHeight = parseInt(_height * (_height / conHeight)); if (_scrollHeight >= mainBox.clientHeight) { element.parentNode.style.display = 'none'; } else { element.parentNode.style.display = 'block'; } element.style.
                            height = _scrollHeight + 'px';
              }, _responseScroll: function (element, mainBox, contentBox) { var _this = this; $(window).resize(function () { _this._resizeScorll(element, mainBox, contentBox); }); }, _tragScroll: function (element, mainBox, contentBox) {
                     var mainHeight = mainBox.clientHeight; element.onmousedown = function (event) { var _this = this; var _scrollTop = element.offsetTop; var e = event || window.event; var top = e.clientY; $('#wrapper').addClass('dropping'); document.onmousemove = scrollGo; document.onmouseup = function (event) { this.onmousemove = null; $('#wrapper').removeClass('dropping'); }; function scrollGo(event) { var e = event || window.event; var _top = e.clientY; var _t = _top - top + _scrollTop; if (_t > mainBox.clientHeight - element.offsetHeight) { _t = mainBox.clientHeight - element.offsetHeight; } if (_t <= 0) { _t = 0; } element.style.top = _t + 'px'; contentBox.style.top = -_t * (contentBox.offsetHeight / mainBox.offsetHeight) + 'px'; _wheelData = _t; } }; element.onmouseover = function () { this.style.background = 'rgba(225,225,225,.35)'; }; element.onmouseout = function () {
                            this.style.
                            background = 'rgba(225,225,225,.15)';
                     };
              }, _wheelChange: function (element, mainBox, contentBox) { var node = typeof mainBox == 'string' ? $(mainBox) : mainBox; var flag = 0, rate = 0, wheelFlag = 0; if (node) { mouseWheel(node, function (data) { wheelFlag += data; if (_wheelData >= 0) { flag = _wheelData; element.style.top = flag + 'px'; wheelFlag = _wheelData * 12; _wheelData = -1; } else { flag = wheelFlag / 12; } if (flag <= 0) { flag = 0; wheelFlag = 0; } if (flag >= mainBox.offsetHeight - element.offsetHeight) { flag = mainBox.clientHeight - element.offsetHeight; wheelFlag = (mainBox.clientHeight - element.offsetHeight) * 12; } element.style.top = flag + 'px'; contentBox.style.top = -flag * (contentBox.offsetHeight / mainBox.offsetHeight) + 'px'; }); } }, _clickScroll: function (element, mainBox, contentBox) {
                     var p = element.parentNode; p.onclick = function (event) {
                            var e = event || window.event; var t = e.target || e.srcElement; var sTop = document.documentElement.scrollTop > 0 ? document.documentElement.scrollTop : document.body.scrollTop; var top = mainBox.offsetTop; var _top = e.clientY - top - element.offsetHeight / 2; if (_top <= 0) {
                                   _top = 0;
                            } if (_top >= mainBox.clientHeight - element.offsetHeight) { _top = mainBox.clientHeight - element.offsetHeight; } if (t != element) { element.style.top = _top + 'px'; contentBox.style.top = -_top * (contentBox.offsetHeight / mainBox.offsetHeight) + 'px'; _wheelData = _top; }
                     };
              },
       }; function insertRecordIntoDB(url, navigatorInfo, fromSource, userId, userName, wikiSite, siteName, titleName, articleId) { jQuery.post(url, { navigatorInfo: navigatorInfo, fromSource: fromSource, userId: userId, userName: userName, articleId: articleId, titleName: titleName, siteName: siteName, wikiSite: wikiSite, }) } function insertIntoMongoDB(url, navigatorInfo, fromSource, userId, userName, wikiSite, siteName, titleName, articleId, page_ns) { jQuery.ajax({ url: url, type: 'POST', data: { client_userAgent: navigatorInfo, source: fromSource, user_id: userId, user_name: userName, article_id: articleId, article_title: titleName, page_ns: page_ns, site_name: siteName, site_prefix: wikiSite, }, success: function (data) { }, error: function (data) { console.log(data) } }) } function clearSourceUrl(sourceUrl) {
              var e = new
                     RegExp('^(?:(?:https?|ftp):)/*(?:[^@]+@)?([^:/#]+)'), matches = e.exec(sourceUrl); return matches ? matches[1] : sourceUrl;
       } $(document).ready(function () {
              $('#mw-content-text table.wikitable, .mw-datatable, .smwb-factbox, .smwtable, .mw-json, .property-page-results, .mw-tabular').each(function () { if (!$(this).parent('div.table-responsive').length) { $(this).wrap('<div class="table-responsive table-wrapper"></div>'); } }); $('#preftoc').addClass('nav nav-tabs'); $('.sidebar-create .createboxInput').keyup(function () { if ($(this).val().length > 0) { $('.sidebar-create .btn-primary').removeClass('disabled'); $('.create-group input[name=title]').removeClass('badge-ribbon'); } else { $('.sidebar-create .btn-primary').addClass('disabled'); } }); var useVE = true; $('#mw-input-preload').change(function (e) {
                     if ($('#mw-input-preload option:selected').attr('prefix') != '') { $('.createbox input[name=prefix]').val($('#mw-input-preload option:selected').attr('prefix')); } var val = $('#mw-input-preload option:selected').val(); var title = mw.
                            Title.newFromText(val); if (title && title.getNamespaceId() == 106) { e.preventDefault(); val = $('.createbox input[name=title]').val(); window.location = '/wiki/特殊:编辑表格/' + title.getMain() + '/' + $('.createbox input[name=title]').val(); return; } $('.sidebar-create .createbox input[name=prefix]').val($('#mw-input-preload option:selected').attr('prefix')); useVE = false; $('.sidebar-create .createbox').submit();
              }); $('.sidebar-create .createbox').on('submit', function (e) { if ($('.sidebar-create .create-group input[name=title]').val() == '') { e.preventDefault(); $('.sidebar-create .create-group input[name=title]').addClass('badge-ribbon'); return false; } if (useVE) { $('.sidebar-create .createbox input[name=prefix]').remove(); $('.sidebar-create .createbox select[name=preload]').remove(); $('.sidebar-create .createbox input[name=action]').attr('name', 'veaction'); } }); var banned = false; var fromSource = document.referrer; var ua = navigator.userAgent; var uaLower = ua.toLowerCase(); var userId = mw.config.get('wgUserId'); var
                     userName = mw.config.get('wgUserName'); var wikiSite = mw.config.get('wgHuijiPrefix'); var siteName = mw.config.get('wgSiteName'); var titleName = mw.config.get('wgPageName'); var articleId = mw.config.get('wgArticleId'); var pageNamespace = mw.config.get('wgNamespaceNumber'); if (document.cookie.indexOf('_gat') < 0) { banned = true; } ['headless', 'spider', 'bot'].forEach(function (condition) { if (uaLower.indexOf(condition) > -1) { banned = true; } }); if (!banned) { insertIntoMongoDB('https://huijidata.com/events/view', '', fromSource, userId, userName, wikiSite, siteName, titleName, articleId, pageNamespace); } $('#menu-toggle,.sidebar-toggle').click(function (e) {
                            e.preventDefault(); $('#wrapper').toggleClass('toggled').toggleClass('smtoggled'); $('#menu-toggle').toggleClass('menu-active').toggleClass('smenu-active'); if (window.innerWidth >= 1440) { $('#wrapper').removeClass('smtoggled'); $('#menu-toggle').removeClass('smenu-active'); } else if (window.innerWidth <= 767 && window.innerWidth >= 320) {
                                   if ($('#wrapper').hasClass('smtoggled')) {
                                          $('body').append(
                                                 '<div class="phone-wrapper"></div>');
                                   } else { $('.phone-wrapper').remove(); }
                            } if ($('#wrapper').hasClass('toggled')) { localStorage.setItem('menu-toggle', 'toggled'); setTimeout(function () { mw.hook('huiji.sidebarOpen').fire(); }, 1000); } else { localStorage.setItem('menu-toggle', ''); setTimeout(function () { mw.hook('huiji.sidebarClose').fire(); }, 1000); }
                     }); $('body').on('touchstart', '.phone-wrapper', function () { $('#menu-toggle').trigger('click'); }); $('.hub-list li').click(function (e) { e.stopPropagation(); $(this).addClass('active').siblings().removeClass('active'); var toggle = $(this).data('toggle'); $('.a').find('.' + toggle + '-link').addClass('active').siblings().removeClass('active'); }); $('.wiki-toggle').click(function () { $('#icon-section').toggleClass('xs-show'); }); $('.search-toggle').click(function () { $('#huiji-mobile-search-form').toggleClass('visible-xs-block'); }); $('.subnav #subnav-toggle').click(function () {
                            var length; $('.subnav .nav .dropdown').toggle(); length = $('.subnav .nav>.dropdown').length; if ($(
                                   '.subnav .nav').hasClass('phone-open')) { $('.subnav .nav').removeClass('phone-open'); } else { $('.subnav .nav').addClass('phone-open'); } if (length < 6) { $('.subnav .nav .dropdown-menu').css('height', '192px'); } else { $('.subnav .nav .dropdown-menu').css('height', length * 32 + 'px'); }
                     }); $('.nav .dropdown>a').click(function () { $(this).parent().addClass('phone-active').siblings().removeClass('phone-active'); $('.nav .dropdown').find('.dropdown-menu').removeClass('phone-active'); $(this).parent().find('.dropdown-menu').addClass('phone-active'); $('.mw-echo-overlay').remove(); }); $('a[href^="#cite_note"]').each(function () { var self = $(this); var options = {}; var ref = $.escape(self.attr('href')); var innerHtml = $(ref + ' .reference-text').html(); options.content = innerHtml; options.placement = 'auto'; options.html = true; options.trigger = 'focus'; self.popover(options); }); $('.navbar-toggle').on('click', function () { $('.navbar-collapse').toggleClass('xs-show'); }); $('#wiki-outer-body').on('click', 'a[href^="#cite_note-"]', function (e) {
                            e.
                                   preventDefault();
                     }); $(document).on('change', '#subnav-select', function () { window.location = $(this).val(); }); $('#ca-purge').click(function (event) { event.preventDefault(); ga('send', 'event', 'sidebar', 'click', 'purge', 1); window.location.assign(window.updateQueryStringParameter(location.href, 'action', 'purge')); }); $('#ca-debug').click(function (event) { event.preventDefault(); ga('send', 'event', 'sidebar', 'click', 'debug', 1); window.location.assign(window.updateQueryStringParameter(location.href, 'debug', '1')); }); $('[data-toggle="popover"]').popover({ container: 'body' }); $('[data-toggle="tooltip"]').tooltip({ container: 'body' }); $('.tip').tooltip(); function userCard(username, carduser) {
                            $.ajax({
                                   url: '/api.php', data: { action: 'getuserfollowinfo', username: carduser, format: 'json', }, type: 'post', success: function (data) {
                                          var res = data.getuserfollowinfo; var sex; if (!res.result) return; if (res.result.gender == 'female') { res.result.gender = "<i class='fa fa-venus'></i>"; sex = '她'; } else if (res.result.gender == 'male') {
                                                 res.result.gender
                                                 = "<i class='fa fa-mars'></i>"; sex = '他';
                                          } else { res.result.gender = "<i class='fa fa-venus-mars'></i>"; sex = 'Ta'; } var ps = ''; var com = ''; var follow = ''; var isfollow = ''; if (res.result.minefollowerhim.length == 0) { ps = '暂无'; } else { $.each(res.result.minefollowerhim, function (i, item) { ps += "<a href='/wiki/User:" + item + "'>" + item + '</a><i>、</i>'; }); } if (res.result.commonfollow.length == 0) { com = '暂无'; } else { $.each(res.result.commonfollow, function (i, item) { com += "<a href='/wiki/User:" + item + "'>" + item + '</a><i>、</i>'; }); } if (res.result.is_follow == 'Y') { follow = '取关'; isfollow = 'unfollow'; } else { follow = '关注'; } if (!res.result.status) { res.result.status = ''; } var msg = "<div class='user-card-top'>" + res.result.url + "<div class='user-card-info'><span><a href='/wiki/User:" + res.result.username + "'>" + res.result.designation + '</a></span><span>' + res.result.gender + '</span>' + '<span>' + res.result.level + '</span><p>' + mw.html.escape(res.result.status) +
                                                 "</p></div></div><div class='user-card-mid'><div class='user-card-msg'><ul><li>关注：<span>" + res.result.usercounts + '</span></li>' + "<li class='cut'>被关注：<span>" + res.result.usercounted + '</span></li><li>编辑：<span>' + res.result.editcount + "</span></li></ul><a class='user-card-follow " + isfollow + " user-user-follow' data-username = '" + res.result.username + "'><i class='fa fa-plus-square-o'></i>" + follow + '</a>' + "<a href='/index.php?title=%E7%89%B9%E6%AE%8A:GiveGift&amp;user=" + res.result.username + "'  class='user-card-gift' title='特殊:GiveGift'><i class='fa fa-gift'></i>礼物</a></div></div>" + "<div class='user-card-bottom'><p class='follow-him'>我关注的人也关注了" + sex + '(' + res.result.minefollowerhim.length + '):<span>' + ps + "</span></p><p class='common-follow'>共同关注(" + res.result.commonfollow.length + '):<span>' + com + '</span></p></div>'; $('.user-card').empty().append(msg); $('.follow-him i:last,.common-follow i:last').remove(); if (username == null) {
                                                        $('.user-card-bottom').remove(
                                                 );
                                                 } else if (username == res.result.username) { $('.user-card-follow,.user-card-gift').hide(); } getDirection();
                                   },
                            });
                     } function getPos(ele) { var position = { x: null, y: null }; var offsetParent = ele.offsetParent; while (offsetParent) { position.x += ele.offsetLeft; position.y += ele.offsetTop; ele = ele.offsetParent; offsetParent = ele.offsetParent; } return position; } var enter = false; var exist = false; var own = false; var x, y, posX, posY, thisposX, thisposY; var card; function appendCard(carduser) { if ((enter && !exist) || (enter && !own)) { $('.user-card').remove(); userCard(mw.config.get('wgUserName'), carduser); $('body').append(card); exist = true; hoverCard(); thisposX = posX; thisposY = posY; } } function hoverCard() { $('.user-card').hover(function () { enter = true; }, function () { enter = false; removeCard(); }); } function removeCard() { setTimeout(function () { if (!enter && exist) { $('.user-card').remove(); exist = false; } }, 500); } function getDirection() {
                            var height = $('.user-card').height(); var scroll = $(document).scrollTop(); if (posY - scroll <= 420) {
                                   $('.user-card').css({
                                          top: +(
                                                 posY + 10) + 'px', left: +(posX - x) + 'px',
                                   }); setTimeout(function () { $('.user-card').css({ top: +(posY + y) + 'px', opacity: '1', }); }, 600);
                            } else { $('.user-card').css({ top: +(posY + y - height - 10) + 'px', left: +(posX - x) + 'px', }); setTimeout(function () { $('.user-card').css({ top: +(posY - height) + 'px', opacity: '1', }); }, 600); }
                     } $('#wiki-body .body a[title="Special:UserLogin"]').click(); if ($.fn.dropdown) $('.dropdown-toggle').dropdown(); var didScroll; var lastScrollTop = 0; var delta = 100; var navbarHeight = $('header').outerHeight(); var ww = $(window).width(); $(window).scroll(function (event) { didScroll = true; }); setInterval(function () { if (didScroll) { hasScrolled(); didScroll = false; } }, 250); function hasScrolled() {
                            var st = $(this).scrollTop(); if (Math.abs(lastScrollTop - st) <= delta) return; if (st > lastScrollTop && st > navbarHeight) {
                                   if (!$('.subnav').hasClass('alwaysDown')) { $('.subnav').removeClass('subnav-down').addClass('subnav-up'); } if (ww < 768) { $('.navbar').removeClass('nav-down').addClass('nav-up'); } $('#sidebar-wrapper').removeClass(
                                          'sidebar-wrapper-down').addClass('sidebar-wrapper-up');
                            } else { if (!$('.subnav').hasClass('alwaysDown')) { $('.subnav').removeClass('subnav-down').addClass('subnav-up'); } if (st + $(window).height() < $(document).height()) { $('.subnav').removeClass('subnav-up').addClass('subnav-down'); if (ww < 768) { $('.navbar').removeClass('nav-up').addClass('nav-down'); } $('#sidebar-wrapper').removeClass('sidebar-wrapper-up').addClass('sidebar-wrapper-down'); } } if (st == 0) { $('.subnav').removeClass('subnav-down subnav-up'); if (ww < 768) { $('.navbar').removeClass('nav-up nav-down'); } $('#sidebar-wrapper').removeClass('sidebar-wrapper-down sidebar-wrapper-up'); } lastScrollTop = st;
                     } $('h2, h3, h4, h5, h6').hover(function () { $(this).find('.mw-editsection').addClass('edit-active'); }, function () { $(this).find('.mw-editsection').removeClass('edit-active'); }); $('#home-feed-content,#bodyContent').on('click', '.show-btn', function () {
                            $(this).parents('.user-home-item-img-wrap').addClass('show'); $(this).hide(); $(this).parents(
                                   '.user-home-item-img-wrap').append('<span class="hide-btn">收起</span>');
                     }).on('click', '.hide-btn', function () { $(this).parents('.user-home-item-img-wrap').removeClass('show'); $(this).siblings('.show-btn').show(); $(this).remove(); }); videoInitialize(); $('body').on('click', '.video-player,.video-circle', function (e) {
                            e.preventDefault(); e.stopPropagation(); var src = $(this).parents('.video-play-wrap').find('.video-player').data('video'); var title = $(this).parents('.video-play-wrap').find('.video-player').data('video-title'); var from = $(this).parents('.video-play-wrap').find('.video-player').data('video-from'); var link = $(this).parents('.video-play-wrap').find('.video-player').data('video-link'); ga('send', 'event', 'video', 'play', from, 1); if (document.body.clientWidth > 768) {
                                   $('body').append('<div class="video-wrapper"><span class="icon-close video-close"></span><h3>' + title + '</h4><span class="video-from">来自 ' + from + '</span><iframe src="' + src + '" frameborder="0" allowfullscreen="true"></iframe></div>')
                                   ;
                            } else { window.open(link); }
                     }).on('click', '.video-close', function () { $('.video-wrapper').remove(); }); var mousedown = false; var positionX, positionY; $('body').on('mousedown', '.video-wrapper', function (e) { mousedown = true; positionX = e.clientX; positionY = e.clientY; }).on('mousemove', '.video-wrapper', function (e) { var x, y, nx, ny; if (mousedown === true) { $(this).css('cursor', 'move'); x = e.clientX - positionX; y = e.clientY - positionY; nx = parseInt($(this).css('left')); ny = parseInt($(this).css('top')); $(this).css({ left: x + nx + 'px', top: y + ny + 'px' }); positionX = e.clientX; positionY = e.clientY; } }).on('mouseup', '.video-wrapper', function () { mousedown = false; $(this).css('cursor', 'default'); }); if ($('.toc-sidebar .toc-ul-wrap>ul').length > 0) { var maxheight = $(window).height() - $('.toc-sidebar').offset().top + 'px'; $('.toc-ul-wrap').css('height', maxheight); $('.toc-sidebar .toc-ul-wrap>ul').css('max-height', maxheight); } var file; var formData = new FormData(); $('#caption-file').on('change', function (e) { file = e.target.files[0]; }); $('.caption-submit').
                            click(function () { var self = $(this); formData.append('action', 'srtsubmit'); formData.append('id', $('#caption-id').val()); formData.append('description', $('#caption-des').val()); formData.append('file', file); formData.append('format', 'json'); self.attr('disabled', ''); $.ajax({ url: '/api.php', data: { action: 'query', meta: 'tokens', type: 'csrf', format: 'json', }, success: function (data) { var token = data.query.tokens.csrftoken; formData.append('token', token); $.ajax({ url: '/api.php', data: formData, processData: false, contentType: false, type: 'POST', success: function (data) { console.log(data); self.removeAttr('disabled'); if ($('#caption-id').val() == '') { mw.notification.notify('id不能为空'); return; } else if (!file) { mw.notification.notify('文件不可为空'); return; } if (data.error) { mw.notification.notify('上传失败'); return; } if (data.srtsubmit.res.message == 'success') { var src = data.srtsubmit.res.result; window.location.href = src; } else { mw.notification.notify(data.srtsubmit.res.message); } }, }); }, }); }); $('.create-srt').click(
                                   function (e) { e.preventDefault(); $('#caption-wrap').addClass('wrap-show'); }); $('.trans-modal-close').click(function (e) { $(this).parents('.trans-modal-wrap').removeClass('wrap-show'); }); $('#site-follower-count').click(function (e) {
                                          mw.loader.using('oojs-ui', function () {
                                                 function ProcessDialog(config) { ProcessDialog.super.call(this, config); } OO.inheritClass(ProcessDialog, OO.ui.ProcessDialog); ProcessDialog.static.title = '关注本维基的用户'; ProcessDialog.static.name = 'follower'; ProcessDialog.static.actions = [{ action: 'more', label: '更多', flags: 'primary', modes: 'hasmore' }, { label: '关闭', flags: 'safe', modes: 'nomore' }, { label: '关闭', flags: 'safe', modes: 'hasmore' },]; ProcessDialog.prototype.initialize = function () { ProcessDialog.super.prototype.initialize.apply(this, arguments); this.content = new OO.ui.PanelLayout({ $: this.$, padded: true, expanded: false }); this.$body.append(this.content.$element); }; ProcessDialog.prototype.getSetupProcess = function (data) {
                                                        return ProcessDialog.super.prototype.getSetupProcess.call(
                                                               this, data).next(function () {
                                                                      var dfd = $.Deferred(); var user = mw.config.get('wgUserName'); var site_name = mw.config.get('wgHuijiPrefix'); var dialog = this; $.post(mw.util.wikiScript(), { action: 'ajax', rs: 'wfUsersFollowingSiteResponse', rsargs: [user, site_name], }, function (data) {
                                                                             var res = jQuery.parseJSON(data); if (res.success) {
                                                                                    if (res.result.length == 0) { var sitename = mw.config.get('wgSiteName'); dfd.rejected(new OO.ui.Error('暂时还没人关注' + sitename + ' >-<'), { recoverable: false, }); } else {
                                                                                           var msg = '<li class="row follower-popup"><span class="col-xs-8 col-md-8 col-sm-8">昵称</span><span class="hidden-xs col-md-2 col-sm-2">等级</span><span class="col-xs-4 col-md-2 col-sm-2">编辑</span></li>'; dialog.content.$element.append(msg); if (res.result.length > 4) {
                                                                                                  var i; for (i = 0; i < 4; i++) {
                                                                                                         var msg = '<li class="row follower-popup"><span class="col-xs-8 col-md-8 col-sm-8 follower-info"><a href="' + res.result[i].userUrl + '" class="follower-headimg">' + res.result[i].url + '</a><a href="' + res.result[i].userUrl +
                                                                                                                '" class="follower-username">' + res.result[i].user + '</a></span><span class="follower-level hidden-xs col-md-2 col-sm-2">' + res.result[i].level + '</span><span class="follower-editnum col-xs-4 col-md-2 col-sm-2">' + res.result[i].count + '</span></li>'; dialog.content.$element.append(msg);
                                                                                                  } dialog.actions.setMode('hasmore'); dfd.resolve();
                                                                                           } else { $.each(res.result, function (i, item) { var msg = '<li class="row follower-popup"><span class="col-xs-8 col-md-8 col-sm-8 follower-info"><a href="' + item.userUrl + '" class="follower-headimg">' + item.url + '</a><a href="' + item.userUrl + '" class="follower-username">' + item.user + '</a></span><span class="follower-level hidden-xs col-md-2 col-sm-2">' + item.level + '</span><span class="follower-editnum col-xs-4 col-md-2 col-sm-2">' + item.count + '</span></li>'; dialog.content.$element.append(msg); }); dialog.actions.setMode('nomore'); dfd.resolve(); }
                                                                                    }
                                                                             } else { dfd.rejected(new OO.ui.Error('网络通讯错误')); }
                                                                      }); return dfd.promise();
                                                               }, this);
                                                 }; ProcessDialog.prototype.getActionProcess =
                                                        function (action) { var dialog = this; if (action === 'more') { return new OO.ui.Process(function () { dialog.close({ action: action }); window.open('/wiki/特殊:编辑排行'); }); } else { return new OO.ui.Process(function () { dialog.close({ action: action }); }); } return ProcessDialog.super.prototype.getActionProcess.call(this, action); }; ProcessDialog.prototype.getBodyHeight = function () { return 300; }; var windowManager = new OO.ui.WindowManager(); $('body').append(windowManager.$element); var processDialog = new ProcessDialog({ size: 'medium', }); windowManager.addWindows([processDialog]); windowManager.openWindow(processDialog);
                                          });
                                   }); if (!window.is_mobile_device()) { window.setTimeout(function () { $('.mw-editsection a').each(function () { $this = $(this); if ($this.html().indexOf('&') > -1) { $this.html($this.text()); } }); }, 2000); } else {
                                          var collapseRow = {
                                                 heading: '', init: function (options) {
                                                        this.heading = options.heading; var $headingElement = $('h2>span.mw-headline'); for (var i in $headingElement) {
                                                               if ($.inArray($headingElement[i].textContent, this.
                                                                      heading) >= 0 && $($headingElement[i])) { $wraper = $($headingElement[i]).parent(); $wraper.attr('id', 'collapseHead_' + i); $wraper.attr('data-toggle', 'collapse'); $wraper.attr('href', '#collapse_' + i); $wraper.next().attr('id', 'collapse_' + i); $wraper.next().attr('class', 'collapse'); $($headingElement[i]).after('<span class="glyphicon glyphicon-triangle-bottom collapse_arrow"></span>'); $('#collapse_' + i).on('show.bs.collapse', function () { $('.collapse_arrow').attr('class', 'glyphicon glyphicon-triangle-top collapse_arrow'); $wraper.removeClass('secondary'); }); $('#collapse_' + i).on('hide.bs.collapse', function () { $('.collapse_arrow').attr('class', 'glyphicon glyphicon-triangle-bottom collapse_arrow'); $wraper.addClass('secondary'); }); }
                                                        } $('.collapse_arrow').css('padding', '0 10px 0 10px'); $('.collapse_arrow').css('font-size', '15px'); $('.collapse_arrow').css('vertical-align', 'middle');
                                                 },
                                          }; var option = { heading: ['引用与注释', '引用和注释', '引用', '注释', '出处', '来源', '参考资料', 'References'], };
                                          collapseRow.init(option);
                                   } $('.insertusername').html(mw.config.get('wgUserName') || '朋友');
       }); (function ($) {
              $.fn.caret = function (pos) {
                     var target = this[0]; if (!target) return; var isContentEditable = target.contentEditable === 'true'; if (arguments.length == 0) {
                            if (window.getSelection) { if (isContentEditable) { target.focus(); var range1 = window.getSelection().getRangeAt(0), range2 = range1.cloneRange(); range2.selectNodeContents(target); range2.setEnd(range1.endContainer, range1.endOffset); return range2.toString().length; } return target.selectionStart; } if (document.selection) { target.focus(); if (isContentEditable) { var range1 = document.selection.createRange(), range2 = document.body.createTextRange(); range2.moveToElementText(target); range2.setEndPoint('EndToEnd', range1); return range2.text.length; } var pos = 0, range = target.createTextRange(), range2 = document.selection.createRange().duplicate(), bookmark = range2.getBookmark(); range.moveToBookmark(bookmark); while (range.moveStart('character', -1) !== 0) pos++; return pos; } if (target.
                                   selectionStart) return target.selectionStart; return;
                     } if (pos == -1) pos = this[isContentEditable ? 'text' : 'val']().length; if (window.getSelection) { if (isContentEditable) { target.focus(); window.getSelection().collapse(target.firstChild, pos); } else target.setSelectionRange(pos, pos); } else if (document.body.createTextRange) { if (isContentEditable) { var range = document.body.createTextRange(); range.moveToElementText(target); range.moveStart('character', pos); range.collapse(true); range.select(); } else { var range = target.createTextRange(); range.move('character', pos); range.select(); } } if (!isContentEditable) target.focus(); return this;
              };
       })(jQuery); var mention = {
              follow: [], area: $('.mention-area').get(0), popover: $('.mention-popover').get(0), pos: '', active: false, getFollow: function () {
                     if (mw.config.get('wgUserName') == null) { return false; } $.ajax({
                            url: '/api.php', data: { action: 'huiji', module: 'userfollow', type: 'myfollower', limit: 50, format: 'json', utf8: '1', }, type: 'post', success: function (data) {
                                   if (data.myFollower) {
                                          data.myFollower.forEach(
                                                 function (item) { mention.follow.push(item.userName); });
                                   }
                            },
                     });
              }, addModal: function () { }, trigger: function (e) { e.preventDefault(); var self = this; var caret = $('.emoji-wysiwyg-editor').caret(); var content = $('.emoji-wysiwyg-editor').text().substring(caret - 1, caret); if (content == '@') { this.addTag(); this.getPos(); this.addPopover(this.follow); } }, addTag: function () { var start = $('.emoji-wysiwyg-editor').caret(); var content; content = $('.mention-area.emoji-wysiwyg-editor').text().substring(0, start - 1) + '<b>' + $('.mention-area.emoji-wysiwyg-editor').text().substring(start - 1, start) + '</b>' + $('.mention-area.emoji-wysiwyg-editor').text().substring(start); $('.mention-area.emoji-wysiwyg-editor').val(content); }, getPos: function () { }, addPopover: function (follow) {
                     var content = ''; content = '<div class="mention-popover">' + '<div class="mention-edit">' + '<input class="mention-input">' + '</div>' + '<p class="mention-title">选择你想@的人</p>' + '<ul class="mention-list"></ul>' + '</div>'; $('.mention-area.emoji-wysiwyg-editor').after(
                            content); $('.mention-input').focus(); $('.mention-input').keypress(function (event) { if (event.keyCode == 13 || event.which == 13) { console.log('catch'); event.preventDefault(); } });
              }, getUser: function (e) { var self = this; $('body').on('keyup', '.mention-input', function (e) { var that = $(this).val().toLowerCase(); $('.mention-list').empty().append('<li>' + $(this).val() + '</li>'); if (that == '') return; self.follow.forEach(function (item) { if (item.toLowerCase().indexOf(that) >= 0 && $('.mention-list li').length <= 4) { $('.mention-list').append('<li>' + item + '</li>'); } }); }); }, clickUser: function (e) { var self = this; $('body').on('mousedown', '.mention-list li', function (e) { var content = $('.mention-area.emoji-wysiwyg-editor').val().replace('<b>@</b>', '@' + $(this).text() + ' '); $('.mention-area.emoji-wysiwyg-editor').val(content).text(content); }); }, popoverBlur: function () {
                     $('body').on('blur', '.mention-input', function () {
                            var content = $('.mention-area.emoji-wysiwyg-editor').val().replace('<b>@</b>', '@'); $('.mention-area.emoji-wysiwyg-editor').val
                                   (content); if ($('.mention-popover').length > 0) $('.mention-popover').remove();
                     });
              }, savaPos: function () { var self = this; $('body').on('blur', '.emoji-wysiwyg-editor', function (e) { var that = $(this); function checkBtn() { if (self.active) { that.focus(); self.active = false; } } setTimeout(checkBtn(), 100); }).on('mousedown touchstart', '.emoji-picker-icon', function () { self.active = true; }).on('mousedown touchstart', '#custom_comment', function (e) { e.stopPropagation(); self.active = true; $('.custom-face').show(200); }); }, addEvent: function () { this.getUser(); this.clickUser(); this.popoverBlur(); this.savaPos(); }, init: function () { var self = this; if (this.area) { this.getFollow(); this.addModal(); } },
       }; $(function () { mention.init(); }); function SidebarLoader(containerClass, apiParams, dataPath) { this.$container = $(containerClass); this.apiParams = apiParams; this.dataPath = dataPath; this.api = new mw.Api(); } SidebarLoader.prototype.load = function () { var that = this; this.api.get(this.apiParams).done(that.callback.bind(that)); }; SidebarLoader.prototype.
              callback = function (ret) { for (var i in this.dataPath) { ret = ret[this.dataPath[i]]; } this.$container.hide().html(ret).slideDown({ done: function () { $(window).trigger('resize'); } }); }
       $(document).ready(function () {
              var authorLoader = function () { var sl = new SidebarLoader('.left-author-container', { action: 'query', titles: mw.config.get('wgRelevantPageName'), prop: 'huijiinfo', inprop: 'besteditors', format: 'json' }, ['query', 'pages', mw.config.get('wgArticleId'), 'besteditors']); sl.load(); $(this).off("mouseenter mouseleave touch"); }
              var sysopLoader = function () { var sl = new SidebarLoader('.left-manager-container', { action: 'query', meta: 'siteinfo', siprop: 'general', format: 'json' }, ['query', 'general', 'sysop']); sl.load(); $(this).off("mouseenter mouseleave touch"); }
              $('.left-author').hover(authorLoader); $('.left-author').on("tap", authorLoader); $('.left-manager').hover(sysopLoader); $('.left-manager').on("tap", sysopLoader);
       }); (function (document, history, location) {
              var HISTORY_SUPPORT = !!(history && history.pushState); var anchorScrolls = {
                     ANCHOR_REGEX: /^#[^ ]+$/, OFFSET_HEIGHT_PX: 50, init: function () { this.scrollToCurrent(); $(window).on('hashchange', $.proxy(this, 'scrollToCurrent')); $(window).on('click', 'a', $.proxy(this, 'delegateAnchors')); }, getFixedOffset: function () { return ($('#skin-root').height() || 50) + ($('.skin-subnav ').height() || 36) + 10; }, scrollIfAnchor: function (href, pushToHistory) { var match, anchorOffset; if (!this.ANCHOR_REGEX.test(href)) { return false; } match = document.getElementById(href.slice(1)); if (match) { anchorOffset = $(match).offset().top - this.getFixedOffset(); $('html, body').animate({ scrollTop: anchorOffset }); if (HISTORY_SUPPORT && pushToHistory) { history.pushState({}, document.title, location.pathname + href); } } return !!match; }, scrollToCurrent: function (e) {
                            if (this.
                                   scrollIfAnchor(window.location.hash) && e) { e.preventDefault(); }
                     }, delegateAnchors: function (e) { var elem = e.target; if (this.scrollIfAnchor(elem.getAttribute('href'), true)) { e.preventDefault(); } },
              }; $(document).ready($.proxy(anchorScrolls, 'init'));
       })(window.document, window.history, window.location);
}, { "css": [":root{--font-monospace:Menlo,Monaco,Consolas,\"Courier New\",monospace}.plainlinks a:after{content:\"\" !important;display:none !important}.img-fit{max-width:100%;height:auto}.img-fullwidth{width:100%;height:auto}.img-inline-responsive{max-width:100%;height:auto;display:inline-block} .nobreak{white-space:nowrap} .huijiapp .app-hide{display:none!important} .mw-jsonconfig{font-size:12px;line-height:1.2;table-layout:auto;width:100%;font-family:inherit}.mw-jsonconfig th,.mw-jsonconfig td{padding:4px;padding-right:4px;vertical-align:top;font-family:var(--font-monospace)}.mw-jsonconfig .mw-jsonconfig-value{font-family:var(--font-monospace);width:100%}.mw-jsonconfig .mw-jsonconfig-value-null{}.mw-jsonconfig tr{margin-bottom:0.5em }.mw-jsonconfig th{min-width:5em}.mw-jsonconfig td{font-style:normal}.mw-tabular{overflow-x:scroll;display:block}dt,dd{ margin-top:7.5px;margin-bottom:7.5px;line-height:1.8}li.gallerybox div.thumb{ border:none;background-color:var(--modal)}.mw-changeslist-line-inner>p{ display:inline!important}.header .navbar-form .navbar-search{ left:auto}"] }, null, null);; mw.loader.implement("mediawiki.notification@xhjn9", function ($, jQuery, require, module) {
       (function () {
              'use strict'; var notification, $area, openNotificationCount = 0, isPageReady = false, preReadyNotifQueue = [], rAF = window.requestAnimationFrame || setTimeout; function Notification(message, options) {
                     var $notification, $notificationContent; $notification = $('<div>').data('mw-notification', this).attr('role', 'status').addClass(['mw-notification', options.autoHide ? 'mw-notification-autohide' : 'mw-notification-noautohide']); if (options.tag) { options.tag = options.tag.replace(/[ _-]+/g, '-').replace(/[^-a-z0-9]+/ig, ''); if (options.tag) { $notification.addClass('mw-notification-tag-' + options.tag); } else { delete options.tag; } } if (options.type) { options.type = options.type.replace(/[ _-]+/g, '-').replace(/[^-a-z0-9]+/ig, ''); $notification.addClass('mw-notification-type-' + options.type); } if (options.title) { $('<div>').addClass('mw-notification-title').text(options.title).appendTo($notification); } if (options.id) {
                            $notification.attr('id',
                                   options.id);
                     } if (options.classes) { $notification.addClass(options.classes); } $notificationContent = $('<div>').addClass('mw-notification-content'); if (typeof message === 'object') { if (message instanceof mw.Message) { $notificationContent.html(message.parse()); } else { $notificationContent.append(message); } } else { $notificationContent.text(message); } $notificationContent.appendTo($notification); this.autoHideSeconds = options.autoHideSeconds && notification.autoHideSeconds[options.autoHideSeconds] || notification.autoHideSeconds.short; this.isOpen = false; this.isPaused = true; this.message = message; this.options = options; this.$notification = $notification; if (options.visibleTimeout) { this.timeout = require('mediawiki.visibleTimeout'); } else { this.timeout = { set: setTimeout, clear: clearTimeout }; }
              } Notification.prototype.start = function () {
                     var options, $notification, $tagMatches, autohideCount; $area.css('display', ''); if (this.isOpen) { return; } this.isOpen = true; openNotificationCount++; options = this.options; $notification = this.$notification; if (
                            options.tag) { $tagMatches = $area.find('.mw-notification-tag-' + options.tag); } if (options.tag && $tagMatches.length) { $tagMatches.each(function () { var notif = $(this).data('mw-notification'); if (notif && notif.isOpen) { notif.$notification.css({ position: 'absolute', width: notif.$notification.width() }).css(notif.$notification.position()).addClass('mw-notification-replaced'); notif.close(); } }); $notification.insertBefore($tagMatches.first()).addClass('mw-notification-visible'); } else { $area.append($notification); rAF(function () { rAF(function () { $notification.addClass('mw-notification-visible'); }); }); } autohideCount = $area.find('.mw-notification-autohide').length; if (autohideCount <= notification.autoHideLimit) { this.resume(); }
              }; Notification.prototype.pause = function () { if (this.isPaused) { return; } this.isPaused = true; if (this.timeoutId) { this.timeout.clear(this.timeoutId); delete this.timeoutId; } }; Notification.prototype.resume = function () {
                     var notif = this; if (!notif.isPaused) { return; } if (notif.options.autoHide) {
                            notif.isPaused = false
                            ; notif.timeoutId = notif.timeout.set(function () { delete notif.timeoutId; notif.close(); }, this.autoHideSeconds * 1000);
                     }
              }; Notification.prototype.close = function () { var notif = this; if (!this.isOpen) { return; } this.isOpen = false; openNotificationCount--; this.pause(); this.$notification.removeClass('mw-notification-autohide'); notification.resume(); rAF(function () { notif.$notification.removeClass('mw-notification-visible'); setTimeout(function () { if (openNotificationCount === 0) { $area.css('display', 'none'); notif.$notification.remove(); } else { notif.$notification.slideUp('fast', function () { $(this).remove(); }); } }, 500); }); }; function callEachNotification($notifications, fn) { $notifications.each(function () { var notif = $(this).data('mw-notification'); if (notif) { notif[fn](); } }); } function init() {
                     var offset, $overlay, skinHasArea, isFloating = false; function updateAreaMode() {
                            var shouldFloat = window.pageYOffset > offset.top; if (isFloating === shouldFloat) { return; } isFloating = shouldFloat; $area.toggleClass('mw-notification-area-floating',
                                   isFloating).toggleClass('mw-notification-area-layout', !isFloating);
                     } $area = $('.mw-notification-area[data-mw="interface"]').first(); skinHasArea = $area.length > 0; if (!skinHasArea) { $area = $('<div>').addClass('mw-notification-area'); $overlay = $('<div>').addClass('mw-notification-area-overlay'); $overlay.append($area); $(document.body).append($overlay); } $area.addClass('mw-notification-area-layout').attr('id', 'mw-notification-area').on({ mouseenter: notification.pause, mouseleave: notification.resume }).on('click', '.mw-notification', function () { var notif = $(this).data('mw-notification'); if (notif) { notif.close(); } }).on('click', 'a, select, .oo-ui-dropdownInputWidget', function (e) { e.stopPropagation(); }); rAF(function () { var notif; offset = skinHasArea ? $area.offset() : mw.util.$content.offset(); updateAreaMode(); $area.css('display', 'none'); $(window).on('scroll', updateAreaMode); isPageReady = true; while (preReadyNotifQueue.length) { notif = preReadyNotifQueue.shift(); notif.start(); } });
              } notification = {
                     pause: function () {
                            callEachNotification($area.children('.mw-notification'), 'pause');
                     }, resume: function () { callEachNotification($area.children('.mw-notification-autohide').slice(0, notification.autoHideLimit), 'resume'); }, notify: function (message, options) { var notif; options = $.extend({}, notification.defaults, options); notif = new Notification(message, options); if (isPageReady) { notif.start(); } else { preReadyNotifQueue.push(notif); } return notif; }, defaults: { autoHide: true, autoHideSeconds: 'short', tag: null, title: null, type: null, visibleTimeout: true, id: false, classes: false }, autoHideSeconds: { short: 5, long: 30 }, autoHideLimit: 3
              }; if (window.QUnit) { $area = $(document.body); } else { $(init); } mw.notification = notification;
       }());
}, { "css": [".mw-notification-area{position:absolute}.mw-notification-area-floating{position:fixed}.mw-notification-area-overlay{position:absolute;top:0;right:0;height:100%;width:100%; overflow:hidden;pointer-events:none}.mw-notification-area{top:0;right:0; padding:1em;width:20em;line-height:1.35;z-index:10000}.mw-notification{padding:0.75em 1.5em;margin-bottom:0.5em;border:solid 1px #ddd;background-color:#fff;color:#000; cursor:pointer;opacity:0;-webkit-transform:translateX(35px);transform:translateX(35px);-webkit-transition:opacity 0.35s ease-in-out,-webkit-transform 0.35s ease-in-out;transition:opacity 0.35s ease-in-out,transform 0.35s ease-in-out;pointer-events:auto}.mw-notification-visible{opacity:1;-webkit-transform:translateX(0);transform:translateX(0)}.mw-notification-replaced{opacity:0;-webkit-transform:translateY(-35px);transform:translateY(-35px);pointer-events:none}.mw-notification-title{font-weight:bold}.mw-notification.mw-notification-type-warn{ background-color:#fef6e7; border-color:#fc3}.mw-notification.mw-notification-type-error{ background-color:#fee7e6; border-color:#d33}.mw-notification.mw-notification-type-success{ background-color:#d5fdf4; border-color:#14866d}", "@media print {\n\t.mw-notification-area{display:none}}"] }, null, null);; mw.loader.implement("mediawiki.visibleTimeout@1bmk6", {
       main: "visibleTimeout.js", files: {
              "visibleTimeout.js": function (require, module, exports) {
                     var doc, HIDDEN, VISIBILITY_CHANGE, nextId = 1, clearHandles = Object.create(null); function init(overrideDoc) { doc = overrideDoc || document; if (doc.hidden !== undefined) { HIDDEN = 'hidden'; VISIBILITY_CHANGE = 'visibilitychange'; } else if (doc.mozHidden !== undefined) { HIDDEN = 'mozHidden'; VISIBILITY_CHANGE = 'mozvisibilitychange'; } else if (doc.webkitHidden !== undefined) { HIDDEN = 'webkitHidden'; VISIBILITY_CHANGE = 'webkitvisibilitychange'; } } init(); module.exports = {
                            set: function (fn, delay) {
                                   var nativeId = null, visibleId = nextId++, lastStartedAt = mw.now(); function clearHandle() { if (nativeId !== null) { clearTimeout(nativeId); nativeId = null; } delete clearHandles[visibleId]; if (VISIBILITY_CHANGE) { doc.removeEventListener(VISIBILITY_CHANGE, visibilityCheck, false); } } function onComplete() { clearHandle(); fn(); } function visibilityCheck() {
                                          var now = mw.now(); if (HIDDEN && doc[HIDDEN]) {
                                                 if (nativeId !== null) {
                                                        delay = Math.
                                                               max(0, delay - Math.max(0, now - lastStartedAt)); if (delay === 0) { onComplete(); } else { clearTimeout(nativeId); nativeId = null; }
                                                 }
                                          } else { if (nativeId === null) { lastStartedAt = now; nativeId = setTimeout(onComplete, delay); } }
                                   } clearHandles[visibleId] = clearHandle; if (VISIBILITY_CHANGE) { doc.addEventListener(VISIBILITY_CHANGE, visibilityCheck, false); } visibilityCheck(); return visibleId;
                            }, clear: function (visibleId) { if (visibleId in clearHandles) { clearHandles[visibleId](); } }
                     }; if (window.QUnit) { module.exports.init = init; }
              }
       }
}, null, null, null);; mw.loader.implement("skins.dragonhide.legacy.js@1oow5", function ($, jQuery, require, module) {
       if (typeof jQuery === 'undefined') { throw new Error('Bootstrap\'s JavaScript requires jQuery') } +function ($) {
              'use strict'; function transitionEnd() {
                     var el = document.createElement('bootstrap')
                     var transEndEventNames = { WebkitTransition: 'webkitTransitionEnd', MozTransition: 'transitionend', OTransition: 'oTransitionEnd otransitionend', transition: 'transitionend' }
                     for (var name in transEndEventNames) { if (el.style[name] !== undefined) { return { end: transEndEventNames[name] } } } return false
              } $.fn.emulateTransitionEnd = function (duration) {
                     var called = false
                     var $el = this
                     $(this).one('bsTransitionEnd', function () { called = true })
                     var callback = function () { if (!called) $($el).trigger($.support.transition.end) }
                     setTimeout(callback, duration)
                     return this
              }
              $(function () {
                     $.support.transition = transitionEnd()
                     if (!$.support.transition) return
                     $.event.special.bsTransitionEnd = { bindType: $.support.transition.end, delegateType: $.support.transition.end, handle: function (e) { if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments) } }
              })
       }(jQuery); +function ($) {
              'use strict'; var dismiss = '[data-dismiss="alert"]'
              var Alert = function (el) { $(el).on('click', dismiss, this.close) }
              Alert.VERSION = '3.2.0'
              Alert.prototype.close = function (e) {
                     var $this = $(this)
                     var selector = $this.attr('data-target')
                     if (!selector) {
                            selector = $this.attr('href')
                            selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '')
                     } var $parent = $(selector)
                     if (e) e.preventDefault()
                     if (!$parent.length) { $parent = $this.hasClass('alert') ? $this : $this.parent() } $parent.trigger(e = $.Event('close.bs.alert'))
                     if (e.isDefaultPrevented()) return
                     $parent.removeClass('in')
                     function removeElement() { $parent.detach().trigger('closed.bs.alert').remove() } $.support.transition && $parent.hasClass('fade') ? $parent.one('bsTransitionEnd', removeElement).emulateTransitionEnd(150) : removeElement()
              }
              function Plugin(option) {
                     return this.each(function () {
                            var $this = $(this)
                            var data = $this.data('bs.alert')
                            if (!data) $this.data('bs.alert', (data = new Alert(this)))
                            if (typeof option == 'string') data[option].call($this)
                     })
              } var old = $.fn.alert
              $.fn.alert = Plugin
              $.fn.alert.Constructor = Alert
              $.fn.alert.noConflict = function () {
                     $.fn.alert = old
                     return this
              }
              $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)
       }(jQuery); +function ($) {
              'use strict'; var Button = function (element, options) {
                     this.$element = $(element)
                     this.options = $.extend({}, Button.DEFAULTS, options)
                     this.isLoading = false
              }
              Button.VERSION = '3.2.0'
              Button.DEFAULTS = { loadingText: 'loading...' }
              Button.prototype.setState = function (state) {
                     var d = 'disabled'
                     var $el = this.$element
                     var val = $el.is('input') ? 'val' : 'html'
                     var data = $el.data()
                     state = state + 'Text'
                     if (data.resetText == null) $el.data('resetText', $el[val]())
                     $el[val](data[state] == null ? this.options[state] : data[state])
                     setTimeout($.proxy(function () {
                            if (state == 'loadingText') {
                                   this.isLoading = true
                                   $el.addClass(d).attr(d, d)
                            } else if (this.isLoading) {
                                   this.isLoading = false
                                   $el.removeClass(d).removeAttr(d)
                            }
                     }, this), 0)
              }
              Button.prototype.toggle = function () {
                     var changed = true
                     var $parent = this.$element.closest('[data-toggle="buttons"]')
                     if ($parent.length) {
                            var $input = this.$element.find('input')
                            if ($input.prop('type') == 'radio') {
                                   if ($input.prop('checked') && this.$element.hasClass('active')) changed = false
                                   else $parent.find('.active').removeClass('active')
                            } if (changed) $input.prop('checked', !this.$element.hasClass('active')).trigger('change')
                     } if (changed) this.$element.toggleClass('active')
              }
              function Plugin(option) {
                     return this.each(function () {
                            var $this = $(this)
                            var data = $this.data('bs.button')
                            var options = typeof option == 'object' && option
                            if (!data) $this.data('bs.button', (data = new Button(this, options)))
                            if (option == 'toggle') data.toggle()
                            else if (option) data.setState(option)
                     })
              } var old = $.fn.button
              $.fn.button = Plugin
              $.fn.button.Constructor = Button
              $.fn.button.noConflict = function () {
                     $.fn.button = old
                     return this
              }
              $(document).on('click.bs.button.data-api', '[data-toggle^="button"]', function (e) {
                     var $btn = $(e.target)
                     if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')
                     Plugin.call($btn, 'toggle')
                     e.preventDefault()
              })
       }(jQuery); +function ($) {
              'use strict'; var Carousel = function (element, options) {
                     this.$element = $(element).on('keydown.bs.carousel', $.proxy(this.keydown, this))
                     this.$indicators = this.$element.find('.carousel-indicators')
                     this.options = options
                     this.paused = this.sliding = this.interval = this.$active = this.$items = null
                     this.options.pause == 'hover' && this.$element.on('mouseenter.bs.carousel', $.proxy(this.pause, this)).on('mouseleave.bs.carousel', $.proxy(this.cycle, this))
              }
              Carousel.VERSION = '3.2.0'
              Carousel.DEFAULTS = { interval: 5000, pause: 'hover', wrap: true }
              Carousel.prototype.keydown = function (e) {
                     switch (e.which) {
                            case 37: this.prev(); break
                            case 39: this.next(); break
                            default: return
                     }e.preventDefault()
              }
              Carousel.prototype.cycle = function (e) {
                     e || (this.paused = false)
                     this.interval && clearInterval(this.interval)
                     this.options.interval && !this.paused && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))
                     return this
              }
              Carousel.prototype.getItemIndex = function (item) {
                     this.$items = item.parent().children('.item')
                     return this.$items.index(item || this.$active)
              }
              Carousel.prototype.to = function (pos) {
                     var that = this
                     var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))
                     if (pos > (this.$items.length - 1) || pos < 0) return
                     if (this.sliding) return this.$element.one('slid.bs.carousel', function () { that.to(pos) })
                     if (activeIndex == pos) return this.pause().cycle()
                     return this.slide(pos > activeIndex ? 'next' : 'prev', $(this.$items[pos]))
              }
              Carousel.prototype.pause = function (e) {
                     e || (this.paused = true)
                     if (this.$element.find('.next, .prev').length && $.support.transition) {
                            this.$element.trigger($.support.transition.end)
                            this.cycle(true)
                     } this.interval = clearInterval(this.interval)
                     return this
              }
              Carousel.prototype.next = function () {
                     if (this.sliding) return
                     return this.slide('next')
              }
              Carousel.prototype.prev = function () {
                     if (this.sliding) return
                     return this.slide('prev')
              }
              Carousel.prototype.slide = function (type, next) {
                     var $active = this.$element.find('.item.active')
                     var $next = next || $active[type]()
                     var isCycling = this.interval
                     var direction = type == 'next' ? 'left' : 'right'
                     var fallback = type == 'next' ? 'first' : 'last'
                     var that = this
                     if (!$next.length) {
                            if (!this.options.wrap) return
                            $next = this.$element.find('.item')[fallback]()
                     } if ($next.hasClass('active')) return (this.sliding = false)
                     var relatedTarget = $next[0]
                     var slideEvent = $.Event('slide.bs.carousel', { relatedTarget: relatedTarget, direction: direction })
                     this.$element.trigger(slideEvent)
                     if (slideEvent.isDefaultPrevented()) return
                     this.sliding = true
                     isCycling && this.pause()
                     if (this.$indicators.length) {
                            this.$indicators.find('.active').removeClass('active')
                            var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])
                            $nextIndicator && $nextIndicator.addClass('active')
                     } var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction })
                     if ($.support.transition && this.$element.hasClass('slide')) {
                            $next.addClass(type)
                            $next[0].offsetWidth
                            $active.addClass(direction)
                            $next.addClass(direction)
                            $active.one('bsTransitionEnd', function () {
                                   $next.removeClass([type, direction].join(' ')).addClass('active')
                                   $active.removeClass(['active', direction].join(' '))
                                   that.sliding = false
                                   setTimeout(function () { that.$element.trigger(slidEvent) }, 0)
                            }).emulateTransitionEnd($active.css('transition-duration').slice(0, -1) * 1000)
                     } else {
                            $active.removeClass('active')
                            $next.addClass('active')
                            this.sliding = false
                            this.$element.trigger(slidEvent)
                     } isCycling && this.cycle()
                     return this
              }
              function Plugin(option) {
                     return this.each(function () {
                            var $this = $(this)
                            var data = $this.data('bs.carousel')
                            var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)
                            var action = typeof option == 'string' ? option : options.slide
                            if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))
                            if (typeof option == 'number') data.to(option)
                            else if (action) data[action]()
                            else if (options.interval) data.pause().cycle()
                     })
              } var old = $.fn.carousel
              $.fn.carousel = Plugin
              $.fn.carousel.Constructor = Carousel
              $.fn.carousel.noConflict = function () {
                     $.fn.carousel = old
                     return this
              }
              $(document).on('click.bs.carousel.data-api', '[data-slide], [data-slide-to]', function (e) {
                     var href
                     var $this = $(this)
                     var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, ''))
                     if (!$target.hasClass('carousel')) return
                     var options = $.extend({}, $target.data(), $this.data())
                     var slideIndex = $this.attr('data-slide-to')
                     if (slideIndex) options.interval = false
                     Plugin.call($target, options)
                     if (slideIndex) { $target.data('bs.carousel').to(slideIndex) } e.preventDefault()
              })
              $(window).on('load', function () {
                     $('[data-ride="carousel"]').each(function () {
                            var $carousel = $(this)
                            Plugin.call($carousel, $carousel.data())
                     })
              })
       }(jQuery); +function ($) {
              'use strict'; var Collapse = function (element, options) {
                     this.$element = $(element)
                     this.options = $.extend({}, Collapse.DEFAULTS, options)
                     this.transitioning = null
                     if (this.options.parent) this.$parent = $(this.options.parent)
                     if (this.options.toggle) this.toggle()
              }
              Collapse.VERSION = '3.2.0'
              Collapse.DEFAULTS = { toggle: true }
              Collapse.prototype.dimension = function () {
                     var hasWidth = this.$element.hasClass('width')
                     return hasWidth ? 'width' : 'height'
              }
              Collapse.prototype.show = function () {
                     if (this.transitioning || this.$element.hasClass('in')) return
                     var startEvent = $.Event('show.bs.collapse')
                     this.$element.trigger(startEvent)
                     if (startEvent.isDefaultPrevented()) return
                     var actives = this.$parent && this.$parent.find('> .panel > .in')
                     if (actives && actives.length) {
                            var hasData = actives.data('bs.collapse')
                            if (hasData && hasData.transitioning) return
                            Plugin.call(actives, 'hide')
                            hasData || actives.data('bs.collapse', null)
                     } var dimension = this.dimension()
                     this.$element.removeClass('collapse').addClass('collapsing')[dimension](0)
                     this.transitioning = 1
                     var complete = function () {
                            this.$element.removeClass('collapsing').addClass('collapse in')[dimension]('')
                            this.transitioning = 0
                            this.$element.trigger('shown.bs.collapse')
                     }
                     if (!$.support.transition) return complete.call(this)
                     var scrollSize = $.camelCase(['scroll', dimension].join('-'))
                     this.$element.one('bsTransitionEnd', $.proxy(complete, this)).emulateTransitionEnd(350)[dimension](this.$element[0][scrollSize])
              }
              Collapse.prototype.hide = function () {
                     if (this.transitioning || !this.$element.hasClass('in')) return
                     var startEvent = $.Event('hide.bs.collapse')
                     this.$element.trigger(startEvent)
                     if (startEvent.isDefaultPrevented()) return
                     var dimension = this.dimension()
                     this.$element[dimension](this.$element[dimension]())[0].offsetHeight
                     this.$element.addClass('collapsing').removeClass('collapse').removeClass('in')
                     this.transitioning = 1
                     var complete = function () {
                            this.transitioning = 0
                            this.$element.trigger('hidden.bs.collapse').removeClass('collapsing').addClass('collapse')
                     }
                     if (!$.support.transition) return complete.call(this)
                     this.$element[dimension](0).one('bsTransitionEnd', $.proxy(complete, this)).emulateTransitionEnd(350)
              }
              Collapse.prototype.toggle = function () { this[this.$element.hasClass('in') ? 'hide' : 'show']() }
              function Plugin(option) {
                     return this.each(function () {
                            var $this = $(this)
                            var data = $this.data('bs.collapse')
                            var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)
                            if (!data && options.toggle && option == 'show') option = !option
                            if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))
                            if (typeof option == 'string') data[option]()
                     })
              } var old = $.fn.collapse
              $.fn.collapse = Plugin
              $.fn.collapse.Constructor = Collapse
              $.fn.collapse.noConflict = function () {
                     $.fn.collapse = old
                     return this
              }
              $(document).on('click.bs.collapse.data-api', '[data-toggle="collapse"]', function (e) {
                     var href
                     var $this = $(this)
                     var target = $this.attr('data-target') || e.preventDefault() || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '')
                     var $target = $(target)
                     var data = $target.data('bs.collapse')
                     var option = data ? 'toggle' : $this.data()
                     var parent = $this.attr('data-parent')
                     var $parent = parent && $(parent)
                     if (!data || !data.transitioning) {
                            if ($parent) $parent.find('[data-toggle="collapse"][data-parent="' + parent + '"]').not($this).addClass('collapsed')
                            $this[$target.hasClass('in') ? 'addClass' : 'removeClass']('collapsed')
                     } Plugin.call($target, option)
              })
       }(jQuery); +function ($) {
              'use strict'; var backdrop = '.dropdown-backdrop'
              var toggle = '[data-toggle="dropdown"]'
              var Dropdown = function (element) { $(element).on('click.bs.dropdown', this.toggle) }
              Dropdown.VERSION = '3.2.0'
              Dropdown.prototype.toggle = function (e) {
                     var $this = $(this)
                     if ($this.is('.disabled, :disabled')) return
                     var $parent = getParent($this)
                     var isActive = $parent.hasClass('open')
                     clearMenus()
                     if (!isActive) {
                            if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) { $('<div class="dropdown-backdrop"/>').insertAfter($(this)).on('click', clearMenus) } var relatedTarget = { relatedTarget: this }
                            $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))
                            if (e.isDefaultPrevented()) return
                            $this.trigger('focus')
                            $parent.toggleClass('open').trigger('shown.bs.dropdown', relatedTarget)
                     } return false
              }
              Dropdown.prototype.keydown = function (e) {
                     if (!/(38|40|27)/.test(e.keyCode)) return
                     var $this = $(this)
                     e.preventDefault()
                     e.stopPropagation()
                     if ($this.is('.disabled, :disabled')) return
                     var $parent = getParent($this)
                     var isActive = $parent.hasClass('open')
                     if (!isActive || (isActive && e.keyCode == 27)) {
                            if (e.which == 27) $parent.find(toggle).trigger('focus')
                            return $this.trigger('click')
                     } var desc = ' li:not(.divider):visible a'
                     var $items = $parent.find('[role="menu"]' + desc + ', [role="listbox"]' + desc)
                     if (!$items.length) return
                     var index = $items.index($items.filter(':focus'))
                     if (e.keyCode == 38 && index > 0) index--
                     if (e.keyCode == 40 && index < $items.length - 1) index++
                     if (!~index) index = 0
                     $items.eq(index).trigger('focus')
              }
              function clearMenus(e) {
                     if (e && e.which === 3) return
                     $(backdrop).remove()
                     $(toggle).each(function () {
                            var $parent = getParent($(this))
                            var relatedTarget = { relatedTarget: this }
                            if (!$parent.hasClass('open')) return
                            $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))
                            if (e.isDefaultPrevented()) return
                            $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)
                     })
              } function getParent($this) {
                     var selector = $this.attr('data-target')
                     if (!selector) {
                            selector = $this.attr('href')
                            selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, '')
                     } var $parent = selector && $(selector)
                     return $parent && $parent.length ? $parent : $this.parent()
              } function Plugin(option) {
                     return this.each(function () {
                            var $this = $(this)
                            var data = $this.data('bs.dropdown')
                            if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))
                            if (typeof option == 'string') data[option].call($this)
                     })
              } var old = $.fn.dropdown
              $.fn.dropdown = Plugin
              $.fn.dropdown.Constructor = Dropdown
              $.fn.dropdown.noConflict = function () {
                     $.fn.dropdown = old
                     return this
              }
              $(document).on('click.bs.dropdown.data-api', clearMenus).on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() }).on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle).on('keydown.bs.dropdown.data-api', toggle + ', [role="menu"], [role="listbox"]', Dropdown.prototype.keydown)
       }(jQuery); +function ($) {
              'use strict'; var Modal = function (element, options) {
                     this.options = options
                     this.$body = $(document.body)
                     this.$element = $(element)
                     this.$backdrop = this.isShown = null
                     this.scrollbarWidth = 0
                     if (this.options.remote) { this.$element.find('.modal-content').load(this.options.remote, $.proxy(function () { this.$element.trigger('loaded.bs.modal') }, this)) }
              }
              Modal.VERSION = '3.2.0'
              Modal.DEFAULTS = { backdrop: true, keyboard: true, show: true }
              Modal.prototype.toggle = function (_relatedTarget) { return this.isShown ? this.hide() : this.show(_relatedTarget) }
              Modal.prototype.show = function (_relatedTarget) {
                     var that = this
                     var e = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })
                     this.$element.trigger(e)
                     if (this.isShown || e.isDefaultPrevented()) return
                     this.isShown = true
                     this.checkScrollbar()
                     this.$body.addClass('modal-open')
                     this.setScrollbar()
                     this.escape()
                     this.$element.on('click.dismiss.bs.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this))
                     this.backdrop(function () {
                            var transition = $.support.transition && that.$element.hasClass('fade')
                            if (!that.$element.parent().length) { that.$element.appendTo(that.$body) } that.$element.show().scrollTop(0)
                            if (transition) { that.$element[0].offsetWidth } that.$element.addClass('in').attr('aria-hidden', false)
                            that.enforceFocus()
                            var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })
                            transition ? that.$element.find('.modal-dialog').one('bsTransitionEnd', function () { that.$element.trigger('focus').trigger(e) }).emulateTransitionEnd(300) : that.$element.trigger('focus').trigger(e)
                     })
              }
              Modal.prototype.hide = function (e) {
                     if (e) e.preventDefault()
                     e = $.Event('hide.bs.modal')
                     this.$element.trigger(e)
                     if (!this.isShown || e.isDefaultPrevented()) return
                     this.isShown = false
                     this.$body.removeClass('modal-open')
                     this.resetScrollbar()
                     this.escape()
                     $(document).off('focusin.bs.modal')
                     this.$element.removeClass('in').attr('aria-hidden', true).off('click.dismiss.bs.modal')
                     $.support.transition && this.$element.hasClass('fade') ? this.$element.one('bsTransitionEnd', $.proxy(this.hideModal, this)).emulateTransitionEnd(300) : this.hideModal()
              }
              Modal.prototype.enforceFocus = function () { $(document).off('focusin.bs.modal').on('focusin.bs.modal', $.proxy(function (e) { if (this.$element[0] !== e.target && !this.$element.has(e.target).length) { this.$element.trigger('focus') } }, this)) }
              Modal.prototype.escape = function () { if (this.isShown && this.options.keyboard) { this.$element.on('keyup.dismiss.bs.modal', $.proxy(function (e) { e.which == 27 && this.hide() }, this)) } else if (!this.isShown) { this.$element.off('keyup.dismiss.bs.modal') } }
              Modal.prototype.hideModal = function () {
                     var that = this
                     this.$element.hide()
                     this.backdrop(function () { that.$element.trigger('hidden.bs.modal') })
              }
              Modal.prototype.removeBackdrop = function () {
                     this.$backdrop && this.$backdrop.remove()
                     this.$backdrop = null
              }
              Modal.prototype.backdrop = function (callback) {
                     var that = this
                     var animate = this.$element.hasClass('fade') ? 'fade' : ''
                     if (this.isShown && this.options.backdrop) {
                            var doAnimate = $.support.transition && animate
                            this.$backdrop = $('<div class="modal-backdrop ' + animate + '" />').appendTo(this.$body)
                            this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {
                                   if (e.target !== e.currentTarget) return
                                   this.options.backdrop == 'static' ? this.$element[0].focus.call(this.$element[0]) : this.hide.call(this)
                            }, this))
                            if (doAnimate) this.$backdrop[0].offsetWidth
                            this.$backdrop.addClass('in')
                            if (!callback) return
                            doAnimate ? this.$backdrop.one('bsTransitionEnd', callback).emulateTransitionEnd(150) : callback()
                     } else if (!this.isShown && this.$backdrop) {
                            this.$backdrop.removeClass('in')
                            var callbackRemove = function () {
                                   that.removeBackdrop()
                                   callback && callback()
                            }
                            $.support.transition && this.$element.hasClass('fade') ? this.$backdrop.one('bsTransitionEnd', callbackRemove).emulateTransitionEnd(150) : callbackRemove()
                     } else if (callback) { callback() }
              }
              Modal.prototype.checkScrollbar = function () {
                     if (document.body.clientWidth >= window.innerWidth) return
                     this.scrollbarWidth = this.scrollbarWidth || this.measureScrollbar()
              }
              Modal.prototype.setScrollbar = function () {
                     var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)
                     if (this.scrollbarWidth) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)
              }
              Modal.prototype.resetScrollbar = function () { this.$body.css('padding-right', '') }
              Modal.prototype.measureScrollbar = function () {
                     var scrollDiv = document.createElement('div')
                     scrollDiv.className = 'modal-scrollbar-measure'
                     this.$body.append(scrollDiv)
                     var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth
                     this.$body[0].removeChild(scrollDiv)
                     return scrollbarWidth
              }
              function Plugin(option, _relatedTarget) {
                     return this.each(function () {
                            var $this = $(this)
                            var data = $this.data('bs.modal')
                            var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)
                            if (!data) $this.data('bs.modal', (data = new Modal(this, options)))
                            if (typeof option == 'string') data[option](_relatedTarget)
                            else if (options.show) data.show(_relatedTarget)
                     })
              } var old = $.fn.modal
              $.fn.modal = Plugin
              $.fn.modal.Constructor = Modal
              $.fn.modal.noConflict = function () {
                     $.fn.modal = old
                     return this
              }
              $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
                     var $this = $(this)
                     var href = $this.attr('href')
                     var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\s]+$)/, '')))
                     var option = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())
                     if ($this.is('a')) e.preventDefault()
                     $target.one('show.bs.modal', function (showEvent) {
                            if (showEvent.isDefaultPrevented()) return
                            $target.one('hidden.bs.modal', function () { $this.is(':visible') && $this.trigger('focus') })
                     })
                     Plugin.call($target, option, this)
              })
       }(jQuery); +function ($) {
              'use strict'; var Tooltip = function (element, options) {
                     this.type = this.options = this.enabled = this.timeout = this.hoverState = this.$element = null
                     this.init('tooltip', element, options)
              }
              Tooltip.VERSION = '3.2.0'
              Tooltip.DEFAULTS = { animation: true, placement: 'top', selector: false, template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>', trigger: 'hover focus', title: '', delay: 0, html: false, container: false, viewport: { selector: 'body', padding: 0 } }
              Tooltip.prototype.init = function (type, element, options) {
                     this.enabled = true
                     this.type = type
                     this.$element = $(element)
                     this.options = this.getOptions(options)
                     this.$viewport = this.options.viewport && $(this.options.viewport.selector || this.options.viewport)
                     var triggers = this.options.trigger.split(' ')
                     for (var i = triggers.length; i--;) {
                            var trigger = triggers[i]
                            if (trigger == 'click') { this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this)) } else if (trigger != 'manual') {
                                   var eventIn = trigger == 'hover' ? 'mouseenter' : 'focusin'
                                   var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'
                                   this.$element.on(eventIn + '.' + this.type, this.options.selector, $.proxy(this.enter, this))
                                   this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))
                            }
                     } this.options.selector ? (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) : this.fixTitle()
              }
              Tooltip.prototype.getDefaults = function () { return Tooltip.DEFAULTS }
              Tooltip.prototype.getOptions = function (options) {
                     options = $.extend({}, this.getDefaults(), this.$element.data(), options)
                     if (options.delay && typeof options.delay == 'number') { options.delay = { show: options.delay, hide: options.delay } } return options
              }
              Tooltip.prototype.getDelegateOptions = function () {
                     var options = {}
                     var defaults = this.getDefaults()
                     this._options && $.each(this._options, function (key, value) { if (defaults[key] != value) options[key] = value })
                     return options
              }
              Tooltip.prototype.enter = function (obj) {
                     var self = obj instanceof this.constructor ? obj : $(obj.currentTarget).data('bs.' + this.type)
                     if (!self) {
                            self = new this.constructor(obj.currentTarget, this.getDelegateOptions())
                            $(obj.currentTarget).data('bs.' + this.type, self)
                     } clearTimeout(self.timeout)
                     self.hoverState = 'in'
                     if (!self.options.delay || !self.options.delay.show) return self.show()
                     self.timeout = setTimeout(function () { if (self.hoverState == 'in') self.show() }, self.options.delay.show)
              }
              Tooltip.prototype.leave = function (obj) {
                     var self = obj instanceof this.constructor ? obj : $(obj.currentTarget).data('bs.' + this.type)
                     if (!self) {
                            self = new this.constructor(obj.currentTarget, this.getDelegateOptions())
                            $(obj.currentTarget).data('bs.' + this.type, self)
                     } clearTimeout(self.timeout)
                     self.hoverState = 'out'
                     if (!self.options.delay || !self.options.delay.hide) return self.hide()
                     self.timeout = setTimeout(function () { if (self.hoverState == 'out') self.hide() }, self.options.delay.hide)
              }
              Tooltip.prototype.show = function () {
                     var e = $.Event('show.bs.' + this.type)
                     if (this.hasContent() && this.enabled) {
                            this.$element.trigger(e)
                            var inDom = $.contains(document.documentElement, this.$element[0])
                            if (e.isDefaultPrevented() || !inDom) return
                            var that = this
                            var $tip = this.tip()
                            var tipId = this.getUID(this.type)
                            this.setContent()
                            $tip.attr('id', tipId)
                            this.$element.attr('aria-describedby', tipId)
                            if (this.options.animation) $tip.addClass('fade')
                            var placement = typeof this.options.placement == 'function' ? this.options.placement.call(this, $tip[0], this.$element[0]) : this.options.placement
                            var autoToken = /\s?auto?\s?/i
                            var autoPlace = autoToken.test(placement)
                            if (autoPlace) placement = placement.replace(autoToken, '') || 'top'
                            $tip.detach().css({ top: 0, left: 0, display: 'block' }).addClass(placement).data('bs.' + this.type, this)
                            this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)
                            var pos = this.getPosition()
                            var actualWidth = $tip[0].offsetWidth
                            var actualHeight = $tip[0].offsetHeight
                            if (autoPlace) {
                                   var orgPlacement = placement
                                   var $parent = this.$element.parent()
                                   var parentDim = this.getPosition($parent)
                                   placement = placement == 'bottom' && pos.top + pos.height + actualHeight - parentDim.scroll > parentDim.height ? 'top' : placement == 'top' && pos.top - parentDim.scroll - actualHeight < 0 ? 'bottom' : placement == 'right' && pos.right + actualWidth > parentDim.width ? 'left' : placement == 'left' && pos.left - actualWidth < parentDim.left ? 'right' : placement
                                   $tip.removeClass(orgPlacement).addClass(placement)
                            } var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)
                            this.applyPlacement(calculatedOffset, placement)
                            var complete = function () {
                                   that.$element.trigger('shown.bs.' + that.type)
                                   that.hoverState = null
                            }
                            $.support.transition && this.$tip.hasClass('fade') ? $tip.one('bsTransitionEnd', complete).emulateTransitionEnd(150) : complete()
                     }
              }
              Tooltip.prototype.applyPlacement = function (offset, placement) {
                     var $tip = this.tip()
                     var width = $tip[0].offsetWidth
                     var height = $tip[0].offsetHeight
                     var marginTop = parseInt($tip.css('margin-top'), 10)
                     var marginLeft = parseInt($tip.css('margin-left'), 10)
                     if (isNaN(marginTop)) marginTop = 0
                     if (isNaN(marginLeft)) marginLeft = 0
                     offset.top = offset.top + marginTop
                     offset.left = offset.left + marginLeft
                     $.offset.setOffset($tip[0], $.extend({ using: function (props) { $tip.css({ top: Math.round(props.top), left: Math.round(props.left) }) } }, offset), 0)
                     $tip.addClass('in')
                     var actualWidth = $tip[0].offsetWidth
                     var actualHeight = $tip[0].offsetHeight
                     if (placement == 'top' && actualHeight != height) { offset.top = offset.top + height - actualHeight } var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)
                     if (delta.left) offset.left += delta.left
                     else offset.top += delta.top
                     var arrowDelta = delta.left ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight
                     var arrowPosition = delta.left ? 'left' : 'top'
                     var arrowOffsetPosition = delta.left ? 'offsetWidth' : 'offsetHeight'
                     $tip.offset(offset)
                     this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], arrowPosition)
              }
              Tooltip.prototype.replaceArrow = function (delta, dimension, position) { this.arrow().css(position, delta ? (50 * (1 - delta / dimension) + '%') : '') }
              Tooltip.prototype.setContent = function () {
                     var $tip = this.tip()
                     var title = this.getTitle()
                     $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)
                     $tip.removeClass('fade in top bottom left right')
              }
              Tooltip.prototype.hide = function () {
                     var that = this
                     var $tip = this.tip()
                     var e = $.Event('hide.bs.' + this.type)
                     this.$element.removeAttr('aria-describedby')
                     function complete() {
                            if (that.hoverState != 'in') $tip.detach()
                            that.$element.trigger('hidden.bs.' + that.type)
                     } this.$element.trigger(e)
                     if (e.isDefaultPrevented()) return
                     $tip.removeClass('in')
                     $.support.transition && this.$tip.hasClass('fade') ? $tip.one('bsTransitionEnd', complete).emulateTransitionEnd(150) : complete()
                     this.hoverState = null
                     return this
              }
              Tooltip.prototype.fixTitle = function () {
                     var $e = this.$element
                     if ($e.attr('title') || typeof ($e.attr('data-original-title')) != 'string') { $e.attr('data-original-title', $e.attr('title') || '').attr('title', '') }
              }
              Tooltip.prototype.hasContent = function () { return this.getTitle() }
              Tooltip.prototype.getPosition = function ($element) {
                     $element = $element || this.$element
                     var el = $element[0]
                     var isBody = el.tagName == 'BODY'
                     return $.extend({}, (typeof el.getBoundingClientRect == 'function') ? el.getBoundingClientRect() : null, { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop(), width: isBody ? $(window).width() : $element.outerWidth(), height: isBody ? $(window).height() : $element.outerHeight() }, isBody ? { top: 0, left: 0 } : $element.offset())
              }
              Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) { return placement == 'bottom' ? { top: pos.top + pos.height, left: pos.left + pos.width / 2 - actualWidth / 2 } : placement == 'top' ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } : placement == 'left' ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } : { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width } }
              Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {
                     var delta = { top: 0, left: 0 }
                     if (!this.$viewport) return delta
                     var viewportPadding = this.options.viewport && this.options.viewport.padding || 0
                     var viewportDimensions = this.getPosition(this.$viewport)
                     if (/right|left/.test(placement)) {
                            var topEdgeOffset = pos.top - viewportPadding - viewportDimensions.scroll
                            var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight
                            if (topEdgeOffset < viewportDimensions.top) { delta.top = viewportDimensions.top - topEdgeOffset } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset }
                     } else {
                            var leftEdgeOffset = pos.left - viewportPadding
                            var rightEdgeOffset = pos.left + viewportPadding + actualWidth
                            if (leftEdgeOffset < viewportDimensions.left) { delta.left = viewportDimensions.left - leftEdgeOffset } else if (rightEdgeOffset > viewportDimensions.width) { delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset }
                     } return delta
              }
              Tooltip.prototype.getTitle = function () {
                     var title
                     var $e = this.$element
                     var o = this.options
                     title = $e.attr('data-original-title') || (typeof o.title == 'function' ? o.title.call($e[0]) : o.title)
                     return title
              }
              Tooltip.prototype.getUID = function (prefix) {
                     do prefix += ~~(Math.random() * 1000000)
                     while (document.getElementById(prefix)) return prefix
              }
              Tooltip.prototype.tip = function () { return (this.$tip = this.$tip || $(this.options.template)) }
              Tooltip.prototype.arrow = function () { return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow')) }
              Tooltip.prototype.validate = function () {
                     if (!this.$element[0].parentNode) {
                            this.hide()
                            this.$element = null
                            this.options = null
                     }
              }
              Tooltip.prototype.enable = function () { this.enabled = true }
              Tooltip.prototype.disable = function () { this.enabled = false }
              Tooltip.prototype.toggleEnabled = function () { this.enabled = !this.enabled }
              Tooltip.prototype.toggle = function (e) {
                     var self = this
                     if (e) {
                            self = $(e.currentTarget).data('bs.' + this.type)
                            if (!self) {
                                   self = new this.constructor(e.currentTarget, this.getDelegateOptions())
                                   $(e.currentTarget).data('bs.' + this.type, self)
                            }
                     } self.tip().hasClass('in') ? self.leave(self) : self.enter(self)
              }
              Tooltip.prototype.destroy = function () {
                     clearTimeout(this.timeout)
                     this.hide().$element.off('.' + this.type).removeData('bs.' + this.type)
              }
              function Plugin(option) {
                     return this.each(function () {
                            var $this = $(this)
                            var data = $this.data('bs.tooltip')
                            var options = typeof option == 'object' && option
                            if (!data && option == 'destroy') return
                            if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))
                            if (typeof option == 'string') data[option]()
                     })
              } var old = $.fn.tooltip
              $.fn.tooltip = Plugin
              $.fn.tooltip.Constructor = Tooltip
              $.fn.tooltip.noConflict = function () {
                     $.fn.tooltip = old
                     return this
              }
       }(jQuery); +function ($) {
              'use strict'; var Popover = function (element, options) { this.init('popover', element, options) }
              if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')
              Popover.VERSION = '3.2.0'
              Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, { placement: 'right', trigger: 'click', content: '', template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>' })
              Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)
              Popover.prototype.constructor = Popover
              Popover.prototype.getDefaults = function () { return Popover.DEFAULTS }
              Popover.prototype.setContent = function () {
                     var $tip = this.tip()
                     var title = this.getTitle()
                     var content = this.getContent()
                     $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)
                     $tip.find('.popover-content').empty()[this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'](content)
                     $tip.removeClass('fade top bottom left right in')
                     if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()
              }
              Popover.prototype.hasContent = function () { return this.getTitle() || this.getContent() }
              Popover.prototype.getContent = function () {
                     var $e = this.$element
                     var o = this.options
                     return $e.attr('data-content') || (typeof o.content == 'function' ? o.content.call($e[0]) : o.content)
              }
              Popover.prototype.arrow = function () { return (this.$arrow = this.$arrow || this.tip().find('.arrow')) }
              Popover.prototype.tip = function () {
                     if (!this.$tip) this.$tip = $(this.options.template)
                     return this.$tip
              }
              function Plugin(option) {
                     return this.each(function () {
                            var $this = $(this)
                            var data = $this.data('bs.popover')
                            var options = typeof option == 'object' && option
                            if (!data && option == 'destroy') return
                            if (!data) $this.data('bs.popover', (data = new Popover(this, options)))
                            if (typeof option == 'string') data[option]()
                     })
              } var old = $.fn.popover
              $.fn.popover = Plugin
              $.fn.popover.Constructor = Popover
              $.fn.popover.noConflict = function () {
                     $.fn.popover = old
                     return this
              }
       }(jQuery); +function ($) {
              'use strict'; function ScrollSpy(element, options) {
                     var process = $.proxy(this.process, this)
                     this.$body = $('body')
                     this.$scrollElement = $(element).is('body') ? $(window) : $(element)
                     this.options = $.extend({}, ScrollSpy.DEFAULTS, options)
                     this.selector = (this.options.target || '') + ' .nav li > a'
                     this.offsets = []
                     this.targets = []
                     this.activeTarget = null
                     this.scrollHeight = 0
                     this.$scrollElement.on('scroll.bs.scrollspy', process)
                     this.refresh()
                     this.process()
              } ScrollSpy.VERSION = '3.2.0'
              ScrollSpy.DEFAULTS = { offset: 10 }
              ScrollSpy.prototype.getScrollHeight = function () { return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight) }
              ScrollSpy.prototype.refresh = function () {
                     var offsetMethod = 'offset'
                     var offsetBase = 0
                     if (!$.isWindow(this.$scrollElement[0])) {
                            offsetMethod = 'position'
                            offsetBase = this.$scrollElement.scrollTop()
                     } this.offsets = []
                     this.targets = []
                     this.scrollHeight = this.getScrollHeight()
                     var self = this
                     this.$body.find(this.selector).map(function () {
                            var $el = $(this)
                            var href = $.escape($el.data('target') || $el.attr('href'))
                            var $href = /^#./.test(href) && $(href)
                            return ($href && $href.length && $href.is(':visible') && [[$href[offsetMethod]().top + offsetBase, href]]) || null
                     }).sort(function (a, b) { return a[0] - b[0] }).each(function () {
                            self.offsets.push(this[0])
                            self.targets.push(this[1])
                     })
              }
              ScrollSpy.prototype.process = function () {
                     var scrollTop = this.$scrollElement.scrollTop() + this.options.offset
                     var scrollHeight = this.getScrollHeight()
                     var maxScroll = this.options.offset + scrollHeight - this.$scrollElement.height()
                     var offsets = this.offsets
                     var targets = this.targets
                     var activeTarget = this.activeTarget
                     var i
                     if (this.scrollHeight != scrollHeight) { this.refresh() } if (scrollTop >= maxScroll) { return activeTarget != (i = targets[targets.length - 1]) && this.activate(i) } if (activeTarget && scrollTop <= offsets[0]) { return activeTarget != (i = targets[0]) && this.activate(i) } for (i = offsets.length; i--;) { activeTarget != targets[i] && scrollTop >= offsets[i] && (!offsets[i + 1] || scrollTop <= offsets[i + 1]) && this.activate(targets[i]) }
              }
              ScrollSpy.prototype.activate = function (target) {
                     this.activeTarget = target
                     $(this.selector).parentsUntil(this.options.target, '.active').removeClass('active')
                     var selector = this.selector + '[data-target="' + target + '"],' + this.selector + '[href="' + target + '"]'
                     var active = $(selector).parents('li').addClass('active')
                     if (active.parent('.dropdown-menu').length) { active = active.closest('li.dropdown').addClass('active') } active.trigger('activate.bs.scrollspy')
              }
              function Plugin(option) {
                     return this.each(function () {
                            var $this = $(this)
                            var data = $this.data('bs.scrollspy')
                            var options = typeof option == 'object' && option
                            if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))
                            if (typeof option == 'string') data[option]()
                     })
              } var old = $.fn.scrollspy
              $.fn.scrollspy = Plugin
              $.fn.scrollspy.Constructor = ScrollSpy
              $.fn.scrollspy.noConflict = function () {
                     $.fn.scrollspy = old
                     return this
              }
              $(window).on('load.bs.scrollspy.data-api', function () {
                     $('[data-spy="scroll"]').each(function () {
                            var $spy = $(this)
                            Plugin.call($spy, $spy.data())
                     })
              })
       }(jQuery); +function ($) {
              'use strict'; var Tab = function (element) { this.element = $(element) }
              Tab.VERSION = '3.2.0'
              Tab.prototype.show = function () {
                     var $this = this.element
                     var $ul = $this.closest('ul:not(.dropdown-menu)')
                     var selector = $this.data('target')
                     if (!selector) {
                            selector = $this.attr('href')
                            selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '')
                     } if ($this.parent('li').hasClass('active')) return
                     var previous = $ul.find('.active:last a')[0]
                     var e = $.Event('show.bs.tab', { relatedTarget: previous })
                     $this.trigger(e)
                     if (e.isDefaultPrevented()) return
                     var $target = $(selector)
                     this.activate($this.closest('li'), $ul)
                     this.activate($target, $target.parent(), function () { $this.trigger({ type: 'shown.bs.tab', relatedTarget: previous }) })
              }
              Tab.prototype.activate = function (element, container, callback) {
                     var $active = container.find('> .active')
                     var transition = callback && $.support.transition && $active.hasClass('fade')
                     function next() {
                            $active.removeClass('active').find('> .dropdown-menu > .active').removeClass('active')
                            element.addClass('active')
                            if (transition) {
                                   element[0].offsetWidth
                                   element.addClass('in')
                            } else { element.removeClass('fade') } if (element.parent('.dropdown-menu')) { element.closest('li.dropdown').addClass('active') } callback && callback()
                     } transition ? $active.one('bsTransitionEnd', next).emulateTransitionEnd(150) : next()
                     $active.removeClass('in')
              }
              function Plugin(option) {
                     return this.each(function () {
                            var $this = $(this)
                            var data = $this.data('bs.tab')
                            if (!data) $this.data('bs.tab', (data = new Tab(this)))
                            if (typeof option == 'string') data[option]()
                     })
              } var old = $.fn.tab
              $.fn.tab = Plugin
              $.fn.tab.Constructor = Tab
              $.fn.tab.noConflict = function () {
                     $.fn.tab = old
                     return this
              }
              $(document).on('click.bs.tab.data-api', '[data-toggle="tab"], [data-toggle="pill"]', function (e) {
                     e.preventDefault()
                     Plugin.call($(this), 'show')
              })
       }(jQuery); +function ($) {
              'use strict'; var Affix = function (element, options) {
                     this.options = $.extend({}, Affix.DEFAULTS, options)
                     this.$target = $(this.options.target).on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this)).on('click.bs.affix.data-api', $.proxy(this.checkPositionWithEventLoop, this))
                     this.$element = $(element)
                     this.affixed = this.unpin = this.pinnedOffset = null
                     this.checkPosition()
              }
              Affix.VERSION = '3.2.0'
              Affix.RESET = 'affix affix-top affix-bottom'
              Affix.DEFAULTS = { offset: 0, target: window }
              Affix.prototype.getPinnedOffset = function () {
                     if (this.pinnedOffset) return this.pinnedOffset
                     this.$element.removeClass(Affix.RESET).addClass('affix')
                     var scrollTop = this.$target.scrollTop()
                     var position = this.$element.offset()
                     return (this.pinnedOffset = position.top - scrollTop)
              }
              Affix.prototype.checkPositionWithEventLoop = function () { setTimeout($.proxy(this.checkPosition, this), 1) }
              Affix.prototype.checkPosition = function () {
                     if (!this.$element.is(':visible')) return
                     var scrollHeight = $(document).height()
                     var scrollTop = this.$target.scrollTop()
                     var position = this.$element.offset()
                     var offset = this.options.offset
                     var offsetTop = offset.top
                     var offsetBottom = offset.bottom
                     if (typeof offset != 'object') offsetBottom = offsetTop = offset
                     if (typeof offsetTop == 'function') offsetTop = offset.top(this.$element)
                     if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)
                     var affix = this.unpin != null && (scrollTop + this.unpin <= position.top) ? false : offsetBottom != null && (position.top + this.$element.height() >= scrollHeight - offsetBottom) ? 'bottom' : offsetTop != null && (scrollTop <= offsetTop) ? 'top' : false
                     if (this.affixed === affix) return
                     if (this.unpin != null) this.$element.css('top', '')
                     var affixType = 'affix' + (affix ? '-' + affix : '')
                     var e = $.Event(affixType + '.bs.affix')
                     this.$element.trigger(e)
                     if (e.isDefaultPrevented()) return
                     this.affixed = affix
                     this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null
                     this.$element.removeClass(Affix.RESET).addClass(affixType).trigger($.Event(affixType.replace('affix', 'affixed')))
                     if (affix == 'bottom') { this.$element.offset({ top: scrollHeight - this.$element.height() - offsetBottom }) }
              }
              function Plugin(option) {
                     return this.each(function () {
                            var $this = $(this)
                            var data = $this.data('bs.affix')
                            var options = typeof option == 'object' && option
                            if (!data) $this.data('bs.affix', (data = new Affix(this, options)))
                            if (typeof option == 'string') data[option]()
                     })
              } var old = $.fn.affix
              $.fn.affix = Plugin
              $.fn.affix.Constructor = Affix
              $.fn.affix.noConflict = function () {
                     $.fn.affix = old
                     return this
              }
              $(window).on('load', function () {
                     $('[data-spy="affix"]').each(function () {
                            var $spy = $(this)
                            var data = $spy.data()
                            data.offset = data.offset || {}
                            if (data.offsetBottom) data.offset.bottom = data.offsetBottom
                            if (data.offsetTop) data.offset.top = data.offsetTop
                            Plugin.call($spy, data)
                     })
              })
       }(jQuery); jQuery.extend({ escape: function (href) { var r = /([!"\$%&'()\*\+,\.\/:;<=>\?@\[\\\]\^`\{\|\}~])/g; return href.replace(r, '\\$1'); } }); window.is_mobile_device = function () {
              var check = false; (function (a) {
                     if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) ||
                            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i
                                   .test(a.substr(0, 4))) check = true;
              })(navigator.userAgent || navigator.vendor || window.opera); return check;
       }; window.updateQueryStringParameter = function (url, key, value) { if (!url) url = window.location.href; var re = new RegExp('([?&])' + key + '=.*?(&|#|$)(.*)', 'gi'), hash; if (re.test(url)) { if (typeof value !== 'undefined' && value !== null) return url.replace(re, '$1' + key + '=' + value + '$2$3'); else { hash = url.split('#'); url = hash[0].replace(re, '$1$3').replace(/(&|\?)$/, ''); if (typeof hash[1] !== 'undefined' && hash[1] !== null) url += '#' + hash[1]; return url; } } else { if (typeof value !== 'undefined' && value !== null) { var separator = url.indexOf('?') !== -1 ? '&' : '?'; hash = url.split('#'); url = hash[0] + separator + key + '=' + value; if (typeof hash[1] !== 'undefined' && hash[1] !== null) url += '#' + hash[1]; return url; } else return url; } }; window.imgLoadCall = function (that) {
              var src = that.data('video'); var wid = that.width(); var hig = that.height(); var time = that.data('video-duration'); var timespan = ''; if (time != '00:00:00') { timespan = '<span class="video-time">' + time + '</span>'; } if (
                     that.data('video-from') == '163') { that.after('<embed frameborder="no" border="0" marginwidth="0" marginheight="0" width=300 height=86 src="' + src + '" pluginspage="http://www.macromedia.com/go/getflashplayer"></embed>'); that.hide(); return; } if (document.body.clientWidth > 768) {
                            if (wid >= 400 && hig >= 225) {
                                   that.after(`<embed src="${src}" quality="high"
       bgcolor="#ffffff" width="${wid}" height="${hid}"
       name="flash" align="middle" allowScriptAccess="always"
       allowFullScreen="true" type="application/x-shockwave-flash"
       pluginspage="http://www.macromedia.com/go/getflashplayer" frameborder="no" border="0">`); that.hide();
                            } else if (wid >= 200 && wid < 400) { that.parent('a').attr({ href: '#', class: 'video-play-wrap' }).append(timespan + '<span class="video-circle glyphicon glyphicon-play-circle" style="top:' + (hig / 2 - 50) + 'px;left:' + (wid / 2 - 50) + 'px"></span>'); } else {
                                   that.parent('a').attr({ href: '#', class: 'video-play-wrap' }).append(timespan +
                                          '<span class="video-circle glyphicon glyphicon-play-circle" style="top:' + (hig / 2 - 25) + 'px;left:' + (wid / 2 - 25) + 'px; font-size:50px"></span>');
                            }
                     } else { if (wid >= 200) { that.parent('a').attr({ href: '#', class: 'video-play-wrap' }).append(timespan + '<span class="video-circle glyphicon glyphicon-play-circle" style="top:' + (hig / 2 - 50) + 'px;left:' + (wid / 2 - 50) + 'px"></span>'); } else { that.parent('a').attr({ href: '#', class: 'video-play-wrap' }).append(timespan + '</span><span class="video-circle glyphicon glyphicon-play-circle" style="top:' + (hig / 2 - 25) + 'px;left:' + (wid / 2 - 25) + 'px; font-size:50px"></span>'); } }
       }; window.videoInitialize = function () { for (var i = 0; i < $('.video-player-asyn').length; i++) { var that = $('.video-player-asyn').get(i); if (that.complete || $(that).data('video-from') == '163') { imgLoadCall($(that)); } else { that.onload = function (e) { imgLoadCall($(e.target)); }; } } $('.video-player-asyn').removeClass('video-player-asyn'); }; window.contentInitialize = function () {
              window.huijiPreContent = {}; $('#bodyContent pre:not(.CodeMirror-line)'
              ).addClass('prettyprint linenums'); $('#bodyContent pre:not(.CodeMirror-line)').each(function (i) { $(this).attr('data-pre-index', String(i)); window.huijiPreContent[String(i)] = $(this).text(); }); $('input[type=submit]:not(".keep"),input[type=button]:not(".keep"),input[type=reset]:not(".keep")').addClass('mw-ui-button'); $('input[type=submit]:not(".keep")').addClass('mw-ui-progressive'); if (0 === $('#toc').length) { $('.toc-sidebar').remove(); } else {
                     if (!window.is_mobile_device()) {
                            $('#toc').each(function () { $(this).find('ul:first').appendTo('.toc-sidebar .toc-ul-wrap'); $(this).remove(); }); $('aside.toc-sidebar .toc-ul-wrap> ul').append('<li><a href="#firstHeading">回到顶部</a></li>'); $('aside.toc-sidebar .toc-ul-wrap> ul').addClass('hidden-sm hidden-xs hidden-print').attr('data-spy', 'affix'); $('aside.toc-sidebar .toc-ul-wrap> ul').affix({
                                   offset: {
                                          top: function () { return (this.top = $('.parallax-bg').length ? $('.parallax-bg').outerHeight(true) : 0); }, bottom: function () {
                                                 return (this.bottom = $('.bottom').
                                                        outerHeight(true));
                                          },
                                   },
                            }); $('aside.toc-sidebar ul').addClass('nav nav-list'); $('.toc-sidebar').attr('id', 'toc'); $('body').scrollspy({ target: '#toc .toc-ul-wrap', offset: 185 });
                     } else { }
              } if ($('#bodyContent pre:not(.CodeMirror-line)').length > 0) { mw.loader.using('skins.dragonhide.code.prettify', function () { prettyPrint(); }); } $('.internal').each(function () { $(this).html('<i class="fa fa-file-image-o"></i>'); });
       }; $(function () {
              $('html').removeClass('client-nojs'); setInterval(function () { if (window.innerWidth >= 1440) { $('#wrapper').removeClass('smtoggled'); } }, 500); $('.subnav .nav .dropdown-menu:first').parents('.dropdown').addClass('phone-active'); $('.subnav .nav .dropdown-menu:first').addClass('phone-active'); if ($('#pt-notifications-alert .mw-echo-notifications-badge').text() != 0) { $('#pt-notifications-alert .mw-echo-notifications-badge').css({ color: '#fff', background: 'rgba(248,172,5,1)', }); } if ($('#pt-notifications-notice .mw-echo-notifications-badge').text() != 0) {
                     $(
                            '#pt-notifications-notice .mw-echo-notifications-badge').css({ color: '#fff', background: 'rgba(220, 0, 0, 1)', });
              } $('.navbar-user').on('click', '.mw-echo-notifications-badge', function () { if (window.innerWidth >= 768) { $(this).css({ color: '#fff !important', background: '#fff !important' }); } else { $(this).css({ color: '#333 !important', background: '#333 !important' }); } }); window.contentInitialize(); $('body').on('click', '.need-login', function (e) { if (!mw.config.get('wgUserName')) { e.preventDefault(); e.stopPropagation(); window.location = `/wiki/Special:Login?returnto=${mw.config.get('wgPageName')}`; } }); $('#wpRemember').attr('value', 1); $('#mw-input-weibologin').attr('tabindex', ''); $('#mw-input-qqlogin').attr('tabindex', '');
       });
}, null, null, null);; mw.loader.implement("ext.eventLogging@1rrgv", {
       main: "subscriber.js", files: {
              "subscriber.js": function (require, module, exports) { 'use strict'; mw.eventLog = require('./core.js'); mw.eventLog.Schema = require('./Schema.js'); function titleCase(word) { return word[0].toUpperCase() + word.slice(1); } function handleTrackedEvent(topic, event) { var schema = titleCase(topic.slice(topic.indexOf('.') + 1)); mw.eventLog.logEvent(schema, event); } function init() { mw.trackSubscribe('event.', handleTrackedEvent); } if (document.readyState === 'complete') { mw.requestIdleCallback(init); } else { $(window).one('load', init); } }, "core.js": function (require, module, exports) {
                     'use strict'; var core, debugMode, config = require('./data.json'), BackgroundQueue = require('./BackgroundQueue.js'), queue = (new BackgroundQueue(config.queueLingerSeconds)); debugMode = Number(mw.user.options.get('eventlogging-display-web')) === 1 || Number(mw.user.options.get('eventlogging-display-console')) === 1; function makeLegacyStreamName(schemaName) {
                            return 'eventlogging_' + schemaName
                                   ;
                     } core = {
                            maxUrlSize: 2000, getRevisionOrSchemaUri: function (schemaName) { return config.schemasInfo[schemaName] || -1; }, prepare: function (schemaName, eventData) { var event = { event: eventData, schema: schemaName, webHost: mw.config.get('wgServerName'), wiki: mw.config.get('wgDBname') }, revisionOrSchemaUri = core.getRevisionOrSchemaUri(schemaName); if (typeof revisionOrSchemaUri === 'string') { event.$schema = revisionOrSchemaUri; event.client_dt = new Date().toISOString(); } else { event.revision = revisionOrSchemaUri; } return event; }, makeBeaconUrl: function (data) { var queryString = encodeURIComponent(JSON.stringify(data)); return config.baseUrl + '?' + queryString + ';'; }, checkUrlSize: function (schemaName, url) { var message; if (url.length > core.maxUrlSize) { message = 'Url exceeds maximum length'; core.logFailure(schemaName, 'urlSize'); mw.track('eventlogging.error', mw.format('[$1] $2', schemaName, message)); return message; } }, sendBeacon: function (url) {
                                   if (navigator.sendBeacon) { try { navigator.sendBeacon(url); } catch (e) { } } else {
                                          document.createElement('img'
                                          ).src = url;
                                   }
                            }, enqueue: queue.add, logEvent: function (schemaName, eventData) { var url, sizeError, event = core.prepare(schemaName, eventData), deferred = $.Deferred(); if (event.$schema) { core.submit(makeLegacyStreamName(schemaName), event); deferred.resolveWith(event, [event]); } else { url = core.makeBeaconUrl(event); sizeError = core.checkUrlSize(schemaName, url); if (!sizeError) { if (config.baseUrl || debugMode) { core.enqueue(function () { core.sendBeacon(url); }); } if (debugMode) { mw.track('eventlogging.debug', event); } deferred.resolveWith(event, [event]); } else { deferred.rejectWith(event, [event, sizeError]); } } return deferred.promise(); }, logFailure: function (schemaName, errorCode) { mw.track('counter.eventlogging.client_errors.' + schemaName + '.' + errorCode); }, randomTokenMatch: function (populationSize, explicitToken) { var token = explicitToken || mw.user.generateRandomSessionId(), rand = parseInt(token.slice(0, 8), 16); return rand % populationSize === 0; }, sessionInSample: function (populationSize) {
                                   return this.randomTokenMatch(populationSize, mw.user.
                                          sessionId());
                            }, inSample: function (populationSize) { return this.eventInSample(populationSize); }, eventInSample: function (populationSize) { return this.randomTokenMatch(populationSize, mw.user.getPageviewToken()); }
                     }; core.submit = function (streamName, eventData) {
                            var streamConfig = core.streamConfig(streamName); if (!streamConfig) { return; } if (!core.streamInSample(streamConfig)) { return; } if (!eventData || !eventData.$schema) { mw.log.warn('submit( ' + streamName + ', eventData ) called with eventData ' + 'missing required field "$schema". No event will issue.'); return; } eventData.meta = eventData.meta || {}; eventData.meta.stream = streamName; eventData.meta.domain = mw.config.get('wgServerName'); if (eventData.client_dt) { delete eventData.dt; } else { eventData.dt = new Date().toISOString(); } core.addRequestedValues(eventData, streamConfig); if (debugMode) { mw.track('eventlogging.eventSubmitDebug', { streamName: streamName, eventData: eventData }); } if (config.serviceUri) {
                                   core.enqueue(function () {
                                          var json = JSON.stringify(eventData); try {
                                                 navigator.
                                                        sendBeacon(config.serviceUri, json);
                                          } catch (e) { }
                                   });
                            }
                     }; core.storage = { get: function (name) { mw.cookie.get('el-' + name); }, set: function (name, value) { mw.cookie.set('el-' + name, value); }, unset: function (name) { mw.cookie.set('el-' + name, null); } }; core.id = (function () { var UINT32_MAX = 4294967295, pageviewId = null, sessionId = null; mw.trackSubscribe('sessionReset', function () { core.id.resetSessionId(); }); return { resetPageviewId: function () { pageviewId = null; }, resetSessionId: function () { sessionId = null; core.storage.unset('sessionId'); }, generateId: function () { return mw.user.generateRandomSessionId(); }, normalizeId: function (id) { return parseInt(id.slice(0, 8), 16) / UINT32_MAX; }, getPageviewId: function () { if (!pageviewId) { pageviewId = core.id.generateId(); } return pageviewId; }, getSessionId: function () { if (!sessionId) { sessionId = core.storage.get('sessionId'); if (!sessionId) { sessionId = core.id.generateId(); core.storage.set('sessionId', sessionId); } } return sessionId; } }; }()); core.streamInSample = function (streamConfig) {
                            var id; if (debugMode) {
                                   return true
                                          ;
                            } if (!streamConfig) { return false; } if (!streamConfig.sample) { return true; } if ((!streamConfig.sample.rate || !streamConfig.sample.unit) || (streamConfig.sample.rate < 0 || streamConfig.sample.rate > 1)) { return false; } switch (streamConfig.sample.unit) { case 'pageview': id = core.id.getPageviewId(); break; case 'session': id = core.id.getSessionId(); break; default: return false; }id = core.id.normalizeId(id); return (id < streamConfig.sample.rate);
                     }; core.streamConfig = function (streamName) { if (config.streamConfigs === false) { return {}; } if (!config.streamConfigs[streamName]) { return undefined; } return $.extend(true, {}, config.streamConfigs[streamName]); }; core.addRequestedValues = function (eventData, streamConfig) {
                            var i, requestedValue, requestedValues = streamConfig.provide_values; if (!Array.isArray(requestedValues)) { return eventData; } eventData.test = eventData.test || {}; if (!(eventData.test === Object(eventData.test))) { return eventData; } for (i = 0; i < requestedValues.length; i++) {
                                   requestedValue = requestedValues[i]; if ({}.hasOwnProperty.call(eventData.
                                          test, requestedValue)) { continue; } switch (requestedValue) { case 'skin': eventData.test.skin = mw.config.get('skin'); break; default: mw.log.warn('EventLogging: Ignoring unknown requested value \'' + requestedValue + '\''); break; }
                            } return eventData;
                     }; function getUserEditCountBucket(editCount) { if (editCount === null) { return null; } if (editCount === 0) { return '0 edits'; } if (editCount < 5) { return '1-4 edits'; } if (editCount < 100) { return '5-99 edits'; } if (editCount < 1000) { return '100-999 edits'; } return '1000+ edits'; } mw.config.set('wgUserEditCountBucket', getUserEditCountBucket(mw.config.get('wgUserEditCount'))); if (window.QUnit) { core.setOptionsForTest = function (opts) { var oldConfig = config; config = $.extend({}, config, opts); return oldConfig; }; core.BackgroundQueue = BackgroundQueue; core.streamConfigs = config.streamConfigs; core.makeLegacyStreamName = makeLegacyStreamName; core.getUserEditCountBucket = getUserEditCountBucket; } module.exports = core;
              }, "Schema.js": function (require, module, exports) {
                     'use strict'; function Schema(name, samplingRate,
                            defaults) { if (!name) { throw new Error('name is required'); } this.name = name; this.populationSize = samplingRate !== undefined ? (1 / samplingRate) : 1; this.defaults = defaults || {}; } Schema.prototype.log = function (data, samplingRate) { var pop = samplingRate !== undefined ? (1 / samplingRate) : this.populationSize; if (mw.eventLog.eventInSample(pop)) { mw.track('event.' + this.name, $.extend({}, this.defaults, data)); } }; module.exports = Schema;
              }, "BackgroundQueue.js": function (require, module, exports) {
                     'use strict'; module.exports = function BackgroundQueue(intervalSecs) {
                            var timer = null, pendingCallbacks = [], getVisibilityChanged, visibilityEvent, discardingPage, queue = this; intervalSecs = intervalSecs || 30; queue.add = function (fn) { if (discardingPage) { fn(); return; } pendingCallbacks.push(fn); if (!timer) { timer = setTimeout(queue.flush, intervalSecs * 1000); } }; queue.flush = function () { if (timer) { clearTimeout(timer); timer = null; } while (pendingCallbacks.length) { pendingCallbacks.shift()(); } }; if (typeof document.hidden !== 'undefined') {
                                   getVisibilityChanged = function () {
                                          return document.hidden;
                                   }; visibilityEvent = 'visibilitychange';
                            } else if (typeof document.mozHidden !== 'undefined') { getVisibilityChanged = function () { return document.mozHidden; }; visibilityEvent = 'mozvisibilitychange'; } else if (typeof document.webkitHidden !== 'undefined') { getVisibilityChanged = function () { return document.webkitHidden; }; visibilityEvent = 'webkitvisibilitychange'; } function discardPage() { discardingPage = true; queue.flush(); } window.addEventListener('pagehide', discardPage); window.addEventListener('pageshow', function () { discardingPage = false; }); if (getVisibilityChanged) { document.addEventListener(visibilityEvent, function () { if (getVisibilityChanged()) { queue.flush(); } }); } if (window.QUnit) { queue.getTimer = function () { return timer; }; queue.getCallbacks = function () { return pendingCallbacks; }; }
                     };
              }, "data.json": { "baseUrl": "https://legacy:8080/event.gif", "schemasInfo": { "ReferencePreviewsBaseline": "/analytics/legacy/referencepreviewsbaseline/1.0.0", "ReferencePreviewsCite": "/analytics/legacy/referencepreviewscite/1.0.0", "MediaViewer": 10867062, "MultimediaViewerNetworkPerformance": 15573630, "MultimediaViewerDuration": 10427980, "MultimediaViewerAttribution": 9758179, "MultimediaViewerDimensions": 10014238, "TemplateDataEditor": "/analytics/legacy/templatedataeditor/1.0.0", "TemplateDataApi": "/analytics/legacy/templatedataapi/1.0.0", "SpecialInvestigate": "/analytics/legacy/specialinvestigate/1.0.0", "CodeMirrorUsage": "/analytics/legacy/codemirrorusage/1.0.0", "TwoColConflictConflict": "/analytics/legacy/twocolconflictconflict/1.0.0", "TwoColConflictExit": "/analytics/legacy/twocolconflictexit/1.0.0" }, "serviceUri": false, "queueLingerSeconds": 30, "streamConfigs": false }
       }
}, null, null, null);; mw.loader.implement("mediawiki.user@1ab6a", function ($, jQuery, require, module) {
       (function () {
              var userInfoPromise, pageviewRandomId; function getUserInfo() { if (!userInfoPromise) { userInfoPromise = new mw.Api().getUserInfo(); } return userInfoPromise; } $.extend(mw.user, {
                     generateRandomSessionId: function () { var rnds, i, crypto = window.crypto || window.msCrypto; try { rnds = new Uint16Array(5); crypto.getRandomValues(rnds); } catch (e) { rnds = new Array(5); for (i = 0; i < 5; i++) { rnds[i] = Math.floor(Math.random() * 0x10000); } } return (rnds[0] + 0x10000).toString(16).slice(1) + (rnds[1] + 0x10000).toString(16).slice(1) + (rnds[2] + 0x10000).toString(16).slice(1) + (rnds[3] + 0x10000).toString(16).slice(1) + (rnds[4] + 0x10000).toString(16).slice(1); }, getPageviewToken: function () { if (!pageviewRandomId) { pageviewRandomId = mw.user.generateRandomSessionId(); } return pageviewRandomId; }, getId: function () { return mw.config.get('wgUserId') || 0; }, getName: function () { return mw.config.get('wgUserName'); }, getRegistration: function () {
                            var registration; if (mw.user.isAnon()) {
                                   return false;
                            } registration = mw.config.get('wgUserRegistration'); return !registration ? null : new Date(registration);
                     }, isAnon: function () { return mw.user.getName() === null; }, sessionId: function () { var sessionId = mw.cookie.get('mwuser-sessionId'); if (sessionId === null) { sessionId = mw.user.generateRandomSessionId(); mw.cookie.set('mwuser-sessionId', sessionId, { expires: null }); } return sessionId; }, id: function () { return mw.user.getName() || mw.user.sessionId(); }, getGroups: function (callback) { var userGroups = mw.config.get('wgUserGroups', []); return $.Deferred().resolve(userGroups).then(callback); }, getRights: function (callback) { return getUserInfo().then(function (userInfo) { return userInfo.rights; }, function () { return []; }).then(callback); }
              });
       }());
}, null, null, null);; mw.loader.implement("mediawiki.cookie@iwm3u", {
       main: "index.js", files: {
              "index.js": function (require, module, exports) {
                     'use strict'; var config = require('./config.json'), defaults = { prefix: config.prefix, domain: config.domain, path: config.path, expires: config.expires, secure: false, sameSite: '', sameSiteLegacy: config.sameSiteLegacy }; mw.cookie = {
                            set: function (key, value, options) {
                                   var prefix, date, sameSiteLegacy; if (arguments.length > 2 && (!options || options instanceof Date || typeof options === 'number')) { options = { expires: options }; } options = $.extend({}, defaults, options); prefix = options.prefix; delete options.prefix; if (!options.expires) { delete options.expires; } else if (typeof options.expires === 'number') { date = new Date(); date.setTime(Number(date) + (options.expires * 1000)); options.expires = date; } sameSiteLegacy = options.sameSiteLegacy; delete options.sameSiteLegacy; if (value !== null) { value = String(value); } $.cookie(prefix + key, value, options); if (sameSiteLegacy && options.sameSite && options.sameSite.toLowerCase() === 'none') {
                                          options = $.
                                                 extend({}, options); delete options.sameSite; $.cookie(prefix + 'ss0-' + key, value, options);
                                   }
                            }, get: function (key, prefix, defaultValue) { var result; if (prefix === undefined || prefix === null) { prefix = defaults.prefix; } if (arguments.length < 3) { defaultValue = null; } result = $.cookie(prefix + key); return result !== null ? result : defaultValue; }, getCrossSite: function (key, prefix, defaultValue) { var value; value = this.get(key, prefix, null); if (value === null) { value = this.get('ss0-' + key, prefix, null); } if (value === null) { value = defaultValue; } return value; }
                     }; if (window.QUnit) { module.exports = { setDefaults: function (value) { var prev = defaults; defaults = value; return prev; } }; }
              }, "config.json": { "prefix": "huiji", "domain": ".huijiwiki.com", "path": "/", "expires": 2592000, "sameSiteLegacy": false }
       }
}, null, null, null);; mw.loader.implement("jquery.cookie@1u41n", function ($, jQuery, require, module) {
       (function ($, document, undefined) {
              var pluses = /\+/g; function raw(s) { return s; } function decoded(s) { try { return unRfc2068(decodeURIComponent(s.replace(pluses, ' '))); } catch (e) { return ''; } } function unRfc2068(value) { if (value.indexOf('"') === 0) { value = value.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\'); } return value; } function fromJSON(value) { return config.json ? JSON.parse(value) : value; } var config = $.cookie = function (key, value, options) {
                     if (value !== undefined) {
                            options = $.extend({}, config.defaults, options); if (value === null) { options.expires = -1; } if (typeof options.expires === 'number') { var days = options.expires, t = options.expires = new Date(); t.setDate(t.getDate() + days); } value = config.json ? JSON.stringify(value) : String(value); return (document.cookie = [encodeURIComponent(key), '=', config.raw ? value : encodeURIComponent(value), options.expires ? '; expires=' + options.expires.toUTCString() : '', options.path ? '; path=' + options.path : '', options.domain ?
                                   '; domain=' + options.domain : '', options.secure ? '; secure' : '', options.sameSite ? '; samesite=' + options.sameSite : ''].join(''));
                     } var decode = config.raw ? raw : decoded; var cookies = document.cookie.split('; '); var result = key ? null : {}; for (var i = 0, l = cookies.length; i < l; i++) { var parts = cookies[i].split('='); var name = decode(parts.shift()); var cookie = decode(parts.join('=')); if (key && key === name) { result = fromJSON(cookie); break; } if (!key) { result[name] = fromJSON(cookie); } } return result;
              }; config.defaults = {}; $.removeCookie = function (key, options) { if ($.cookie(key) !== null) { $.cookie(key, null, options); return true; } return false; };
       })(jQuery, document);
}, null, null, null);; mw.loader.implement("ext.gadget.sprite@1f4sz", null, { "css": ["#Achievement_1{background-position:-0px -0px}#Achievement_2{background-position:-64px -0px}#Achievement_3{background-position:-128px -0px}#Achievement_4{background-position:-192px -0px}#Achievement_5{background-position:-256px -0px}#Achievement_6{background-position:-320px -0px}#Achievement_7{background-position:-384px -0px}#Achievement_8{background-position:-448px -0px}#Achievement_9{background-position:-512px -0px}#Achievement_10{background-position:-576px -0px}#Achievement_11{background-position:-640px -0px}#Achievement_12{background-position:-704px -0px}#Achievement_13{background-position:-768px -0px}#Achievement_14{background-position:-832px -0px}#Achievement_15{background-position:-896px -0px}#Achievement_16{background-position:-960px -0px}#Achievement_17{background-position:-1024px -0px}#Achievement_18{background-position:-1088px -0px}#Achievement_19{background-position:-1152px -0px}#Achievement_20{background-position:-1216px -0px}#Achievement_21{background-position:-0px -64px}#Achievement_22{background-position:-64px -64px}#Achievement_23{background-position:-128px -64px}#Achievement_24{background-position:-192px -64px}#Achievement_25{background-position:-256px -64px}#Achievement_26{background-position:-320px -64px}#Achievement_27{background-position:-384px -64px}#Achievement_28{background-position:-448px -64px}#Achievement_29{background-position:-512px -64px}#Achievement_30{background-position:-576px -64px}#Achievement_31{background-position:-640px -64px}#Achievement_32{background-position:-704px -64px}#Achievement_33{background-position:-768px -64px}#Achievement_34{background-position:-832px -64px}#Achievement_35{background-position:-896px -64px}#Achievement_36{background-position:-960px -64px}#Achievement_37{background-position:-1024px -64px}#Achievement_38{background-position:-1088px -64px}#Achievement_39{background-position:-1152px -64px}#Achievement_40{background-position:-1216px -64px}#Achievement_41{background-position:-0px -128px}#Achievement_42{background-position:-64px -128px}#Achievement_43{background-position:-128px -128px}#Achievement_44{background-position:-192px -128px}#Achievement_45{background-position:-256px -128px}#Achievement_46{background-position:-320px -128px}#Achievement_47{background-position:-384px -128px}#Achievement_48{background-position:-448px -128px}#Achievement_49{background-position:-512px -128px}#Achievement_50{background-position:-576px -128px}#Achievement_51{background-position:-640px -128px}#Achievement_52{background-position:-704px -128px}#Achievement_53{background-position:-768px -128px}#Achievement_54{background-position:-832px -128px}#Achievement_55{background-position:-896px -128px}#Achievement_56{background-position:-960px -128px}#Achievement_57{background-position:-1024px -128px}#Achievement_58{background-position:-1088px -128px}#Achievement_59{background-position:-1152px -128px}#Achievement_60{background-position:-1216px -128px}#Achievement_61{background-position:-0px -192px}#Achievement_62{background-position:-64px -192px}#Achievement_63{background-position:-128px -192px}#Achievement_64{background-position:-192px -192px}#Achievement_65{background-position:-256px -192px}#Achievement_66{background-position:-320px -192px}#Achievement_67{background-position:-384px -192px}#Achievement_68{background-position:-448px -192px}#Achievement_69{background-position:-512px -192px}#Achievement_70{background-position:-576px -192px}#Achievement_71{background-position:-640px -192px}#Achievement_72{background-position:-704px -192px}#Achievement_73{background-position:-768px -192px}#Achievement_74{background-position:-832px -192px}#Achievement_75{background-position:-896px -192px}#Achievement_76{background-position:-960px -192px}#Achievement_77{background-position:-1024px -192px}#Achievement_78{background-position:-1088px -192px}#Achievement_79{background-position:-1152px -192px}#Achievement_80{background-position:-1216px -192px}#Achievement_81{background-position:-0px -256px}#Achievement_82{background-position:-64px -256px}#Achievement_83{background-position:-128px -256px}#Achievement_84{background-position:-192px -256px}#Achievement_85{background-position:-256px -256px}#Achievement_86{background-position:-320px -256px}#Achievement_87{background-position:-384px -256px}#Achievement_88{background-position:-448px -256px}#Achievement_89{background-position:-512px -256px}#Achievement_90{background-position:-576px -256px}#Achievement_91{background-position:-640px -256px}#Achievement_92{background-position:-704px -256px}#Achievement_93{background-position:-768px -256px}#Achievement_94{background-position:-832px -256px}#Achievement_95{background-position:-896px -256px}#Achievement_96{background-position:-960px -256px}#Achievement_97{background-position:-1024px -256px}#Achievement_98{background-position:-1088px -256px}#Achievement_99{background-position:-1152px -256px}#Achievement_100{background-position:-1216px -256px}#Achievement_101{background-position:-0px -320px}#Achievement_102{background-position:-64px -320px}#Achievement_103{background-position:-128px -320px}#Achievement_104{background-position:-192px -320px}#Achievement_105{background-position:-256px -320px}#Achievement_106{background-position:-320px -320px}#Achievement_107{background-position:-384px -320px}#Achievement_108{background-position:-448px -320px}#Achievement_109{background-position:-512px -320px}#Achievement_110{background-position:-576px -320px}#Achievement_111{background-position:-640px -320px}#Achievement_112{background-position:-704px -320px}#Achievement_113{background-position:-768px -320px}#Achievement_114{background-position:-832px -320px}#Achievement_115{background-position:-896px -320px}#Achievement_116{background-position:-960px -320px}#Achievement_117{background-position:-1024px -320px}#Achievement_118{background-position:-1088px -320px}#Achievement_119{background-position:-1152px -320px}#Achievement_120{background-position:-1216px -320px}#Achievement_121{background-position:-0px -384px}#Achievement_122{background-position:-64px -384px}#Achievement_123{background-position:-128px -384px}#Achievement_124{background-position:-192px -384px}#Achievement_125{background-position:-256px -384px}#Achievement_126{background-position:-320px -384px}#Achievement_127{background-position:-384px -384px}#Achievement_128{background-position:-448px -384px}#Achievement_129{background-position:-512px -384px}#Achievement_130{background-position:-576px -384px}#Achievement_131{background-position:-640px -384px}#Achievement_132{background-position:-704px -384px}#Achievement_133{background-position:-768px -384px}#Achievement_134{background-position:-832px -384px}#Achievement_135{background-position:-896px -384px}#Achievement_136{background-position:-960px -384px}#Achievement_137{background-position:-1024px -384px}#Achievement_138{background-position:-1088px -384px}#Achievement_139{background-position:-1152px -384px}#Achievement_140{background-position:-1216px -384px}#Achievement_141{background-position:-0px -448px}#Achievement_142{background-position:-64px -448px}#Achievement_143{background-position:-128px -448px}#Achievement_144{background-position:-192px -448px}#Achievement_145{background-position:-256px -448px}#Achievement_146{background-position:-320px -448px}#Achievement_147{background-position:-384px -448px}#Achievement_148{background-position:-448px -448px}#Achievement_149{background-position:-512px -448px}#Achievement_150{background-position:-576px -448px}#Achievement_151{background-position:-640px -448px}#Achievement_152{background-position:-704px -448px}#Achievement_153{background-position:-768px -448px}#Achievement_154{background-position:-832px -448px}#Achievement_155{background-position:-896px -448px}#Achievement_156{background-position:-960px -448px}#Achievement_157{background-position:-1024px -448px}#Achievement_158{background-position:-1088px -448px}#Achievement_159{background-position:-1152px -448px}#Achievement_160{background-position:-1216px -448px}#Achievement_161{background-position:-0px -512px}#Achievement_162{background-position:-64px -512px}#Achievement_163{background-position:-128px -512px}#Achievement_164{background-position:-192px -512px}#Achievement_165{background-position:-256px -512px}#Achievement_166{background-position:-320px -512px}#Achievement_167{background-position:-384px -512px}#Achievement_168{background-position:-448px -512px}#Achievement_169{background-position:-512px -512px}#Achievement_170{background-position:-576px -512px}#Achievement_171{background-position:-640px -512px}#Achievement_172{background-position:-704px -512px}#Achievement_173{background-position:-768px -512px}#Achievement_174{background-position:-832px -512px}#Achievement_175{background-position:-896px -512px}#Achievement_176{background-position:-960px -512px}#Achievement_177{background-position:-1024px -512px}#Achievement_178{background-position:-1088px -512px}#Achievement_179{background-position:-1152px -512px}#Achievement_180{background-position:-1216px -512px}#Achievement_181{background-position:-0px -576px}#Achievement_182{background-position:-64px -576px}#Achievement_183{background-position:-128px -576px}#Achievement_184{background-position:-192px -576px}#Achievement_185{background-position:-256px -576px}#Achievement_186{background-position:-320px -576px}#Achievement_187{background-position:-384px -576px}#Achievement_188{background-position:-448px -576px}#Achievement_189{background-position:-512px -576px}#Achievement_190{background-position:-576px -576px}#Achievement_191{background-position:-640px -576px}#Achievement_192{background-position:-704px -576px}#Achievement_193{background-position:-768px -576px}#Achievement_194{background-position:-832px -576px}#Achievement_195{background-position:-896px -576px}#Achievement_196{background-position:-960px -576px}#Achievement_197{background-position:-1024px -576px}#Achievement_198{background-position:-1088px -576px}#Achievement_199{background-position:-1152px -576px}#Achievement_200{background-position:-1216px -576px}#Achievement_201{background-position:-0px -640px}#Achievement_202{background-position:-64px -640px}#Achievement_203{background-position:-128px -640px}#Achievement_204{background-position:-192px -640px}#Achievement_205{background-position:-256px -640px}#Achievement_206{background-position:-320px -640px}#Achievement_207{background-position:-384px -640px}#Achievement_208{background-position:-448px -640px}#Achievement_209{background-position:-512px -640px}#Achievement_210{background-position:-576px -640px}#Achievement_211{background-position:-640px -640px}#Achievement_212{background-position:-704px -640px}#Achievement_213{background-position:-768px -640px}#Achievement_214{background-position:-832px -640px}#Achievement_215{background-position:-896px -640px}#Achievement_216{background-position:-960px -640px}#Achievement_217{background-position:-1024px -640px}#Achievement_218{background-position:-1088px -640px}#Achievement_219{background-position:-1152px -640px}#Achievement_220{background-position:-1216px -640px}#Achievement_221{background-position:-0px -704px}#Achievement_222{background-position:-64px -704px}#Achievement_223{background-position:-128px -704px}#Achievement_224{background-position:-192px -704px}#Achievement_225{background-position:-256px -704px}#Achievement_226{background-position:-320px -704px}#Achievement_227{background-position:-384px -704px}#Achievement_228{background-position:-448px -704px}#Achievement_229{background-position:-512px -704px}#Achievement_230{background-position:-576px -704px}#Achievement_231{background-position:-640px -704px}#Achievement_232{background-position:-704px -704px}#Achievement_233{background-position:-768px -704px}#Achievement_234{background-position:-832px -704px}#Achievement_235{background-position:-896px -704px}#Achievement_236{background-position:-960px -704px}#Achievement_237{background-position:-1024px -704px}#Achievement_238{background-position:-1088px -704px}#Achievement_239{background-position:-1152px -704px}#Achievement_240{background-position:-1216px -704px}#Achievement_241{background-position:-0px -768px}#Achievement_242{background-position:-64px -768px}#Achievement_243{background-position:-128px -768px}#Achievement_244{background-position:-192px -768px}#Achievement_245{background-position:-256px -768px}#Achievement_246{background-position:-320px -768px}#Achievement_247{background-position:-384px -768px}#Achievement_248{background-position:-448px -768px}#Achievement_249{background-position:-512px -768px}#Achievement_250{background-position:-576px -768px}#Achievement_251{background-position:-640px -768px}#Achievement_252{background-position:-704px -768px}#Achievement_253{background-position:-768px -768px}#Achievement_254{background-position:-832px -768px}#Achievement_255{background-position:-896px -768px}#Achievement_256{background-position:-960px -768px}#Achievement_257{background-position:-1024px -768px}#Achievement_258{background-position:-1088px -768px}#Achievement_259{background-position:-1152px -768px}#Achievement_260{background-position:-1216px -768px}#Achievement_261{background-position:-0px -832px}#Achievement_262{background-position:-64px -832px}#Achievement_263{background-position:-128px -832px}#Achievement_264{background-position:-192px -832px}#Achievement_265{background-position:-256px -832px}#Achievement_266{background-position:-320px -832px}#Achievement_267{background-position:-384px -832px}#Achievement_268{background-position:-448px -832px}#Achievement_269{background-position:-512px -832px}#Achievement_270{background-position:-576px -832px}#Achievement_271{background-position:-640px -832px}#Achievement_272{background-position:-704px -832px}#Achievement_273{background-position:-768px -832px}#Achievement_274{background-position:-832px -832px}#Achievement_275{background-position:-896px -832px}#Achievement_276{background-position:-960px -832px}#Achievement_277{background-position:-1024px -832px}#Achievement_278{background-position:-1088px -832px}#Achievement_279{background-position:-1152px -832px}#Achievement_280{background-position:-1216px -832px}#Achievement_281{background-position:-0px -896px}#Achievement_282{background-position:-64px -896px}#Achievement_283{background-position:-128px -896px}#Achievement_284{background-position:-192px -896px}#Achievement_285{background-position:-256px -896px}#Achievement_286{background-position:-320px -896px}#Achievement_287{background-position:-384px -896px}#Achievement_288{background-position:-448px -896px}#Achievement_289{background-position:-512px -896px}#Achievement_290{background-position:-576px -896px}#Achievement_291{background-position:-640px -896px}#Achievement_292{background-position:-704px -896px}#Achievement_293{background-position:-768px -896px}#Achievement_294{background-position:-832px -896px}#Achievement_295{background-position:-896px -896px}#Achievement_296{background-position:-960px -896px}#Achievement_297{background-position:-1024px -896px}#Achievement_298{background-position:-1088px -896px}#Achievement_299{background-position:-1152px -896px}#Achievement_300{background-position:-1216px -896px}#Achievement_301{background-position:-0px -960px}#Achievement_302{background-position:-64px -960px}#Achievement_303{background-position:-128px -960px}#Achievement_304{background-position:-192px -960px}#Achievement_305{background-position:-256px -960px}#Achievement_306{background-position:-320px -960px}#Achievement_307{background-position:-384px -960px}#Achievement_308{background-position:-448px -960px}#Achievement_309{background-position:-512px -960px}#Achievement_310{background-position:-576px -960px}#Achievement_311{background-position:-640px -960px}#Achievement_312{background-position:-704px -960px}#Achievement_313{background-position:-768px -960px}#Achievement_314{background-position:-832px -960px}#Achievement_315{background-position:-896px -960px}#Achievement_316{background-position:-960px -960px}#Achievement_317{background-position:-1024px -960px}#Achievement_318{background-position:-1088px -960px}#Achievement_319{background-position:-1152px -960px}#Achievement_320{background-position:-1216px -960px}#Achievement_321{background-position:-0px -1024px}#Achievement_322{background-position:-64px -1024px}#Achievement_323{background-position:-128px -1024px}#Achievement_324{background-position:-192px -1024px}#Achievement_325{background-position:-256px -1024px}#Achievement_326{background-position:-320px -1024px}#Achievement_327{background-position:-384px -1024px}#Achievement_328{background-position:-448px -1024px}#Achievement_329{background-position:-512px -1024px}#Achievement_330{background-position:-576px -1024px}#Achievement_331{background-position:-640px -1024px}#Achievement_332{background-position:-704px -1024px}#Achievement_333{background-position:-768px -1024px}#Achievement_334{background-position:-832px -1024px}#Achievement_335{background-position:-896px -1024px}#Achievement_336{background-position:-960px -1024px}#Achievement_337{background-position:-1024px -1024px}#Achievement_338{background-position:-1088px -1024px}#Achievement_339{background-position:-1152px -1024px}#Achievement_340{background-position:-1216px -1024px}#Achievement_341{background-position:-0px -1088px}#Achievement_342{background-position:-64px -1088px}#Achievement_343{background-position:-128px -1088px}#Achievement_344{background-position:-192px -1088px}#Achievement_345{background-position:-256px -1088px}#Achievement_346{background-position:-320px -1088px}#Achievement_347{background-position:-384px -1088px}#Achievement_348{background-position:-448px -1088px}#Achievement_349{background-position:-512px -1088px}#Achievement_350{background-position:-576px -1088px}#Achievement_351{background-position:-640px -1088px}#Achievement_352{background-position:-704px -1088px}#Achievement_353{background-position:-768px -1088px}#Achievement_354{background-position:-832px -1088px}#Achievement_355{background-position:-896px -1088px}#Achievement_356{background-position:-960px -1088px}#Achievement_357{background-position:-1024px -1088px}#Achievement_358{background-position:-1088px -1088px}#Achievement_359{background-position:-1152px -1088px}#Achievement_360{background-position:-1216px -1088px}#Achievement_361{background-position:-0px -1152px}#Achievement_362{background-position:-64px -1152px}#Achievement_363{background-position:-128px -1152px}#Achievement_364{background-position:-192px -1152px}#Achievement_365{background-position:-256px -1152px}#Achievement_366{background-position:-320px -1152px}#Achievement_367{background-position:-384px -1152px}#Achievement_368{background-position:-448px -1152px}#Achievement_369{background-position:-512px -1152px}#Achievement_370{background-position:-576px -1152px}#Achievement_371{background-position:-640px -1152px}#Achievement_372{background-position:-704px -1152px}#Achievement_373{background-position:-768px -1152px}#Achievement_374{background-position:-832px -1152px}#Achievement_375{background-position:-896px -1152px}#Achievement_376{background-position:-960px -1152px}#Achievement_377{background-position:-1024px -1152px}#Achievement_378{background-position:-1088px -1152px}#Achievement_379{background-position:-1152px -1152px}#Achievement_380{background-position:-1216px -1152px}#Achievement_381{background-position:-0px -1216px}#Achievement_382{background-position:-64px -1216px}#Achievement_383{background-position:-128px -1216px}#Achievement_384{background-position:-192px -1216px}#Achievement_385{background-position:-256px -1216px}#Achievement_386{background-position:-320px -1216px}#Achievement_387{background-position:-384px -1216px}#Achievement_388{background-position:-448px -1216px}#Achievement_389{background-position:-512px -1216px}#Achievement_390{background-position:-576px -1216px}#Achievement_391{background-position:-640px -1216px}#Achievement_392{background-position:-704px -1216px}#Achievement_393{background-position:-768px -1216px}#Achievement_394{background-position:-832px -1216px}#Achievement_395{background-position:-896px -1216px}#Achievement_396{background-position:-960px -1216px}#Achievement_397{background-position:-1024px -1216px}#Achievement_398{background-position:-1088px -1216px}#Achievement_399{background-position:-1152px -1216px}#Achievement_400{background-position:-1216px -1216px}#Achievement_401{background-position:-0px -1280px}#Achievement_402{background-position:-64px -1280px}#Achievement_403{background-position:-128px -1280px}#Achievement_404{background-position:-192px -1280px}#Achievement_405{background-position:-256px -1280px}#Achievement_406{background-position:-320px -1280px}#Achievement_407{background-position:-384px -1280px}#Achievement_408{background-position:-448px -1280px}#Achievement_409{background-position:-512px -1280px}#Achievement_410{background-position:-576px -1280px}#Achievement_411{background-position:-640px -1280px}#Achievement_412{background-position:-704px -1280px}#Achievement_413{background-position:-768px -1280px}#Achievement_414{background-position:-832px -1280px}#Achievement_415{background-position:-896px -1280px}#Achievement_416{background-position:-960px -1280px}#Achievement_417{background-position:-1024px -1280px}#Achievement_418{background-position:-1088px -1280px}#Achievement_419{background-position:-1152px -1280px}#Achievement_420{background-position:-1216px -1280px}#Achievement_421{background-position:-0px -1344px}#Achievement_422{background-position:-64px -1344px}#Achievement_423{background-position:-128px -1344px}#Achievement_424{background-position:-192px -1344px}#Achievement_425{background-position:-256px -1344px}#Achievement_426{background-position:-320px -1344px}#Achievement_427{background-position:-384px -1344px}#Achievement_428{background-position:-448px -1344px}#Achievement_429{background-position:-512px -1344px}#Achievement_430{background-position:-576px -1344px}#Achievement_431{background-position:-640px -1344px}#Achievement_432{background-position:-704px -1344px}#Achievement_433{background-position:-768px -1344px}#Achievement_434{background-position:-832px -1344px}#Achievement_435{background-position:-896px -1344px}#Achievement_436{background-position:-960px -1344px}#Achievement_437{background-position:-1024px -1344px}#Achievement_438{background-position:-1088px -1344px}#Achievement_439{background-position:-1152px -1344px}#Achievement_440{background-position:-1216px -1344px}#Achievement_441{background-position:-0px -1408px}#Achievement_442{background-position:-64px -1408px}#Achievement_443{background-position:-128px -1408px}#Achievement_444{background-position:-192px -1408px}#Achievement_445{background-position:-256px -1408px}#Achievement_446{background-position:-320px -1408px}#Achievement_447{background-position:-384px -1408px}#Achievement_448{background-position:-448px -1408px}#Achievement_449{background-position:-512px -1408px}#Achievement_450{background-position:-576px -1408px}#Achievement_451{background-position:-640px -1408px}#Achievement_452{background-position:-704px -1408px}#Achievement_453{background-position:-768px -1408px}#Achievement_454{background-position:-832px -1408px}#Achievement_455{background-position:-896px -1408px}#Achievement_456{background-position:-960px -1408px}#Achievement_457{background-position:-1024px -1408px}#Achievement_458{background-position:-1088px -1408px}#Achievement_459{background-position:-1152px -1408px}#Achievement_460{background-position:-1216px -1408px}#Achievement_461{background-position:-0px -1472px}#Achievement_462{background-position:-64px -1472px}#Achievement_463{background-position:-128px -1472px}#Achievement_464{background-position:-192px -1472px}#Achievement_465{background-position:-256px -1472px}#Achievement_466{background-position:-320px -1472px}#Achievement_467{background-position:-384px -1472px}#Achievement_468{background-position:-448px -1472px}#Achievement_469{background-position:-512px -1472px}#Achievement_470{background-position:-576px -1472px}#Achievement_471{background-position:-640px -1472px}#Achievement_472{background-position:-704px -1472px}#Achievement_473{background-position:-768px -1472px}#Achievement_474{background-position:-832px -1472px}#Achievement_475{background-position:-896px -1472px}#Achievement_476{background-position:-960px -1472px}#Achievement_477{background-position:-1024px -1472px}#Achievement_478{background-position:-1088px -1472px}#Achievement_479{background-position:-1152px -1472px}#Achievement_480{background-position:-1216px -1472px}#Achievement_481{background-position:-0px -1536px}#Achievement_482{background-position:-64px -1536px}#Achievement_483{background-position:-128px -1536px}#Achievement_484{background-position:-192px -1536px}#Achievement_485{background-position:-256px -1536px}#Achievement_486{background-position:-320px -1536px}#Achievement_487{background-position:-384px -1536px}#Achievement_488{background-position:-448px -1536px}#Achievement_489{background-position:-512px -1536px}#Achievement_490{background-position:-576px -1536px}#Achievement_491{background-position:-640px -1536px}#Achievement_492{background-position:-704px -1536px}#Achievement_493{background-position:-768px -1536px}#Achievement_494{background-position:-832px -1536px}#Achievement_495{background-position:-896px -1536px}#Achievement_496{background-position:-960px -1536px}#Achievement_497{background-position:-1024px -1536px}#Achievement_498{background-position:-1088px -1536px}#Achievement_499{background-position:-1152px -1536px}#Achievement_500{background-position:-1216px -1536px}#Achievement_501{background-position:-0px -1600px}#Achievement_502{background-position:-64px -1600px}#Achievement_503{background-position:-128px -1600px}#Achievement_504{background-position:-192px -1600px}#Achievement_505{background-position:-256px -1600px}#Achievement_506{background-position:-320px -1600px}#Achievement_507{background-position:-384px -1600px}#Achievement_508{background-position:-448px -1600px}#Achievement_509{background-position:-512px -1600px}#Achievement_510{background-position:-576px -1600px}#Achievement_511{background-position:-640px -1600px}#Achievement_512{background-position:-704px -1600px}#Achievement_513{background-position:-768px -1600px}#Achievement_514{background-position:-832px -1600px}#Achievement_515{background-position:-896px -1600px}#Achievement_516{background-position:-960px -1600px}#Achievement_517{background-position:-1024px -1600px}#Achievement_518{background-position:-1088px -1600px}#Achievement_519{background-position:-1152px -1600px}#Achievement_520{background-position:-1216px -1600px}#Achievement_521{background-position:-0px -1664px}#Achievement_522{background-position:-64px -1664px}#Achievement_523{background-position:-128px -1664px}#Achievement_524{background-position:-192px -1664px}#Achievement_525{background-position:-256px -1664px}#Achievement_526{background-position:-320px -1664px}#Achievement_527{background-position:-384px -1664px}#Achievement_528{background-position:-448px -1664px}#Achievement_529{background-position:-512px -1664px}#Achievement_530{background-position:-576px -1664px}#Achievement_531{background-position:-640px -1664px}#Achievement_532{background-position:-704px -1664px}#Achievement_533{background-position:-768px -1664px}#Achievement_534{background-position:-832px -1664px}#Achievement_535{background-position:-896px -1664px}#Achievement_536{background-position:-960px -1664px}#Achievement_537{background-position:-1024px -1664px}#Achievement_538{background-position:-1088px -1664px}#Achievement_539{background-position:-1152px -1664px}#Achievement_540{background-position:-1216px -1664px}#Achievement_541{background-position:-0px -1728px}#Achievement_542{background-position:-64px -1728px}#Achievement_543{background-position:-128px -1728px}#Achievement_544{background-position:-192px -1728px}#Achievement_545{background-position:-256px -1728px}#Achievement_546{background-position:-320px -1728px}#Achievement_547{background-position:-384px -1728px}#Achievement_548{background-position:-448px -1728px}#Achievement_549{background-position:-512px -1728px}#Achievement_550{background-position:-576px -1728px}#Achievement_551{background-position:-640px -1728px}#Achievement_552{background-position:-704px -1728px}#Achievement_553{background-position:-768px -1728px}#Achievement_554{background-position:-832px -1728px}#Achievement_555{background-position:-896px -1728px}#Achievement_556{background-position:-960px -1728px}#Achievement_557{background-position:-1024px -1728px}#Achievement_558{background-position:-1088px -1728px}#Achievement_559{background-position:-1152px -1728px}#Achievement_560{background-position:-1216px -1728px}#Achievement_561{background-position:-0px -1792px}#Achievement_562{background-position:-64px -1792px}#Achievement_563{background-position:-128px -1792px}#Achievement_564{background-position:-192px -1792px}#Achievement_565{background-position:-256px -1792px}#Achievement_566{background-position:-320px -1792px}#Achievement_567{background-position:-384px -1792px}#Achievement_568{background-position:-448px -1792px}#Achievement_569{background-position:-512px -1792px}#Achievement_570{background-position:-576px -1792px}#Achievement_571{background-position:-640px -1792px}#Achievement_572{background-position:-704px -1792px}#Achievement_573{background-position:-768px -1792px}#Achievement_574{background-position:-832px -1792px}#Achievement_575{background-position:-896px -1792px}#Achievement_576{background-position:-960px -1792px}#Achievement_577{background-position:-1024px -1792px}#Achievement_578{background-position:-1088px -1792px}#Achievement_579{background-position:-1152px -1792px}#Achievement_580{background-position:-1216px -1792px}#Achievement_581{background-position:-0px -1856px}#Achievement_582{background-position:-64px -1856px}#Achievement_583{background-position:-128px -1856px}#Achievement_584{background-position:-192px -1856px}#Achievement_585{background-position:-256px -1856px}#Achievement_586{background-position:-320px -1856px}#Achievement_587{background-position:-384px -1856px}#Achievement_588{background-position:-448px -1856px}#Achievement_589{background-position:-512px -1856px}#Achievement_590{background-position:-576px -1856px}#Achievement_591{background-position:-640px -1856px}#Achievement_592{background-position:-704px -1856px}#Achievement_593{background-position:-768px -1856px}#Achievement_594{background-position:-832px -1856px}#Achievement_595{background-position:-896px -1856px}#Achievement_596{background-position:-960px -1856px}#Achievement_597{background-position:-1024px -1856px}#Achievement_598{background-position:-1088px -1856px}#Achievement_599{background-position:-1152px -1856px}#Achievement_600{background-position:-1216px -1856px}#Achievement_601{background-position:-0px -1920px}#Achievement_602{background-position:-64px -1920px}#Achievement_603{background-position:-128px -1920px}#Achievement_604{background-position:-192px -1920px}#Achievement_605{background-position:-256px -1920px}#Achievement_606{background-position:-320px -1920px}#Achievement_607{background-position:-384px -1920px}#Achievement_608{background-position:-448px -1920px}#Achievement_609{background-position:-512px -1920px}#Achievement_610{background-position:-576px -1920px}#Achievement_611{background-position:-640px -1920px}#Achievement_612{background-position:-704px -1920px}#Achievement_613{background-position:-768px -1920px}#Achievement_614{background-position:-832px -1920px}#Achievement_615{background-position:-896px -1920px}#Achievement_616{background-position:-960px -1920px}#Achievement_617{background-position:-1024px -1920px}#Achievement_618{background-position:-1088px -1920px}#Achievement_619{background-position:-1152px -1920px}#Achievement_620{background-position:-1216px -1920px}#Achievement_621{background-position:-0px -1984px}#Achievement_622{background-position:-64px -1984px}#Achievement_623{background-position:-128px -1984px}#Achievement_624{background-position:-192px -1984px}#Achievement_625{background-position:-256px -1984px}#Achievement_626{background-position:-320px -1984px}#Achievement_627{background-position:-384px -1984px}#Achievement_628{background-position:-448px -1984px}#Achievement_629{background-position:-512px -1984px}#Achievement_630{background-position:-576px -1984px}#Achievement_631{background-position:-640px -1984px}#Achievement_632{background-position:-704px -1984px}#Achievement_633{background-position:-768px -1984px}#Achievement_634{background-position:-832px -1984px}#Achievement_635{background-position:-896px -1984px}#Achievement_636{background-position:-960px -1984px}#Achievement_637{background-position:-1024px -1984px}", "#trinket_001{background-position:-0px -0px}#trinket_002{background-position:-32px -0px}#trinket_003{background-position:-64px -0px}#trinket_004{background-position:-96px -0px}#trinket_005{background-position:-128px -0px}#trinket_006{background-position:-160px -0px}#trinket_007{background-position:-192px -0px}#trinket_008{background-position:-224px -0px}#trinket_009{background-position:-256px -0px}#trinket_010{background-position:-288px -0px}#trinket_011{background-position:-320px -0px}#trinket_012{background-position:-352px -0px}#trinket_013{background-position:-384px -0px}#trinket_014{background-position:-416px -0px}#trinket_015{background-position:-448px -0px}#trinket_016{background-position:-480px -0px}#trinket_017{background-position:-512px -0px}#trinket_018{background-position:-544px -0px}#trinket_019{background-position:-576px -0px}#trinket_020{background-position:-608px -0px}#trinket_021{background-position:-0px -32px}#trinket_022{background-position:-32px -32px}#trinket_023{background-position:-64px -32px}#trinket_024{background-position:-96px -32px}#trinket_025{background-position:-128px -32px}#trinket_026{background-position:-160px -32px}#trinket_027{background-position:-192px -32px}#trinket_028{background-position:-224px -32px}#trinket_029{background-position:-256px -32px}#trinket_030{background-position:-288px -32px}#trinket_031{background-position:-320px -32px}#trinket_032{background-position:-352px -32px}#trinket_033{background-position:-384px -32px}#trinket_034{background-position:-416px -32px}#trinket_035{background-position:-448px -32px}#trinket_036{background-position:-480px -32px}#trinket_037{background-position:-512px -32px}#trinket_038{background-position:-544px -32px}#trinket_039{background-position:-576px -32px}#trinket_040{background-position:-608px -32px}#trinket_041{background-position:-0px -64px}#trinket_042{background-position:-32px -64px}#trinket_043{background-position:-64px -64px}#trinket_044{background-position:-96px -64px}#trinket_045{background-position:-128px -64px}#trinket_046{background-position:-160px -64px}#trinket_047{background-position:-192px -64px}#trinket_048{background-position:-224px -64px}#trinket_049{background-position:-256px -64px}#trinket_050{background-position:-288px -64px}#trinket_051{background-position:-320px -64px}#trinket_052{background-position:-352px -64px}#trinket_053{background-position:-384px -64px}#trinket_054{background-position:-416px -64px}#trinket_055{background-position:-448px -64px}#trinket_056{background-position:-480px -64px}#trinket_057{background-position:-512px -64px}#trinket_058{background-position:-544px -64px}#trinket_059{background-position:-576px -64px}#trinket_060{background-position:-608px -64px}#trinket_061{background-position:-0px -96px}#trinket_062{background-position:-32px -96px}#trinket_063{background-position:-64px -96px}#trinket_064{background-position:-96px -96px}#trinket_065{background-position:-128px -96px}#trinket_066{background-position:-160px -96px}#trinket_067{background-position:-192px -96px}#trinket_068{background-position:-224px -96px}#trinket_069{background-position:-256px -96px}#trinket_070{background-position:-288px -96px}#trinket_071{background-position:-320px -96px}#trinket_072{background-position:-352px -96px}#trinket_073{background-position:-384px -96px}#trinket_074{background-position:-416px -96px}#trinket_075{background-position:-448px -96px}#trinket_076{background-position:-480px -96px}#trinket_077{background-position:-512px -96px}#trinket_078{background-position:-544px -96px}#trinket_079{background-position:-576px -96px}#trinket_080{background-position:-608px -96px}#trinket_081{background-position:-0px -128px}#trinket_082{background-position:-32px -128px}#trinket_083{background-position:-64px -128px}#trinket_084{background-position:-96px -128px}#trinket_085{background-position:-128px -128px}#trinket_086{background-position:-160px -128px}#trinket_087{background-position:-192px -128px}#trinket_088{background-position:-224px -128px}#trinket_089{background-position:-256px -128px}#trinket_090{background-position:-288px -128px}#trinket_091{background-position:-320px -128px}#trinket_092{background-position:-352px -128px}#trinket_093{background-position:-384px -128px}#trinket_094{background-position:-416px -128px}#trinket_095{background-position:-448px -128px}#trinket_096{background-position:-480px -128px}#trinket_097{background-position:-512px -128px}#trinket_098{background-position:-544px -128px}#trinket_099{background-position:-576px -128px}#trinket_100{background-position:-608px -128px}#trinket_101{background-position:-0px -160px}#trinket_102{background-position:-32px -160px}#trinket_103{background-position:-64px -160px}#trinket_104{background-position:-96px -160px}#trinket_105{background-position:-128px -160px}#trinket_106{background-position:-160px -160px}#trinket_107{background-position:-192px -160px}#trinket_108{background-position:-224px -160px}#trinket_109{background-position:-256px -160px}#trinket_110{background-position:-288px -160px}#trinket_111{background-position:-320px -160px}#trinket_112{background-position:-352px -160px}#trinket_113{background-position:-384px -160px}#trinket_114{background-position:-416px -160px}#trinket_115{background-position:-448px -160px}#trinket_116{background-position:-480px -160px}#trinket_117{background-position:-512px -160px}#trinket_118{background-position:-544px -160px}#trinket_119{background-position:-576px -160px}#trinket_120{background-position:-608px -160px}#trinket_121{background-position:-0px -192px}#trinket_122{background-position:-32px -192px}#trinket_123{background-position:-64px -192px}#trinket_124{background-position:-96px -192px}#trinket_125{background-position:-128px -192px}#trinket_126{background-position:-160px -192px}#trinket_127{background-position:-192px -192px}#trinket_128{background-position:-224px -192px}#trinket_129{background-position:-256px -192px}#trinket_130{background-position:-288px -192px}#trinket_131{background-position:-320px -192px}#trinket_132{background-position:-352px -192px}#trinket_133{background-position:-384px -192px}#trinket_134{background-position:-416px -192px}#trinket_135{background-position:-448px -192px}#trinket_136{background-position:-480px -192px}#trinket_137{background-position:-512px -192px}#trinket_138{background-position:-544px -192px}#trinket_139{background-position:-576px -192px}#trinket_140{background-position:-608px -192px}#trinket_141{background-position:-0px -224px}#trinket_142{background-position:-32px -224px}#trinket_143{background-position:-64px -224px}#trinket_144{background-position:-96px -224px}#trinket_145{background-position:-128px -224px}#trinket_146{background-position:-160px -224px}#trinket_147{background-position:-192px -224px}#trinket_148{background-position:-224px -224px}#trinket_149{background-position:-256px -224px}#trinket_150{background-position:-288px -224px}#trinket_151{background-position:-320px -224px}#trinket_152{background-position:-352px -224px}#trinket_153{background-position:-384px -224px}#trinket_154{background-position:-416px -224px}#trinket_155{background-position:-448px -224px}#trinket_156{background-position:-480px -224px}#trinket_157{background-position:-512px -224px}#trinket_158{background-position:-544px -224px}#trinket_159{background-position:-576px -224px}#trinket_160{background-position:-608px -224px}#trinket_161{background-position:-0px -256px}#trinket_162{background-position:-32px -256px}#trinket_163{background-position:-64px -256px}#trinket_164{background-position:-96px -256px}#trinket_165{background-position:-128px -256px}#trinket_166{background-position:-160px -256px}#trinket_167{background-position:-192px -256px}#trinket_168{background-position:-224px -256px}#trinket_169{background-position:-256px -256px}#trinket_170{background-position:-288px -256px}#trinket_171{background-position:-320px -256px}#trinket_172{background-position:-352px -256px}#trinket_173{background-position:-384px -256px}#trinket_174{background-position:-416px -256px}#trinket_175{background-position:-448px -256px}#trinket_176{background-position:-480px -256px}#trinket_177{background-position:-512px -256px}#trinket_178{background-position:-544px -256px}#trinket_179{background-position:-576px -256px}#trinket_180{background-position:-608px -256px}#trinket_181{background-position:-0px -288px}#trinket_182{background-position:-32px -288px}#trinket_183{background-position:-64px -288px}#trinket_184{background-position:-96px -288px}#trinket_185{background-position:-128px -288px}#trinket_186{background-position:-160px -288px}#trinket_187{background-position:-192px -288px}#trinket_188{background-position:-224px -288px}#trinket_189{background-position:-256px -288px}", "#collectibles_001{background-position:-32px -0px}#collectibles_002{background-position:-64px -0px}#collectibles_003{background-position:-96px -0px}#collectibles_004{background-position:-128px -0px}#collectibles_005{background-position:-160px -0px}#collectibles_006{background-position:-192px -0px}#collectibles_007{background-position:-224px -0px}#collectibles_008{background-position:-256px -0px}#collectibles_009{background-position:-288px -0px}#collectibles_010{background-position:-320px -0px}#collectibles_011{background-position:-352px -0px}#collectibles_012{background-position:-384px -0px}#collectibles_013{background-position:-416px -0px}#collectibles_014{background-position:-448px -0px}#collectibles_015{background-position:-480px -0px}#collectibles_016{background-position:-512px -0px}#collectibles_017{background-position:-544px -0px}#collectibles_018{background-position:-576px -0px}#collectibles_019{background-position:-608px -0px}#collectibles_020{background-position:-0px -32px}#collectibles_021{background-position:-32px -32px}#collectibles_022{background-position:-64px -32px}#collectibles_023{background-position:-96px -32px}#collectibles_024{background-position:-128px -32px}#collectibles_025{background-position:-160px -32px}#collectibles_026{background-position:-192px -32px}#collectibles_027{background-position:-224px -32px}#collectibles_028{background-position:-256px -32px}#collectibles_029{background-position:-288px -32px}#collectibles_030{background-position:-320px -32px}#collectibles_031{background-position:-352px -32px}#collectibles_032{background-position:-384px -32px}#collectibles_033{background-position:-416px -32px}#collectibles_034{background-position:-448px -32px}#collectibles_035{background-position:-480px -32px}#collectibles_036{background-position:-512px -32px}#collectibles_037{background-position:-544px -32px}#collectibles_038{background-position:-576px -32px}#collectibles_039{background-position:-608px -32px}#collectibles_040{background-position:-0px -64px}#collectibles_041{background-position:-32px -64px}#collectibles_042{background-position:-64px -64px}#collectibles_044{background-position:-96px -64px}#collectibles_045{background-position:-128px -64px}#collectibles_046{background-position:-160px -64px}#collectibles_047{background-position:-192px -64px}#collectibles_048{background-position:-224px -64px}#collectibles_049{background-position:-256px -64px}#collectibles_050{background-position:-288px -64px}#collectibles_051{background-position:-320px -64px}#collectibles_052{background-position:-352px -64px}#collectibles_053{background-position:-384px -64px}#collectibles_054{background-position:-416px -64px}#collectibles_055{background-position:-448px -64px}#collectibles_056{background-position:-480px -64px}#collectibles_057{background-position:-512px -64px}#collectibles_058{background-position:-544px -64px}#collectibles_059{background-position:-576px -64px}#collectibles_060{background-position:-608px -64px}#collectibles_062{background-position:-0px -96px}#collectibles_063{background-position:-32px -96px}#collectibles_064{background-position:-64px -96px}#collectibles_065{background-position:-96px -96px}#collectibles_066{background-position:-128px -96px}#collectibles_067{background-position:-160px -96px}#collectibles_068{background-position:-192px -96px}#collectibles_069{background-position:-224px -96px}#collectibles_070{background-position:-256px -96px}#collectibles_071{background-position:-288px -96px}#collectibles_072{background-position:-320px -96px}#collectibles_073{background-position:-352px -96px}#collectibles_074{background-position:-384px -96px}#collectibles_075{background-position:-416px -96px}#collectibles_076{background-position:-448px -96px}#collectibles_077{background-position:-480px -96px}#collectibles_078{background-position:-512px -96px}#collectibles_079{background-position:-544px -96px}#collectibles_080{background-position:-576px -96px}#collectibles_081{background-position:-608px -96px}#collectibles_082{background-position:-0px -128px}#collectibles_083{background-position:-32px -128px}#collectibles_084{background-position:-64px -128px}#collectibles_085{background-position:-96px -128px}#collectibles_086{background-position:-128px -128px}#collectibles_087{background-position:-160px -128px}#collectibles_088{background-position:-192px -128px}#collectibles_089{background-position:-224px -128px}#collectibles_090{background-position:-256px -128px}#collectibles_091{background-position:-288px -128px}#collectibles_092{background-position:-320px -128px}#collectibles_093{background-position:-352px -128px}#collectibles_094{background-position:-384px -128px}#collectibles_095{background-position:-416px -128px}#collectibles_096{background-position:-448px -128px}#collectibles_097{background-position:-480px -128px}#collectibles_098{background-position:-512px -128px}#collectibles_099{background-position:-544px -128px}#collectibles_100{background-position:-576px -128px}#collectibles_101{background-position:-608px -128px}#collectibles_102{background-position:-0px -160px}#collectibles_103{background-position:-32px -160px}#collectibles_104{background-position:-64px -160px}#collectibles_105{background-position:-96px -160px}#collectibles_106{background-position:-128px -160px}#collectibles_107{background-position:-160px -160px}#collectibles_108{background-position:-192px -160px}#collectibles_109{background-position:-224px -160px}#collectibles_110{background-position:-256px -160px}#collectibles_111{background-position:-288px -160px}#collectibles_112{background-position:-320px -160px}#collectibles_113{background-position:-352px -160px}#collectibles_114{background-position:-384px -160px}#collectibles_115{background-position:-416px -160px}#collectibles_116{background-position:-448px -160px}#collectibles_117{background-position:-480px -160px}#collectibles_118{background-position:-512px -160px}#collectibles_119{background-position:-544px -160px}#collectibles_120{background-position:-576px -160px}#collectibles_121{background-position:-608px -160px}#collectibles_122{background-position:-0px -192px}#collectibles_123{background-position:-32px -192px}#collectibles_124{background-position:-64px -192px}#collectibles_125{background-position:-96px -192px}#collectibles_126{background-position:-128px -192px}#collectibles_127{background-position:-160px -192px}#collectibles_128{background-position:-192px -192px}#collectibles_129{background-position:-224px -192px}#collectibles_130{background-position:-256px -192px}#collectibles_131{background-position:-288px -192px}#collectibles_132{background-position:-320px -192px}#collectibles_133{background-position:-352px -192px}#collectibles_134{background-position:-384px -192px}#collectibles_135{background-position:-416px -192px}#collectibles_136{background-position:-448px -192px}#collectibles_137{background-position:-480px -192px}#collectibles_138{background-position:-512px -192px}#collectibles_139{background-position:-544px -192px}#collectibles_140{background-position:-576px -192px}#collectibles_141{background-position:-608px -192px}#collectibles_142{background-position:-0px -224px}#collectibles_143{background-position:-32px -224px}#collectibles_144{background-position:-64px -224px}#collectibles_145{background-position:-96px -224px}#collectibles_146{background-position:-128px -224px}#collectibles_147{background-position:-160px -224px}#collectibles_148{background-position:-192px -224px}#collectibles_149{background-position:-224px -224px}#collectibles_150{background-position:-256px -224px}#collectibles_151{background-position:-288px -224px}#collectibles_152{background-position:-320px -224px}#collectibles_153{background-position:-352px -224px}#collectibles_154{background-position:-384px -224px}#collectibles_155{background-position:-416px -224px}#collectibles_156{background-position:-448px -224px}#collectibles_157{background-position:-480px -224px}#collectibles_158{background-position:-512px -224px}#collectibles_159{background-position:-544px -224px}#collectibles_160{background-position:-576px -224px}#collectibles_161{background-position:-608px -224px}#collectibles_162{background-position:-0px -256px}#collectibles_163{background-position:-32px -256px}#collectibles_164{background-position:-64px -256px}#collectibles_165{background-position:-96px -256px}#collectibles_166{background-position:-128px -256px}#collectibles_167{background-position:-160px -256px}#collectibles_168{background-position:-192px -256px}#collectibles_169{background-position:-224px -256px}#collectibles_170{background-position:-256px -256px}#collectibles_171{background-position:-288px -256px}#collectibles_172{background-position:-320px -256px}#collectibles_173{background-position:-352px -256px}#collectibles_174{background-position:-384px -256px}#collectibles_175{background-position:-416px -256px}#collectibles_176{background-position:-448px -256px}#collectibles_177{background-position:-480px -256px}#collectibles_178{background-position:-512px -256px}#collectibles_179{background-position:-544px -256px}#collectibles_180{background-position:-576px -256px}#collectibles_181{background-position:-608px -256px}#collectibles_182{background-position:-0px -288px}#collectibles_183{background-position:-32px -288px}#collectibles_184{background-position:-64px -288px}#collectibles_185{background-position:-96px -288px}#collectibles_186{background-position:-128px -288px}#collectibles_187{background-position:-160px -288px}#collectibles_188{background-position:-192px -288px}#collectibles_189{background-position:-224px -288px}#collectibles_190{background-position:-256px -288px}#collectibles_191{background-position:-288px -288px}#collectibles_192{background-position:-320px -288px}#collectibles_193{background-position:-352px -288px}#collectibles_194{background-position:-384px -288px}#collectibles_195{background-position:-416px -288px}#collectibles_196{background-position:-448px -288px}#collectibles_197{background-position:-480px -288px}#collectibles_198{background-position:-512px -288px}#collectibles_199{background-position:-544px -288px}#collectibles_200{background-position:-576px -288px}#collectibles_201{background-position:-608px -288px}#collectibles_202{background-position:-0px -320px}#collectibles_203{background-position:-32px -320px}#collectibles_204{background-position:-64px -320px}#collectibles_205{background-position:-96px -320px}#collectibles_206{background-position:-128px -320px}#collectibles_207{background-position:-160px -320px}#collectibles_208{background-position:-192px -320px}#collectibles_209{background-position:-224px -320px}#collectibles_210{background-position:-256px -320px}#collectibles_211{background-position:-288px -320px}#collectibles_212{background-position:-320px -320px}#collectibles_213{background-position:-352px -320px}#collectibles_214{background-position:-384px -320px}#collectibles_215{background-position:-416px -320px}#collectibles_216{background-position:-448px -320px}#collectibles_217{background-position:-480px -320px}#collectibles_218{background-position:-512px -320px}#collectibles_219{background-position:-544px -320px}#collectibles_220{background-position:-576px -320px}#collectibles_221{background-position:-608px -320px}#collectibles_222{background-position:-0px -352px}#collectibles_223{background-position:-32px -352px}#collectibles_224{background-position:-64px -352px}#collectibles_225{background-position:-96px -352px}#collectibles_226{background-position:-128px -352px}#collectibles_227{background-position:-160px -352px}#collectibles_228{background-position:-192px -352px}#collectibles_229{background-position:-224px -352px}#collectibles_230{background-position:-256px -352px}#collectibles_231{background-position:-288px -352px}#collectibles_232{background-position:-320px -352px}#collectibles_233{background-position:-352px -352px}#collectibles_234{background-position:-384px -352px}#collectibles_236{background-position:-416px -352px}#collectibles_237{background-position:-448px -352px}#collectibles_238{background-position:-480px -352px}#collectibles_239{background-position:-512px -352px}#collectibles_240{background-position:-544px -352px}#collectibles_241{background-position:-576px -352px}#collectibles_242{background-position:-608px -352px}#collectibles_243{background-position:-0px -384px}#collectibles_244{background-position:-32px -384px}#collectibles_245{background-position:-64px -384px}#collectibles_246{background-position:-96px -384px}#collectibles_247{background-position:-128px -384px}#collectibles_248{background-position:-160px -384px}#collectibles_249{background-position:-192px -384px}#collectibles_250{background-position:-224px -384px}#collectibles_251{background-position:-256px -384px}#collectibles_252{background-position:-288px -384px}#collectibles_253{background-position:-320px -384px}#collectibles_254{background-position:-352px -384px}#collectibles_255{background-position:-384px -384px}#collectibles_256{background-position:-416px -384px}#collectibles_257{background-position:-448px -384px}#collectibles_258{background-position:-480px -384px}#collectibles_259{background-position:-512px -384px}#collectibles_260{background-position:-544px -384px}#collectibles_261{background-position:-576px -384px}#collectibles_262{background-position:-608px -384px}#collectibles_263{background-position:-0px -416px}#collectibles_264{background-position:-32px -416px}#collectibles_265{background-position:-64px -416px}#collectibles_266{background-position:-96px -416px}#collectibles_267{background-position:-128px -416px}#collectibles_268{background-position:-160px -416px}#collectibles_269{background-position:-192px -416px}#collectibles_270{background-position:-224px -416px}#collectibles_271{background-position:-256px -416px}#collectibles_272{background-position:-288px -416px}#collectibles_273{background-position:-320px -416px}#collectibles_274{background-position:-352px -416px}#collectibles_275{background-position:-384px -416px}#collectibles_276{background-position:-416px -416px}#collectibles_277{background-position:-448px -416px}#collectibles_278{background-position:-480px -416px}#collectibles_279{background-position:-512px -416px}#collectibles_280{background-position:-544px -416px}#collectibles_281{background-position:-576px -416px}#collectibles_282{background-position:-608px -416px}#collectibles_283{background-position:-0px -448px}#collectibles_284{background-position:-32px -448px}#collectibles_285{background-position:-64px -448px}#collectibles_286{background-position:-96px -448px}#collectibles_287{background-position:-128px -448px}#collectibles_288{background-position:-160px -448px}#collectibles_289{background-position:-192px -448px}#collectibles_290{background-position:-224px -448px}#collectibles_291{background-position:-256px -448px}#collectibles_292{background-position:-288px -448px}#collectibles_293{background-position:-320px -448px}#collectibles_294{background-position:-352px -448px}#collectibles_295{background-position:-384px -448px}#collectibles_296{background-position:-416px -448px}#collectibles_297{background-position:-448px -448px}#collectibles_298{background-position:-480px -448px}#collectibles_299{background-position:-512px -448px}#collectibles_300{background-position:-544px -448px}#collectibles_301{background-position:-576px -448px}#collectibles_302{background-position:-608px -448px}#collectibles_303{background-position:-0px -480px}#collectibles_304{background-position:-32px -480px}#collectibles_305{background-position:-64px -480px}#collectibles_306{background-position:-96px -480px}#collectibles_307{background-position:-128px -480px}#collectibles_308{background-position:-160px -480px}#collectibles_309{background-position:-192px -480px}#collectibles_310{background-position:-224px -480px}#collectibles_311{background-position:-256px -480px}#collectibles_312{background-position:-288px -480px}#collectibles_313{background-position:-320px -480px}#collectibles_314{background-position:-352px -480px}#collectibles_315{background-position:-384px -480px}#collectibles_316{background-position:-416px -480px}#collectibles_317{background-position:-448px -480px}#collectibles_318{background-position:-480px -480px}#collectibles_319{background-position:-512px -480px}#collectibles_320{background-position:-544px -480px}#collectibles_321{background-position:-576px -480px}#collectibles_322{background-position:-608px -480px}#collectibles_323{background-position:-0px -512px}#collectibles_324{background-position:-32px -512px}#collectibles_325{background-position:-64px -512px}#collectibles_326{background-position:-96px -512px}#collectibles_327{background-position:-128px -512px}#collectibles_328{background-position:-160px -512px}#collectibles_329{background-position:-192px -512px}#collectibles_330{background-position:-224px -512px}#collectibles_331{background-position:-256px -512px}#collectibles_332{background-position:-288px -512px}#collectibles_333{background-position:-320px -512px}#collectibles_334{background-position:-352px -512px}#collectibles_335{background-position:-384px -512px}#collectibles_336{background-position:-416px -512px}#collectibles_337{background-position:-448px -512px}#collectibles_338{background-position:-480px -512px}#collectibles_339{background-position:-512px -512px}#collectibles_340{background-position:-544px -512px}#collectibles_341{background-position:-576px -512px}#collectibles_342{background-position:-608px -512px}#collectibles_343{background-position:-0px -544px}#collectibles_344{background-position:-32px -544px}#collectibles_345{background-position:-64px -544px}#collectibles_346{background-position:-96px -544px}#collectibles_347{background-position:-128px -544px}#collectibles_348{background-position:-160px -544px}#collectibles_349{background-position:-192px -544px}#collectibles_350{background-position:-224px -544px}#collectibles_351{background-position:-256px -544px}#collectibles_352{background-position:-288px -544px}#collectibles_353{background-position:-320px -544px}#collectibles_354{background-position:-352px -544px}#collectibles_355{background-position:-384px -544px}#collectibles_356{background-position:-416px -544px}#collectibles_357{background-position:-448px -544px}#collectibles_358{background-position:-480px -544px}#collectibles_359{background-position:-512px -544px}#collectibles_360{background-position:-544px -544px}#collectibles_361{background-position:-576px -544px}#collectibles_362{background-position:-608px -544px}#collectibles_363{background-position:-0px -576px}#collectibles_364{background-position:-32px -576px}#collectibles_365{background-position:-64px -576px}#collectibles_366{background-position:-96px -576px}#collectibles_367{background-position:-128px -576px}#collectibles_368{background-position:-160px -576px}#collectibles_369{background-position:-192px -576px}#collectibles_370{background-position:-224px -576px}#collectibles_371{background-position:-256px -576px}#collectibles_372{background-position:-288px -576px}#collectibles_373{background-position:-320px -576px}#collectibles_374{background-position:-352px -576px}#collectibles_375{background-position:-384px -576px}#collectibles_376{background-position:-416px -576px}#collectibles_377{background-position:-448px -576px}#collectibles_378{background-position:-480px -576px}#collectibles_379{background-position:-512px -576px}#collectibles_380{background-position:-544px -576px}#collectibles_381{background-position:-576px -576px}#collectibles_382{background-position:-608px -576px}#collectibles_383{background-position:-0px -608px}#collectibles_384{background-position:-32px -608px}#collectibles_385{background-position:-64px -608px}#collectibles_386{background-position:-96px -608px}#collectibles_387{background-position:-128px -608px}#collectibles_388{background-position:-160px -608px}#collectibles_389{background-position:-192px -608px}#collectibles_390{background-position:-224px -608px}#collectibles_391{background-position:-256px -608px}#collectibles_392{background-position:-288px -608px}#collectibles_393{background-position:-320px -608px}#collectibles_394{background-position:-352px -608px}#collectibles_395{background-position:-384px -608px}#collectibles_396{background-position:-416px -608px}#collectibles_397{background-position:-448px -608px}#collectibles_398{background-position:-480px -608px}#collectibles_399{background-position:-512px -608px}#collectibles_400{background-position:-544px -608px}#collectibles_401{background-position:-576px -608px}#collectibles_402{background-position:-608px -608px}#collectibles_403{background-position:-0px -640px}#collectibles_404{background-position:-32px -640px}#collectibles_405{background-position:-64px -640px}#collectibles_406{background-position:-96px -640px}#collectibles_407{background-position:-128px -640px}#collectibles_408{background-position:-160px -640px}#collectibles_409{background-position:-192px -640px}#collectibles_410{background-position:-224px -640px}#collectibles_411{background-position:-256px -640px}#collectibles_412{background-position:-288px -640px}#collectibles_413{background-position:-320px -640px}#collectibles_414{background-position:-352px -640px}#collectibles_415{background-position:-384px -640px}#collectibles_416{background-position:-416px -640px}#collectibles_417{background-position:-448px -640px}#collectibles_418{background-position:-480px -640px}#collectibles_419{background-position:-512px -640px}#collectibles_420{background-position:-544px -640px}#collectibles_421{background-position:-576px -640px}#collectibles_422{background-position:-608px -640px}#collectibles_423{background-position:-0px -672px}#collectibles_424{background-position:-32px -672px}#collectibles_425{background-position:-64px -672px}#collectibles_426{background-position:-96px -672px}#collectibles_427{background-position:-128px -672px}#collectibles_428{background-position:-160px -672px}#collectibles_429{background-position:-192px -672px}#collectibles_430{background-position:-224px -672px}#collectibles_431{background-position:-256px -672px}#collectibles_432{background-position:-288px -672px}#collectibles_433{background-position:-320px -672px}#collectibles_434{background-position:-352px -672px}#collectibles_435{background-position:-384px -672px}#collectibles_436{background-position:-416px -672px}#collectibles_437{background-position:-448px -672px}#collectibles_438{background-position:-480px -672px}#collectibles_439{background-position:-512px -672px}#collectibles_440{background-position:-544px -672px}#collectibles_441{background-position:-576px -672px}#collectibles_442{background-position:-608px -672px}#collectibles_443{background-position:-0px -704px}#collectibles_444{background-position:-32px -704px}#collectibles_445{background-position:-64px -704px}#collectibles_446{background-position:-96px -704px}#collectibles_447{background-position:-128px -704px}#collectibles_448{background-position:-160px -704px}#collectibles_449{background-position:-192px -704px}#collectibles_450{background-position:-224px -704px}#collectibles_451{background-position:-256px -704px}#collectibles_452{background-position:-288px -704px}#collectibles_453{background-position:-320px -704px}#collectibles_454{background-position:-352px -704px}#collectibles_455{background-position:-384px -704px}#collectibles_456{background-position:-416px -704px}#collectibles_457{background-position:-448px -704px}#collectibles_458{background-position:-480px -704px}#collectibles_459{background-position:-512px -704px}#collectibles_460{background-position:-544px -704px}#collectibles_461{background-position:-576px -704px}#collectibles_462{background-position:-608px -704px}#collectibles_463{background-position:-0px -736px}#collectibles_464{background-position:-32px -736px}#collectibles_465{background-position:-64px -736px}#collectibles_466{background-position:-96px -736px}#collectibles_467{background-position:-128px -736px}#collectibles_468{background-position:-160px -736px}#collectibles_469{background-position:-192px -736px}#collectibles_470{background-position:-224px -736px}#collectibles_471{background-position:-256px -736px}#collectibles_472{background-position:-288px -736px}#collectibles_473{background-position:-320px -736px}#collectibles_474{background-position:-352px -736px}#collectibles_475{background-position:-384px -736px}#collectibles_476{background-position:-416px -736px}#collectibles_477{background-position:-448px -736px}#collectibles_478{background-position:-480px -736px}#collectibles_479{background-position:-512px -736px}#collectibles_480{background-position:-544px -736px}#collectibles_481{background-position:-576px -736px}#collectibles_482{background-position:-608px -736px}#collectibles_483{background-position:-0px -768px}#collectibles_484{background-position:-32px -768px}#collectibles_485{background-position:-64px -768px}#collectibles_486{background-position:-96px -768px}#collectibles_487{background-position:-128px -768px}#collectibles_488{background-position:-160px -768px}#collectibles_489{background-position:-192px -768px}#collectibles_490{background-position:-224px -768px}#collectibles_491{background-position:-256px -768px}#collectibles_492{background-position:-288px -768px}#collectibles_493{background-position:-320px -768px}#collectibles_494{background-position:-352px -768px}#collectibles_495{background-position:-384px -768px}#collectibles_496{background-position:-416px -768px}#collectibles_497{background-position:-448px -768px}#collectibles_498{background-position:-480px -768px}#collectibles_499{background-position:-512px -768px}#collectibles_500{background-position:-544px -768px}#collectibles_501{background-position:-576px -768px}#collectibles_502{background-position:-608px -768px}#collectibles_503{background-position:-0px -800px}#collectibles_504{background-position:-32px -800px}#collectibles_505{background-position:-64px -800px}#collectibles_506{background-position:-96px -800px}#collectibles_507{background-position:-128px -800px}#collectibles_508{background-position:-160px -800px}#collectibles_509{background-position:-192px -800px}#collectibles_510{background-position:-224px -800px}#collectibles_511{background-position:-256px -800px}#collectibles_512{background-position:-288px -800px}#collectibles_513{background-position:-320px -800px}#collectibles_514{background-position:-352px -800px}#collectibles_515{background-position:-384px -800px}#collectibles_516{background-position:-416px -800px}#collectibles_517{background-position:-448px -800px}#collectibles_518{background-position:-480px -800px}#collectibles_519{background-position:-512px -800px}#collectibles_520{background-position:-544px -800px}#collectibles_521{background-position:-576px -800px}#collectibles_522{background-position:-608px -800px}#collectibles_523{background-position:-0px -832px}#collectibles_524{background-position:-32px -832px}#collectibles_525{background-position:-64px -832px}#collectibles_526{background-position:-96px -832px}#collectibles_527{background-position:-128px -832px}#collectibles_528{background-position:-160px -832px}#collectibles_529{background-position:-192px -832px}#collectibles_530{background-position:-224px -832px}#collectibles_531{background-position:-256px -832px}#collectibles_532{background-position:-288px -832px}#collectibles_533{background-position:-320px -832px}#collectibles_534{background-position:-352px -832px}#collectibles_535{background-position:-384px -832px}#collectibles_536{background-position:-416px -832px}#collectibles_537{background-position:-448px -832px}#collectibles_538{background-position:-480px -832px}#collectibles_539{background-position:-512px -832px}#collectibles_540{background-position:-544px -832px}#collectibles_541{background-position:-576px -832px}#collectibles_542{background-position:-608px -832px}#collectibles_543{background-position:-0px -864px}#collectibles_544{background-position:-32px -864px}#collectibles_545{background-position:-64px -864px}#collectibles_546{background-position:-96px -864px}#collectibles_547{background-position:-128px -864px}#collectibles_548{background-position:-160px -864px}#collectibles_549{background-position:-192px -864px}#collectibles_550{background-position:-224px -864px}#collectibles_551{background-position:-256px -864px}#collectibles_552{background-position:-288px -864px}#collectibles_553{background-position:-320px -864px}#collectibles_554{background-position:-352px -864px}#collectibles_555{background-position:-384px -864px}#collectibles_556{background-position:-416px -864px}#collectibles_557{background-position:-448px -864px}#collectibles_558{background-position:-480px -864px}#collectibles_559{background-position:-512px -864px}#collectibles_560{background-position:-544px -864px}#collectibles_561{background-position:-576px -864px}#collectibles_562{background-position:-608px -864px}#collectibles_563{background-position:-0px -896px}#collectibles_564{background-position:-32px -896px}#collectibles_565{background-position:-64px -896px}#collectibles_566{background-position:-96px -896px}#collectibles_567{background-position:-128px -896px}#collectibles_568{background-position:-160px -896px}#collectibles_569{background-position:-192px -896px}#collectibles_570{background-position:-224px -896px}#collectibles_571{background-position:-256px -896px}#collectibles_572{background-position:-288px -896px}#collectibles_573{background-position:-320px -896px}#collectibles_574{background-position:-352px -896px}#collectibles_575{background-position:-384px -896px}#collectibles_576{background-position:-416px -896px}#collectibles_577{background-position:-448px -896px}#collectibles_578{background-position:-480px -896px}#collectibles_579{background-position:-512px -896px}#collectibles_580{background-position:-544px -896px}#collectibles_581{background-position:-576px -896px}#collectibles_582{background-position:-608px -896px}#collectibles_583{background-position:-0px -928px}#collectibles_584{background-position:-32px -928px}#collectibles_585{background-position:-64px -928px}#collectibles_586{background-position:-96px -928px}#collectibles_588{background-position:-128px -928px}#collectibles_589{background-position:-160px -928px}#collectibles_590{background-position:-192px -928px}#collectibles_591{background-position:-224px -928px}#collectibles_592{background-position:-256px -928px}#collectibles_593{background-position:-288px -928px}#collectibles_594{background-position:-320px -928px}#collectibles_595{background-position:-352px -928px}#collectibles_596{background-position:-384px -928px}#collectibles_597{background-position:-416px -928px}#collectibles_598{background-position:-448px -928px}#collectibles_599{background-position:-480px -928px}#collectibles_600{background-position:-512px -928px}#collectibles_601{background-position:-544px -928px}#collectibles_602{background-position:-576px -928px}#collectibles_603{background-position:-608px -928px}#collectibles_604{background-position:-0px -960px}#collectibles_605{background-position:-32px -960px}#collectibles_606{background-position:-64px -960px}#collectibles_607{background-position:-96px -960px}#collectibles_608{background-position:-128px -960px}#collectibles_609{background-position:-160px -960px}#collectibles_610{background-position:-192px -960px}#collectibles_611{background-position:-224px -960px}#collectibles_612{background-position:-256px -960px}#collectibles_614{background-position:-288px -960px}#collectibles_615{background-position:-320px -960px}#collectibles_616{background-position:-352px -960px}#collectibles_617{background-position:-384px -960px}#collectibles_618{background-position:-416px -960px}#collectibles_619{background-position:-448px -960px}#collectibles_621{background-position:-480px -960px}#collectibles_622{background-position:-512px -960px}#collectibles_623{background-position:-544px -960px}#collectibles_624{background-position:-576px -960px}#collectibles_625{background-position:-608px -960px}#collectibles_626{background-position:-0px -992px}#collectibles_627{background-position:-32px -992px}#collectibles_628{background-position:-64px -992px}#collectibles_629{background-position:-96px -992px}#collectibles_631{background-position:-128px -992px}#collectibles_632{background-position:-160px -992px}#collectibles_633{background-position:-192px -992px}#collectibles_634{background-position:-224px -992px}#collectibles_635{background-position:-256px -992px}#collectibles_636{background-position:-288px -992px}#collectibles_637{background-position:-320px -992px}#collectibles_638{background-position:-352px -992px}#collectibles_639{background-position:-384px -992px}#collectibles_640{background-position:-416px -992px}#collectibles_641{background-position:-448px -992px}#collectibles_642{background-position:-480px -992px}#collectibles_643{background-position:-512px -992px}#collectibles_644{background-position:-544px -992px}#collectibles_645{background-position:-576px -992px}#collectibles_646{background-position:-608px -992px}#collectibles_647{background-position:-0px -1024px}#collectibles_649{background-position:-32px -1024px}#collectibles_650{background-position:-64px -1024px}#collectibles_651{background-position:-96px -1024px}#collectibles_652{background-position:-128px -1024px}#collectibles_653{background-position:-160px -1024px}#collectibles_654{background-position:-192px -1024px}#collectibles_655{background-position:-224px -1024px}#collectibles_656{background-position:-256px -1024px}#collectibles_657{background-position:-288px -1024px}#collectibles_658{background-position:-320px -1024px}#collectibles_659{background-position:-352px -1024px}#collectibles_660{background-position:-384px -1024px}#collectibles_661{background-position:-416px -1024px}#collectibles_663{background-position:-448px -1024px}#collectibles_664{background-position:-480px -1024px}#collectibles_665{background-position:-512px -1024px}#collectibles_667{background-position:-544px -1024px}#collectibles_668{background-position:-576px -1024px}#collectibles_669{background-position:-608px -1024px}#collectibles_670{background-position:-0px -1056px}#collectibles_671{background-position:-32px -1056px}#collectibles_672{background-position:-64px -1056px}#collectibles_673{background-position:-96px -1056px}#collectibles_674{background-position:-128px -1056px}#collectibles_675{background-position:-160px -1056px}#collectibles_676{background-position:-192px -1056px}#collectibles_677{background-position:-224px -1056px}#collectibles_678{background-position:-256px -1056px}#collectibles_679{background-position:-288px -1056px}#collectibles_680{background-position:-320px -1056px}#collectibles_681{background-position:-352px -1056px}#collectibles_682{background-position:-384px -1056px}#collectibles_683{background-position:-416px -1056px}#collectibles_684{background-position:-448px -1056px}#collectibles_685{background-position:-480px -1056px}#collectibles_686{background-position:-512px -1056px}#collectibles_687{background-position:-544px -1056px}#collectibles_688{background-position:-576px -1056px}#collectibles_689{background-position:-608px -1056px}#collectibles_690{background-position:-0px -1088px}#collectibles_691{background-position:-32px -1088px}#collectibles_692{background-position:-64px -1088px}#collectibles_693{background-position:-96px -1088px}#collectibles_694{background-position:-128px -1088px}#collectibles_695{background-position:-160px -1088px}#collectibles_696{background-position:-192px -1088px}#collectibles_697{background-position:-224px -1088px}#collectibles_698{background-position:-256px -1088px}#collectibles_699{background-position:-288px -1088px}#collectibles_700{background-position:-320px -1088px}#collectibles_701{background-position:-352px -1088px}#collectibles_702{background-position:-384px -1088px}#collectibles_703{background-position:-416px -1088px}#collectibles_704{background-position:-448px -1088px}#collectibles_705{background-position:-480px -1088px}#collectibles_706{background-position:-512px -1088px}#collectibles_707{background-position:-544px -1088px}#collectibles_708{background-position:-576px -1088px}#collectibles_709{background-position:-608px -1088px}#collectibles_710{background-position:-0px -1120px}#collectibles_711{background-position:-32px -1120px}#collectibles_712{background-position:-64px -1120px}#collectibles_713{background-position:-96px -1120px}#collectibles_714{background-position:-128px -1120px}#collectibles_715{background-position:-160px -1120px}#collectibles_716{background-position:-192px -1120px}#collectibles_717{background-position:-224px -1120px}#collectibles_719{background-position:-256px -1120px}#collectibles_720{background-position:-288px -1120px}#collectibles_721{background-position:-320px -1120px}#collectibles_722{background-position:-352px -1120px}#collectibles_723{background-position:-384px -1120px}#collectibles_724{background-position:-416px -1120px}#collectibles_725{background-position:-448px -1120px}#collectibles_726{background-position:-480px -1120px}#collectibles_727{background-position:-512px -1120px}#collectibles_728{background-position:-544px -1120px}#collectibles_729{background-position:-576px -1120px}#collectibles_730{background-position:-608px -1120px}#collectibles_731{background-position:-0px -1152px}#collectibles_732{background-position:-32px -1152px}#collectibles_633{animation-name:collectible-dogma-anim;animation-duration:500ms;animation-iteration-count:infinite;animation-timing-function:step-start}@keyframes collectible-dogma-anim{0%{background-position:-64px -1152px}3%{background-position:-96px -1152px}6%{background-position:-128px -1152px}10%{background-position:-160px -1152px}13%{background-position:-192px -1152px}17%{background-position:-224px -1152px}20%{background-position:-256px -1152px}24%{background-position:-288px -1152px}27%{background-position:-320px -1152px}31%{background-position:-352px -1152px}34%{background-position:-384px -1152px}37%{background-position:-416px -1152px}41%{background-position:-448px -1152px}44%{background-position:-480px -1152px}48%{background-position:-512px -1152px}51%{background-position:-544px -1152px}55%{background-position:-576px -1152px}58%{background-position:-608px -1152px}62%{background-position:-0px -1184px}65%{background-position:-32px -1184px}68%{background-position:-64px -1184px}72%{background-position:-96px -1184px}75%{background-position:-128px -1184px}79%{background-position:-160px -1184px}82%{background-position:-192px -1184px}86%{background-position:-224px -1184px}89%{background-position:-256px -1184px}93%{background-position:-288px -1184px}96%{background-position:-320px -1184px}100%{background-position:-352px -1184px}}#cards_001{background-position:-0px -0px}#cards_002{background-position:-32px -0px}#cards_003{background-position:-64px -0px}#cards_004{background-position:-96px -0px}#cards_005{background-position:-128px -0px}#cards_006{background-position:-160px -0px}#cards_007{background-position:-192px -0px}#cards_008{background-position:-224px -0px}#cards_009{background-position:-256px -0px}#cards_010{background-position:-288px -0px}#cards_011{background-position:-320px -0px}#cards_012{background-position:-352px -0px}#cards_013{background-position:-384px -0px}#cards_014{background-position:-416px -0px}#cards_015{background-position:-448px -0px}#cards_016{background-position:-480px -0px}#cards_017{background-position:-512px -0px}#cards_018{background-position:-544px -0px}#cards_019{background-position:-576px -0px}#cards_020{background-position:-608px -0px}#cards_021{background-position:-0px -32px}#cards_022{background-position:-32px -32px}#cards_023{background-position:-64px -32px}#cards_024{background-position:-96px -32px}#cards_025{background-position:-128px -32px}#cards_026{background-position:-160px -32px}#cards_027{background-position:-192px -32px}#cards_028{background-position:-224px -32px}#cards_029{background-position:-256px -32px}#cards_030{background-position:-288px -32px}#cards_031{background-position:-320px -32px}#cards_032{background-position:-0px -0px !important}#cards_033{background-position:-32px -0px !important}#cards_034{background-position:-64px -0px !important}#cards_035{background-position:-96px -0px !important}#cards_036{background-position:-128px -0px !important}#cards_037{background-position:-160px -0px !important}#cards_038{background-position:-192px -0px !important}#cards_039{background-position:-224px -0px !important}#cards_040{background-position:-608px -32px}#cards_041{background-position:-0px -64px}#cards_042{background-position:-32px -64px}#cards_043{background-position:-64px -64px}#cards_044{background-position:-96px -64px}#cards_045{background-position:-128px -64px}#cards_046{background-position:-160px -64px}#cards_047{background-position:-192px -64px}#cards_048{background-position:-224px -64px}#cards_049{background-position:-256px -64px}#cards_050{background-position:-288px -64px}#cards_051{background-position:-320px -64px}#cards_052{background-position:-352px -64px}#cards_053{background-position:-384px -64px}#cards_054{background-position:-416px -64px}#cards_055{background-position:-448px -64px}#cards_056{background-position:-480px -64px}#cards_057{background-position:-512px -64px}#cards_058{background-position:-544px -64px}#cards_059{background-position:-576px -64px}#cards_060{background-position:-608px -64px}#cards_061{background-position:-0px -96px}#cards_062{background-position:-32px -96px}#cards_063{background-position:-64px -96px}#cards_064{background-position:-96px -96px}#cards_065{background-position:-128px -96px}#cards_066{background-position:-160px -96px}#cards_067{background-position:-192px -96px}#cards_068{background-position:-224px -96px}#cards_069{background-position:-256px -96px}#cards_070{background-position:-288px -96px}#cards_071{background-position:-320px -96px}#cards_072{background-position:-352px -96px}#cards_073{background-position:-384px -96px}#cards_074{background-position:-416px -96px}#cards_075{background-position:-448px -96px}#cards_076{background-position:-480px -96px}#cards_077{background-position:-512px -96px}#cards_078{background-position:-544px -96px}#cards_079{background-position:-576px -96px}#cards_080{background-position:-608px -96px}#cards_081{background-position:-0px -128px}#cards_082{background-position:-32px -128px}#cards_083{background-position:-64px -128px}#cards_084{background-position:-96px -128px}#cards_085{background-position:-128px -128px}#cards_086{background-position:-160px -128px}#cards_087{background-position:-192px -128px}#cards_088{background-position:-224px -128px}#cards_089{background-position:-256px -128px}#cards_090{background-position:-288px -128px}#cards_091{background-position:-320px -128px}#cards_092{background-position:-352px -128px}#cards_093{background-position:-384px -128px}#cards_094{background-position:-416px -128px}#cards_095{background-position:-448px -128px}#cards_096{background-position:-480px -128px}#cards_097{background-position:-512px -128px}", ".crafting_recipe{transform:scale(2);margin:8px;image-rendering:pixelated;width:16px;height:16px;background-image:url(https://huiji-public.huijistatic.com/isaac/uploads/8/89/Crafting_ui_sprite.png)}.crafting_recipe_0{background-position:-0px -0px}.crafting_recipe_1{background-position:-16px -0px}.crafting_recipe_2{background-position:-32px -0px}.crafting_recipe_3{background-position:-48px -0px}.crafting_recipe_4{background-position:-64px -0px}.crafting_recipe_5{background-position:-80px -0px}.crafting_recipe_6{background-position:-96px -0px}.crafting_recipe_7{background-position:-112px -0px}.crafting_recipe_8{background-position:-0px -16px}.crafting_recipe_9{background-position:-16px -16px}.crafting_recipe_10{background-position:-32px -16px}.crafting_recipe_11{background-position:-48px -16px}.crafting_recipe_12{background-position:-64px -16px}.crafting_recipe_13{background-position:-80px -16px}.crafting_recipe_14{background-position:-96px -16px}.crafting_recipe_15{background-position:-112px -16px}.crafting_recipe_16{background-position:-0px -32px}.crafting_recipe_17{background-position:-16px -32px}.crafting_recipe_18{background-position:-32px -32px}.crafting_recipe_19{background-position:-48px -32px}.crafting_recipe_20{background-position:-64px -32px}.crafting_recipe_21{background-position:-80px -32px}.crafting_recipe_22{background-position:-96px -32px}.crafting_recipe_23{background-position:-112px -32px}.crafting_recipe_24{background-position:-0px -48px}.crafting_recipe_25{background-position:-16px -48px}.crafting_recipe_26{background-position:-32px -48px}.crafting_recipe_27{background-position:-48px -48px}.crafting_recipe_28{background-position:-64px -48px}.crafting_recipe_29{background-position:-80px -48px}.crafting_recipe_30{background-position:-96px -48px}"] }, null, null);; mw.loader.implement("ext.gadget.persistentgamedata@xjl89", function ($, jQuery, require, module) {
       (function () {
              function loadPersistantGameState() {
                     function parse_savefile_infos(strings) {
                            var savedata = {}
                            var strs = strings.split(',')
                            var buffer = new ArrayBuffer(strs.length)
                            var dv = new DataView(buffer)
                            for (var i = 0; i < strs.length; i++) { dv.setUint8(i, +strs[i]) } var cursor = 0
                            function read_uint32() {
                                   var r = dv.getUint32(cursor, true)
                                   cursor += 4
                                   return r
                            } function read_uint16() {
                                   var r = dv.getUint16(cursor, true)
                                   cursor += 2
                                   return r
                            } function read_byte() {
                                   var r = dv.getUint8(cursor)
                                   cursor += 1
                                   return r
                            } {
                                   var preleading = ''
                                   for (var i = 0; i < 16; i++) { preleading += String.fromCharCode(read_byte()) } if (preleading != "ISAACNGSAVE09R  ") {
                                          alert("您的存档格式不受支持，此功能暂只支持胎衣†/忏悔的存档")
                                          return undefined
                                   } savedata.preleading = preleading
                            } savedata.checksum = read_uint32()
                            var block_count = 0
                            while (block_count < 11) {
                                   block_count++
                                   var block_type = read_uint32()
                                   var block_size = read_uint32()
                                   var extra_number = read_uint32()
                                   switch (block_type) {
                                          case 1: var achi_count = extra_number
                                                 var achis = []
                                                 for (var i = 0; i < block_size; i++) {
                                                        if (i < achi_count) achis.push(read_byte() > 0)
                                                        else read_byte()
                                                 } savedata.achis = achis
                                                 break
                                          case 2: var counter = {}
                                                 counter.momkills = dv.getUint32(cursor + 4, true)
                                                 counter.death = dv.getUint32(cursor + 0x28, true)
                                                 counter.beststreak = dv.getUint32(cursor + 0x5c, true)
                                                 savedata.counter = counter
                                                 var counter_data = []
                                                 for (var i = 0; i < block_size; i += 4) { counter_data.push(dv.getUint32(cursor + i, true)) } savedata.counter_data = counter_data
                                                 cursor += block_size
                                                 break
                                          case 4: var collectibles = []
                                                 for (var i = 0; i < extra_number; i++) { collectibles.push(read_byte() > 0) } savedata.collectibles = collectibles
                                                 break
                                          case 7: var challenges = []
                                                 for (var i = 0; i < extra_number; i++) { challenges.push(read_byte() > 0) } savedata.challenges = challenges
                                                 break
                                          case 8: var cutscene = []
                                                 for (var i = 0; i < extra_number; i++) { cutscene.push(read_uint32()) } savedata.cutscene = cutscene
                                                 break
                                          case 3: var level = []
                                                 for (var i = 0; i < extra_number; i++) { level.push(read_uint32()) } savedata.level = level
                                                 break
                                          case 9: cursor += block_size
                                                 break
                                          case 5: case 6: case 10: cursor += extra_number
                                                 break
                                          case 11: var bestiary = {}
                                                 for (var i = 0; i < 4; i++) {
                                                        var type = read_uint32()
                                                        var size = read_uint32() / 4
                                                        for (var j = 0; j < size; j++) {
                                                               var SubType = read_byte()
                                                               var Variant = read_byte()
                                                               var Type = read_byte()
                                                               Type += read_byte() << 8
                                                               Type >>= 4
                                                               var value = read_uint16()
                                                               bestiary[Type + "." + Variant] = bestiary[Type + "." + Variant] || {}
                                                               bestiary[Type + "." + Variant][type] = (bestiary[Type + "." + Variant][type] || 0) + value
                                                               read_uint16()
                                                        }
                                                 } savedata.bestiary = bestiary
                                                 break
                                   }
                            } return savedata
                     } var selectors = document.getElementsByClassName('persistentgamedata_selector')
                     for (var i = 0; i < selectors.length; i++) {
                            var elem = selectors[i]
                            var indicator = elem.querySelector('#persistentgamedata_selector_indicator')
                            var btn = elem.querySelector('#persistentgamedata_selector_loadbtn')
                            var rmbtn = elem.querySelector('#persistentgamedata_selector_removebtn')
                            var input = document.createElement('input')
                            input.setAttribute('type', 'file')
                            input.setAttribute('accept', '.dat')
                            input.style = "display:none"
                            elem.appendChild(input)
                            function update_indicator(elem) {
                                   var savedatas = localStorage.getItem('isaac_game_persistentgamedata')
                                   savedatas = savedatas && parse_savefile_infos(savedatas)
                                   if (savedatas) {
                                          indicator.innerHTML = "存档已加载"
                                          var obj = elem.querySelector('#persistentgamedata_selector_checksum')
                                          if (obj) { obj.innerHTML = savedatas.checksum.toString(16) } obj = elem.querySelector('#persistentgamedata_selector_death_count')
                                          if (obj) { obj.innerHTML = savedatas.counter.death } obj = elem.querySelector('#persistentgamedata_selector_collectibles_count')
                                          if (obj) {
                                                 var count = 0
                                                 for (var i = 1; i < savedatas.collectibles.length; i++) { if (savedatas.collectibles[i]) { count++ } } obj.innerHTML = count
                                          } obj = elem.querySelector('#persistentgamedata_selector_achievements_count')
                                          if (obj) {
                                                 var count = 0
                                                 for (var i = 1; i < savedatas.achis.length; i++) { if (savedatas.achis[i]) { count++ } } obj.innerHTML = count
                                          } obj = elem.querySelector('#persistentgamedata_selector_momkills_count')
                                          if (obj) { obj.innerHTML = savedatas.counter.momkills } obj = elem.querySelector('#persistentgamedata_selector_beststreak_count')
                                          if (obj) { obj.innerHTML = savedatas.counter.beststreak }
                                   } else {
                                          indicator.innerHTML = "存档未加载"
                                          var obj = elem.querySelector('#persistentgamedata_selector_checksum')
                                          if (obj) { obj.innerHTML = '' } obj = elem.querySelector('#persistentgamedata_selector_death_count')
                                          if (obj) { obj.innerHTML = '' } obj = elem.querySelector('#persistentgamedata_selector_collectibles_count')
                                          if (obj) { obj.innerHTML = '' } obj = elem.querySelector('#persistentgamedata_selector_achievements_count')
                                          if (obj) { obj.innerHTML = '' } obj = elem.querySelector('#persistentgamedata_selector_momkills_count')
                                          if (obj) { obj.innerHTML = '' } obj = elem.querySelector('#persistentgamedata_selector_beststreak_count')
                                          if (obj) { obj.innerHTML = '' }
                                   }
                            } update_indicator(elem)
                            btn.addEventListener('click', function () { input.click() })
                            rmbtn.addEventListener('click', function () {
                                   localStorage.removeItem('isaac_game_persistentgamedata')
                                   update_indicator(elem)
                            })
                            input.addEventListener('input', function () {
                                   update_indicator(elem)
                                   if (input.files.length != 1) { return } var file = input.files[0]
                                   if (file.name.match('((rep)|(abp))_persistentgamedata[0-9]+.dat') == null) { if (!confirm('正确的存档名应该类似rep_persistentgamedata1.dat或abp_persistentgamedata1.dat，您确定要使用' + file.name + '吗？')) { return } } file.arrayBuffer().then(function (arrayBuffer) {
                                          var array = new Uint8Array(arrayBuffer).toString()
                                          if (parse_savefile_infos(array) == undefined) { return } localStorage.setItem('isaac_game_persistentgamedata', array)
                                          update_indicator(elem)
                                   })
                            })
                     } var achievement_data = localStorage.getItem('isaac_game_persistentgamedata')
                     achievement_data = achievement_data && parse_savefile_infos(achievement_data)
                     function is_achievement_unlocked(id) { return achievement_data.achis.length > id && achievement_data.achis[id] > 0 } var removes = []
                     var objs = document.getElementsByClassName('persistentgamedata_achi_unlocked')
                     for (var i = 0; i < objs.length; i++) {
                            var aid = objs[i].getAttribute('data-item')
                            if (typeof (aid) != "string") return
                            if (!aid.match('^[0-9]+$')) return
                            if (!achievement_data || !(is_achievement_unlocked(+aid))) { removes.push(objs[i]) }
                     } objs = document.getElementsByClassName('persistentgamedata_achi_locked')
                     for (var i = 0; i < objs.length; i++) {
                            var aid = objs[i].getAttribute('data-item')
                            if (typeof (aid) != "string") return
                            if (!aid.match('^[0-9]+$')) return
                            if (!achievement_data || is_achievement_unlocked(+aid)) { removes.push(objs[i]) }
                     } objs = document.getElementsByClassName('persistentgamedata_no_achi')
                     for (var i = 0; i < objs.length; i++) { if (achievement_data) { removes.push(objs[i]) } } objs = document.getElementsByClassName('persistentgamedata_with_achi')
                     for (var i = 0; i < objs.length; i++) { if (!achievement_data) { removes.push(objs[i]) } } function is_item_unlocked(id) { return achievement_data.collectibles.length > id && achievement_data.collectibles[id] > 0 } var objs = document.getElementsByClassName('persistentgamedata_item_unlocked')
                     for (var i = 0; i < objs.length; i++) {
                            var aid = objs[i].getAttribute('data-item')
                            if (typeof (aid) != "string") return
                            if (!aid.match('^[0-9]+$')) return
                            if (!achievement_data || !(is_item_unlocked(+aid))) { removes.push(objs[i]) }
                     } objs = document.getElementsByClassName('persistentgamedata_item_locked')
                     for (var i = 0; i < objs.length; i++) {
                            var aid = objs[i].getAttribute('data-item')
                            if (typeof (aid) != "string") return
                            if (!aid.match('^[0-9]+$')) return
                            if (!achievement_data || is_item_unlocked(+aid)) { removes.push(objs[i]) }
                     } function is_challenge_unlocked(id) { return achievement_data.challenges.length > id && achievement_data.challenges[id] > 0 } var objs = document.getElementsByClassName('persistentgamedata_challenge_unlocked')
                     for (var i = 0; i < objs.length; i++) {
                            var aid = objs[i].getAttribute('data-item')
                            if (typeof (aid) != "string") return
                            if (!aid.match('^[0-9]+$')) return
                            if (!achievement_data || !(is_challenge_unlocked(+aid))) { removes.push(objs[i]) }
                     } objs = document.getElementsByClassName('persistentgamedata_challenge_locked')
                     for (var i = 0; i < objs.length; i++) {
                            var aid = objs[i].getAttribute('data-item')
                            if (typeof (aid) != "string") return
                            if (!aid.match('^[0-9]+$')) return
                            if (!achievement_data || is_challenge_unlocked(+aid)) { removes.push(objs[i]) }
                     } for (var i = 0; i < removes.length; i++) { removes[i].remove() } if (achievement_data) {
                            var icons = document.querySelectorAll(".icons.Achievement")
                            for (var i = 0; i < icons.length; i++) {
                                   var icon = icons[i]
                                   var match = icon.id.match('^Achievement_([0-9]+)$')
                                   if (match) {
                                          var achievement_id = +match[1]
                                          if (!is_achievement_unlocked(achievement_id)) {
                                                 var tip = document.createElement('span')
                                                 tip.className = "fa fa-lock"
                                                 tip.style = "position:absolute;left:4px;top:0px;color:#ffeb00;background-color:#0027ff;"
                                                 icon.appendChild(tip)
                                                 icon.style = "filter:grayscale(50%) brightness(50%);" + (icon.style || '')
                                          }
                                   }
                            }
                     } if (achievement_data) {
                            objs = document.getElementsByClassName('persistentgamedata_bestiary')
                            for (var i = 0; i < objs.length; i++) {
                                   var elem = objs[i]
                                   var type_data = elem.getAttribute('data-item')
                                   var propattr_data = elem.getAttribute('data-propattr')
                                   if (typeof (type_data) != "string" || typeof (propattr_data) != "string") continue
                                   if (!type_data.match('^[0-9]+\.[0-9]+$')) continue
                                   if (propattr_data != '1' && propattr_data != '2' && propattr_data != '3' && propattr_data != '4') continue
                                   var data = achievement_data.bestiary && achievement_data.bestiary[type_data]
                                   var result_text = data ? (data[propattr_data] || 0) : 0
                                   elem.innerHTML = result_text
                            } objs = document.getElementsByClassName('persistentgamedata_counter_data')
                            for (var i = 0; i < objs.length; i++) {
                                   var elem = objs[i]
                                   var type_data = elem.getAttribute('data-item')
                                   if (typeof (type_data) != "string") continue
                                   if (!type_data.match('^[0-9]+$')) continue
                                   if (achievement_data.counter_data && (+type_data < achievement_data.counter_data.length)) { elem.innerHTML = achievement_data.counter_data[+type_data] } else { elem.innerHTML = '-' }
                            } objs = document.getElementsByClassName('persistentgamedata_cutscene_data')
                            for (var i = 0; i < objs.length; i++) {
                                   var elem = objs[i]
                                   var type_data = elem.getAttribute('data-item')
                                   if (typeof (type_data) != "string") continue
                                   if (!type_data.match('^[0-9]+$')) continue
                                   if (achievement_data.cutscene && (+type_data < achievement_data.cutscene.length)) { elem.innerHTML = achievement_data.cutscene[+type_data] } else { elem.innerHTML = '-' }
                            } objs = document.getElementsByClassName('persistentgamedata_level_data')
                            for (var i = 0; i < objs.length; i++) {
                                   var elem = objs[i]
                                   var type_data = elem.getAttribute('data-item')
                                   if (typeof (type_data) != "string") continue
                                   if (!type_data.match('^[0-9]+$')) continue
                                   if (achievement_data.level && (+type_data < achievement_data.level.length)) { elem.innerHTML = achievement_data.level[+type_data] } else { elem.innerHTML = '-' }
                            }
                     }
              } if (document.readyState == 'loading') { document.addEventListener('DOMContentLoaded', loadPersistantGameState) } else { loadPersistantGameState() }
       })()
}, null, null, null);; mw.loader.implement("ext.gadget.LostSoulHelper@e4ga3", function ($, jQuery, require, module) {
       (function () {
              function parseLostSoul(soul) {
                     var layer_0 = soul.getElementsByClassName("lost_soul_anm_FloatDown0")[0]
                     layer_0.addEventListener("animationiteration", function (e) {
                            if (e.target.death) {
                                   var layer_1 = e.target.parentElement.getElementsByClassName("lost_soul_anm_FloatDown1")[0]
                                   layer_1.classList.remove("lost_soul_anm_FloatDown1")
                                   layer_1.classList.add("lost_soul_anm_Death1")
                                   e.target.classList.remove("lost_soul_anm_FloatDown0")
                                   e.target.classList.add("lost_soul_anm_Death0")
                                   e.target.parentElement.getElementsByClassName("lost_soul_text_layer")[0].classList.add("lost_soul_anm_move_ea")
                            }
                     })
                     layer_0.addEventListener("animationend", function (e) { e.target.parentElement.remove(); })
                     layer_0.addEventListener("click", function (e) { e.target.death = true })
              } var config = document.getElementById("lost_soul_config")
              var rate = undefined
              if (config) {
                     rate = config.getAttribute("data-rate")
                     if (typeof (rate) == "string" && rate.match("^[0-9]+")) { rate = (+rate) / 100 }
              } if (rate == undefined) { rate = 0.01 } window.createLostSoul = function () {
                     var soul = document.createElement("div")
                     var soul_layer_0 = document.createElement("div")
                     var soul_layer_1 = document.createElement("div")
                     var soul_layer_text = document.createElement("div")
                     soul.style = "z-index:100000;position:absolute; left: " + (Math.random() * (window.innerWidth - 100) + 50) + "px;top:" + (Math.random() * (window.innerHeight - 600) + 300) + "px"
                     soul.classList.add("lost_soul_helper")
                     soul_layer_0.style = "position: absolute; left: 0; top: 0;"
                     soul_layer_0.classList.add("lost_soul_layer", "lost_soul_anm_FloatDown0")
                     soul_layer_1.style = "position: absolute; left: 0; top: 0;"
                     soul_layer_1.classList.add("lost_soul_layer", "lost_soul_anm_FloatDown1")
                     soul_layer_text.innerText = "呃啊~"
                     soul_layer_text.style = "position:absolute; left: 30px; top: -60px; width:100px;display:none"
                     soul_layer_text.classList.add("lost_soul_text_layer")
                     soul.appendChild(soul_layer_1)
                     soul.appendChild(soul_layer_0)
                     soul.appendChild(soul_layer_text)
                     parseLostSoul(soul)
                     document.body.appendChild(soul)
              }
              if (Math.random() < rate) { window.createLostSoul() }
       })()
}, { "css": [".lost_soul_anm_FloatDown1{animation:lost_soul_anm_FloatDown1 533.333333ms step-end infinite both }@keyframes lost_soul_anm_FloatDown1{0.000%{transform:translate(-32px,-32px) scale(2) translateY(-4.0px) translate(16.0px,8.0px);background-position:0px -32px;opacity:1.0}6.250%{transform:translate(-32px,-32px) scale(2) translateY(-4.0px) scale(1.0,1.01) translate(16.0px,8.0px);background-position:0px -32px;opacity:1.0}12.500%{transform:translate(-32px,-32px) scale(2) translateY(-4.0px) scale(1.0,1.02) translate(16.0px,8.0px);background-position:-32px -32px;opacity:1.0}18.750%{transform:translate(-32px,-32px) scale(2) translateY(-4.0px) scale(1.045,1.005) translate(16.0px,8.0px);background-position:-32px -32px;opacity:1.0}25.000%{transform:translate(-32px,-32px) scale(2) translateY(-4.0px) scale(1.09,0.99) translate(16.0px,8.0px);background-position:-64px -32px;opacity:1.0}31.250%{transform:translate(-32px,-32px) scale(2) translateY(-4.0px) scale(1.09,0.99) translate(16.0px,8.0px);background-position:-64px -32px;opacity:1.0}37.500%{transform:translate(-32px,-32px) scale(2) translateY(-4.0px) scale(1.09,0.99) translate(16.0px,8.0px);background-position:-96px -32px;opacity:1.0}43.750%{transform:translate(-32px,-32px) scale(2) translateY(-4.0px) scale(1.045,0.995) translate(16.0px,8.0px);background-position:-96px -32px;opacity:1.0}50.000%{transform:translate(-32px,-32px) scale(2) translateY(-4.0px) translate(16.0px,8.0px);background-position:0px -32px;opacity:1.0}56.250%{transform:translate(-32px,-32px) scale(2) translateY(-4.0px) scale(1.0,1.01) translate(16.0px,8.0px);background-position:0px -32px;opacity:1.0}62.500%{transform:translate(-32px,-32px) scale(2) translateY(-4.0px) scale(1.0,1.02) translate(16.0px,8.0px);background-position:-32px -32px;opacity:1.0}68.750%{transform:translate(-32px,-32px) scale(2) translateY(-4.0px) scale(1.0,1.01) translate(16.0px,8.0px);background-position:-32px -32px;opacity:1.0}75.000%{transform:translate(-32px,-32px) scale(2) translateY(-4.0px) translate(16.0px,8.0px);background-position:-64px -32px;opacity:1.0}81.250%{transform:translate(-32px,-32px) scale(2) translateY(-4.0px) scale(1.045,0.995) translate(16.0px,8.0px);background-position:-64px -32px;opacity:1.0}87.500%{transform:translate(-32px,-32px) scale(2) translateY(-4.0px) scale(1.09,0.99) translate(16.0px,8.0px);background-position:-96px -32px;opacity:1.0}}.lost_soul_anm_FloatDown0{animation:lost_soul_anm_FloatDown0 533.333333ms step-end infinite both }@keyframes lost_soul_anm_FloatDown0{0.000%{transform:translate(-32px,-32px) scale(2) translateY(-8.0px) translate(16.0px,8.0px);background-position:0px 0px;opacity:1.0}6.250%{transform:translate(-32px,-32px) scale(2) translateY(-7.5px) scale(1.0,1.01) translate(16.0px,8.0px);background-position:0px 0px;opacity:1.0}12.500%{transform:translate(-32px,-32px) scale(2) translateY(-7.0px) scale(1.0,1.02) translate(16.0px,8.0px);background-position:0px 0px;opacity:1.0}18.750%{transform:translate(-32px,-32px) scale(2) translateY(-7.5px) scale(1.045,1.005) translate(16.0px,8.0px);background-position:0px 0px;opacity:1.0}25.000%{transform:translate(-32px,-32px) scale(2) translateY(-8.0px) scale(1.09,0.99) translate(16.0px,8.0px);background-position:0px 0px;opacity:1.0}31.250%{transform:translate(-32px,-32px) scale(2) translateY(-8.5px) scale(1.09,0.99) translate(16.0px,8.0px);background-position:0px 0px;opacity:1.0}37.500%{transform:translate(-32px,-32px) scale(2) translateY(-9.0px) scale(1.09,0.99) translate(16.0px,8.0px);background-position:0px 0px;opacity:1.0}43.750%{transform:translate(-32px,-32px) scale(2) translateY(-9.0px) scale(1.045,0.995) translate(16.0px,8.0px);background-position:0px 0px;opacity:1.0}50.000%{transform:translate(-32px,-32px) scale(2) translateY(-9.0px) translate(16.0px,8.0px);background-position:0px 0px;opacity:1.0}56.250%{transform:translate(-32px,-32px) scale(2) translateY(-9.0px) scale(1.0,1.01) translate(16.0px,8.0px);background-position:0px 0px;opacity:1.0}62.500%{transform:translate(-32px,-32px) scale(2) translateY(-9.0px) scale(1.0,1.02) translate(16.0px,8.0px);background-position:0px 0px;opacity:1.0}68.750%{transform:translate(-32px,-32px) scale(2) translateY(-9.0px) scale(1.0,1.01) translate(16.0px,8.0px);background-position:0px 0px;opacity:1.0}75.000%{transform:translate(-32px,-32px) scale(2) translateY(-9.0px) translate(16.0px,8.0px);background-position:0px 0px;opacity:1.0}81.250%{transform:translate(-32px,-32px) scale(2) translateY(-8.5px) scale(1.045,0.995) translate(16.0px,8.0px);background-position:0px 0px;opacity:1.0}87.500%{transform:translate(-32px,-32px) scale(2) translateY(-8.0px) scale(1.09,0.99) translate(16.0px,8.0px);background-position:0px 0px;opacity:1.0}}.lost_soul_anm_Death1{animation:lost_soul_anm_Death1 1166.666667ms step-end 1 both }@keyframes lost_soul_anm_Death1{0.000%{transform:translate(-32px,-32px) scale(2) translateY(-19.0px) translate(16.0px,22.0px);background-position:0px -32px;opacity:1.0}2.857%{transform:translate(-32px,-32px) scale(2) translate(1.0px,-22.666666666666668px) scale(0.9666666666666667,1.0333333333333332) translate(16.0px,22.0px);background-position:0px -32px;opacity:0.9673202614379085}5.714%{transform:translate(-32px,-32px) scale(2) translate(2.0px,-26.333333333333332px) scale(0.9333333333333332,1.0666666666666667) translate(16.0px,22.0px);background-position:0px -32px;opacity:0.934640522875817}8.571%{transform:translate(-32px,-32px) scale(2) translate(3.0px,-30.0px) scale(0.9,1.1) translate(16.0px,22.0px);background-position:-32px -32px;opacity:0.9019607843137255}11.429%{transform:translate(-32px,-32px) scale(2) translate(3.0px,-33.666666666666664px) scale(0.9333333333333332,1.1) translate(16.0px,22.0px);background-position:-32px -32px;opacity:0.8758169934640523}14.286%{transform:translate(-32px,-32px) scale(2) translate(3.0px,-37.333333333333336px) scale(0.9666666666666667,1.1) translate(16.0px,22.0px);background-position:-32px -32px;opacity:0.8496732026143791}17.143%{transform:translate(-32px,-32px) scale(2) translate(3.0px,-41.0px) scale(1.0,1.1) translate(16.0px,22.0px);background-position:-64px -32px;opacity:0.8235294117647058}20.000%{transform:translate(-32px,-32px) scale(2) translate(2.0px,-45.0px) scale(1.0333333333333332,1.0333333333333332) translate(16.0px,22.0px);background-position:-64px -32px;opacity:0.7973856209150327}22.857%{transform:translate(-32px,-32px) scale(2) translate(1.0px,-49.0px) scale(1.0666666666666667,0.9666666666666667) translate(16.0px,22.0px);background-position:-64px -32px;opacity:0.7712418300653594}25.714%{transform:translate(-32px,-32px) scale(2) translateY(-53.0px) scale(1.1,0.9) translate(16.0px,22.0px);background-position:-96px -32px;opacity:0.7450980392156863}28.571%{transform:translate(-32px,-32px) scale(2) translate(-1.3333333333333333px,-57.0px) scale(1.0666666666666667,0.9666666666666667) translate(16.0px,22.0px);background-position:-96px -32px;opacity:0.7058823529411765}31.429%{transform:translate(-32px,-32px) scale(2) translate(-2.6666666666666665px,-61.0px) scale(1.0333333333333332,1.0333333333333332) translate(16.0px,22.0px);background-position:-96px -32px;opacity:0.6666666666666666}34.286%{transform:translate(-32px,-32px) scale(2) translate(-4.0px,-65.0px) scale(1.0,1.1) translate(16.0px,22.0px);background-position:0px -32px;opacity:0.6274509803921569}37.143%{transform:translate(-32px,-32px) scale(2) translate(-4.0px,-69.33333333333333px) scale(1.0,1.0666666666666667) translate(16.0px,22.0px);background-position:0px -32px;opacity:0.5882352941176471}40.000%{transform:translate(-32px,-32px) scale(2) translate(-4.0px,-73.66666666666667px) scale(1.0,1.0333333333333332) translate(16.0px,22.0px);background-position:0px -32px;opacity:0.5490196078431373}42.857%{transform:translate(-32px,-32px) scale(2) translate(-4.0px,-78.0px) translate(16.0px,22.0px);background-position:-32px -32px;opacity:0.5098039215686274}45.714%{transform:translate(-32px,-32px) scale(2) translate(-5.0px,-82.0px) scale(0.95,1.05) translate(16.0px,22.0px);background-position:-32px -32px;opacity:0.47058823529411764}48.571%{transform:translate(-32px,-32px) scale(2) translate(-6.0px,-86.0px) scale(0.9,1.1) translate(16.0px,22.0px);background-position:-64px -32px;opacity:0.43137254901960786}51.429%{transform:translate(-32px,-32px) scale(2) translate(-5.0px,-90.0px) scale(0.95,1.1) translate(16.0px,22.0px);background-position:-64px -32px;opacity:0.4019607843137255}54.286%{transform:translate(-32px,-32px) scale(2) translate(-4.0px,-94.0px) scale(1.0,1.1) translate(16.0px,22.0px);background-position:-96px -32px;opacity:0.37254901960784315}57.143%{transform:translate(-32px,-32px) scale(2) translate(-2.5px,-98.5px) scale(1.05,1.0) translate(16.0px,22.0px);background-position:-96px -32px;opacity:0.3431372549019608}60.000%{transform:translate(-32px,-32px) scale(2) translate(-1.0px,-103.0px) scale(1.1,0.9) translate(16.0px,22.0px);background-position:0px -32px;opacity:0.3137254901960784}62.857%{transform:translate(-32px,-32px) scale(2) translateY(-107.0px) scale(1.05,1.0) translate(16.0px,22.0px);background-position:0px -32px;opacity:0.28431372549019607}65.714%{transform:translate(-32px,-32px) scale(2) translate(1.0px,-111.0px) scale(1.0,1.1) translate(16.0px,22.0px);background-position:-32px -32px;opacity:0.2549019607843137}68.571%{transform:translate(-32px,-32px) scale(2) translate(-1.0px,-114.0px) scale(1.0,1.05) translate(16.0px,22.0px);background-position:-32px -32px;opacity:0.22549019607843138}71.429%{transform:translate(-32px,-32px) scale(2) translate(-3.0px,-117.0px) translate(16.0px,22.0px);background-position:-64px -32px;opacity:0.19607843137254902}74.286%{transform:translate(-32px,-32px) scale(2) translate(-4.5px,-120.5px) scale(0.95,1.05) translate(16.0px,22.0px);background-position:-64px -32px;opacity:0.16666666666666666}77.143%{transform:translate(-32px,-32px) scale(2) translate(-6.0px,-124.0px) scale(0.9,1.1) translate(16.0px,22.0px);background-position:-96px -32px;opacity:0.13725490196078433}80.000%{transform:translate(-32px,-32px) scale(2) translate(-5.0px,-130.0px) scale(0.95,1.1) translate(16.0px,22.0px);background-position:-96px -32px;opacity:0.11764705882352941}82.857%{transform:translate(-32px,-32px) scale(2) translate(-4.0px,-136.0px) scale(1.0,1.1) translate(16.0px,22.0px);background-position:0px -32px;opacity:0.09803921568627451}85.714%{transform:translate(-32px,-32px) scale(2) translateY(-140.0px) scale(1.05,1.0) translate(16.0px,22.0px);background-position:0px -32px;opacity:0.06862745098039216}88.571%{transform:translate(-32px,-32px) scale(2) translate(4.0px,-144.0px) scale(1.1,0.9) translate(16.0px,22.0px);background-position:-32px -32px;opacity:0.0392156862745098}91.429%{transform:translate(-32px,-32px) scale(2) translateY(-162.0px) scale(1.05,1.0) translate(16.0px,22.0px);background-position:-32px -32px;opacity:0.0196078431372549}94.286%{transform:translate(-32px,-32px) scale(2) translate(-4.0px,-180.0px) scale(1.0,1.1) translate(16.0px,22.0px);background-position:-64px -32px;opacity:0.0}}.lost_soul_anm_Death0{animation:lost_soul_anm_Death0 1166.666667ms step-end 1 both }@keyframes lost_soul_anm_Death0{0.000%{transform:translate(-32px,-32px) scale(2) translateY(-19.0px) translate(16.0px,18.0px);background-position:0px 0px;opacity:1.0}2.857%{transform:translate(-32px,-32px) scale(2) translate(1.0px,-22.666666666666668px) scale(0.9666666666666667,1.0333333333333332) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.9673202614379085}5.714%{transform:translate(-32px,-32px) scale(2) translate(2.0px,-26.333333333333332px) scale(0.9333333333333332,1.0666666666666667) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.934640522875817}8.571%{transform:translate(-32px,-32px) scale(2) translate(3.0px,-30.0px) scale(0.9,1.1) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.9019607843137255}11.429%{transform:translate(-32px,-32px) scale(2) translate(3.0px,-33.666666666666664px) scale(0.9333333333333332,1.1) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.8758169934640523}14.286%{transform:translate(-32px,-32px) scale(2) translate(3.0px,-37.333333333333336px) scale(0.9666666666666667,1.1) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.8496732026143791}17.143%{transform:translate(-32px,-32px) scale(2) translate(3.0px,-41.0px) scale(1.0,1.1) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.8235294117647058}20.000%{transform:translate(-32px,-32px) scale(2) translate(2.0px,-45.0px) scale(1.0333333333333332,1.0333333333333332) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.7973856209150327}22.857%{transform:translate(-32px,-32px) scale(2) translate(1.0px,-49.0px) scale(1.0666666666666667,0.9666666666666667) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.7712418300653594}25.714%{transform:translate(-32px,-32px) scale(2) translateY(-53.0px) scale(1.1,0.9) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.7450980392156863}28.571%{transform:translate(-32px,-32px) scale(2) translate(-1.3333333333333333px,-57.0px) scale(1.0666666666666667,0.9666666666666667) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.7058823529411765}31.429%{transform:translate(-32px,-32px) scale(2) translate(-2.6666666666666665px,-61.0px) scale(1.0333333333333332,1.0333333333333332) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.6666666666666666}34.286%{transform:translate(-32px,-32px) scale(2) translate(-4.0px,-65.0px) scale(1.0,1.1) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.6274509803921569}37.143%{transform:translate(-32px,-32px) scale(2) translate(-4.0px,-69.33333333333333px) scale(1.0,1.0666666666666667) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.5882352941176471}40.000%{transform:translate(-32px,-32px) scale(2) translate(-4.0px,-73.66666666666667px) scale(1.0,1.0333333333333332) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.5490196078431373}42.857%{transform:translate(-32px,-32px) scale(2) translate(-4.0px,-78.0px) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.5098039215686274}45.714%{transform:translate(-32px,-32px) scale(2) translate(-5.0px,-82.0px) scale(0.95,1.05) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.47058823529411764}48.571%{transform:translate(-32px,-32px) scale(2) translate(-6.0px,-86.0px) scale(0.9,1.1) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.43137254901960786}51.429%{transform:translate(-32px,-32px) scale(2) translate(-5.0px,-90.0px) scale(0.95,1.1) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.4019607843137255}54.286%{transform:translate(-32px,-32px) scale(2) translate(-4.0px,-94.0px) scale(1.0,1.1) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.37254901960784315}57.143%{transform:translate(-32px,-32px) scale(2) translate(-2.5px,-98.5px) scale(1.05,1.0) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.3431372549019608}60.000%{transform:translate(-32px,-32px) scale(2) translate(-1.0px,-103.0px) scale(1.1,0.9) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.3137254901960784}62.857%{transform:translate(-32px,-32px) scale(2) translateY(-107.0px) scale(1.05,1.0) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.28431372549019607}65.714%{transform:translate(-32px,-32px) scale(2) translate(1.0px,-111.0px) scale(1.0,1.1) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.2549019607843137}68.571%{transform:translate(-32px,-32px) scale(2) translate(-1.0px,-114.0px) scale(1.0,1.05) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.22549019607843138}71.429%{transform:translate(-32px,-32px) scale(2) translate(-3.0px,-117.0px) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.19607843137254902}74.286%{transform:translate(-32px,-32px) scale(2) translate(-4.5px,-120.5px) scale(0.95,1.05) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.16666666666666666}77.143%{transform:translate(-32px,-32px) scale(2) translate(-6.0px,-124.0px) scale(0.9,1.1) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.13725490196078433}80.000%{transform:translate(-32px,-32px) scale(2) translate(-5.0px,-130.0px) scale(0.95,1.1) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.11764705882352941}82.857%{transform:translate(-32px,-32px) scale(2) translate(-4.0px,-136.0px) scale(1.0,1.1) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.09803921568627451}85.714%{transform:translate(-32px,-32px) scale(2) translateY(-140.0px) scale(1.05,1.0) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.06862745098039216}88.571%{transform:translate(-32px,-32px) scale(2) translate(4.0px,-144.0px) scale(1.1,0.9) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.0392156862745098}91.429%{transform:translate(-32px,-32px) scale(2) translateY(-162.0px) scale(1.05,1.0) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.0196078431372549}94.286%{transform:translate(-32px,-32px) scale(2) translate(-4.0px,-180.0px) scale(1.0,1.1) translate(16.0px,18.0px);background-position:0px 0px;opacity:0.0}}.lost_soul_layer{width:32px;height:32px;background-image:url(https://huiji-public.huijistatic.com/isaac/uploads/e/ee/LostSoulSprite.png);image-rendering:pixelated}.lost_soul_anm_move_ea{display:block !important;animation:lost_soul_anm_move_ea 1166.666667ms ease-in-out 1,lost_soul_anm_move_ea2 1166.666667ms ease-out 1;color:gray}@keyframes lost_soul_anm_move_ea{0%{opacity:0}20%{opacity:0}30%{opacity:1}40%{opacity:1}100%{opacity:0}}@keyframes lost_soul_anm_move_ea2{0%{transform:translate(0,0) rotate(0deg)}100%{transform:translate(40px,-5px) rotate(6deg)}}"] }, null, null);; mw.loader.implement("ext.gadget.Filterable@bohkr", function ($, jQuery, require, module) {
       (function (mw, $) {
              'use strict'; var filterIdCounter = 0; var filterButtons = []; var filterInputs = []; var fb = new AttrData('filterable'); var fbh = new AttrData('filterable-head'); var fbb = new AttrData('filterable-button'); var fbi = new AttrData('filterable-input'); var fbig = new AttrData('filterable-input-group'); function AttrData(name) { this.name = name; this.classSelector = '.' + name; this.activeClass = name + '-active'; this.idPrefix = name + '-'; this.idSelectorPrefix = '#' + name + '-'; } function FilterButton($filterHead, filterid) {
                     this.id = filterid; var $filterbutton = $('<span title="筛选" id="' + fbb.idPrefix + this.id + '" class="' + fbb.name + '"><i class="fa fa-filter" aria-hidden="true"></i></span>'); $filterHead.append($filterbutton); $filterbutton.click(this.id, function (event) {
                            event.stopPropagation(); var filterinputid = $(this).attr('id').replace(fbb.idPrefix, fbi.idPrefix); for (var i = 0; i <= filterIdCounter; i++) {
                                   if (fbi.idPrefix + i === filterinputid) {
                                          continue;
                                   } if ($(fbi.idSelectorPrefix + i).css('display') !== 'none') { $(fbi.idSelectorPrefix + i).fadeToggle(); }
                            } $('#' + filterinputid).fadeToggle(200); updateFilterableInputPosition(event.data);
                     });
              } function FilterInput(filterid) {
                     this.id = filterid; var index = $(fbb.idSelectorPrefix + filterid).parent('th,td').index(); var filterItems = new Set(); var filterInputItemsPart = ''; $(fbb.idSelectorPrefix + filterid).parent('td,th').parent('tr').parent('thead,tbody,tfoot').parent(fb.classSelector).children('tbody').children('tr').each(function () { if ($(this).children('td,th').eq(index).text() && !$(this).children('td,th').eq(index).hasClass(fbh.name)) { filterItems.add($(this).children('td,th').eq(index).text()); } }); if (filterItems.size > 0) {
                            filterInputItemsPart +=
                            '<li role="separator"class="divider"></li><li class="dropdown-header">项目筛选：</li><li class="dropdown-content"><div class="btn-group btn-group-justified"role="group"><div class="btn-group btn-group-sm"role="group"><button type="button"class="btn btn-success checkbox-select-all">全选</button></div><div class="btn-group btn-group-sm"role="group"><button type="button"class="btn btn-warning checkbox-clear-all">全清</button></div></div></li><li class="dropdown-content"><div class="checkbox-group list-group">'; filterItems.forEach(function (value) { filterInputItemsPart += '<div class="list-group-item"><input type="checkbox" checked="true" value="' + value + '" /><span title="' + value + '">' + value + '</span></div>'; }); filterInputItemsPart += '</div></li>'
                     } var $filterinput = $('<ul id="' + fbi.idPrefix + filterid + '"class="' + fbig.name + ' dropdown-menu"><li class="dropdown-header">字段筛选：</li><li class="dropdown-content"><div class="input-group input-group-sm"><input type="text"class="' + fbi.name +
                            ' form-control"placeholder="输入筛选字段"/><span class="input-group-btn"><button class="btn btn-warning btn-sm"type="button">清除</button></span></div></li>' + filterInputItemsPart + '</ul>'); $(document.body).append($filterinput); $filterinput.find('.input-group input').keyup(function (event) { var filterid = $(this).parent('.input-group').parent('.dropdown-content').parent(fbig.classSelector).attr('id').match(/[0-9]+/); updateFilterButtonState(filterid); filterTable($(fbb.idSelectorPrefix + filterid).parent('td,th').parent('tr').parent('thead,tbody,tfoot').parent(fb.classSelector)); }); $filterinput.click(function (event) { event.stopPropagation(); }); $filterinput.find('.input-group-btn').click(function (event) {
                                   var filterid = $(this).parent('.input-group').parent('.dropdown-content').parent(fbig.classSelector).attr('id').match(/[0-9]+/); $(this).prev().val(''); updateFilterButtonState(filterid); filterTable($(fbb.idSelectorPrefix + filterid).parent('td,th').parent('tr').parent('thead,tbody,tfoot').parent
                                          (fb.classSelector));
                            }); $filterinput.find('.checkbox-group input').click(function (event) { var filterid = $(this).parent('.list-group-item').parent('.checkbox-group').parent('.dropdown-content').parent(fbig.classSelector).attr('id').match(/[0-9]+/); updateFilterButtonState(filterid); filterTable($(fbb.idSelectorPrefix + filterid).parent('td,th').parent('tr').parent('thead,tbody,tfoot').parent(fb.classSelector)); }); $filterinput.find('.checkbox-select-all').click(function (event) { var filterid = $(this).parent('.btn-group').parent('.btn-group').parent('.dropdown-content').parent(fbig.classSelector).attr('id').match(/[0-9]+/); $(fbi.idSelectorPrefix + filterid + ' .checkbox-group input').prop('checked', true); updateFilterButtonState(filterid); filterTable($(fbb.idSelectorPrefix + filterid).parent('td,th').parent('tr').parent('thead,tbody,tfoot').parent(fb.classSelector)); }); $filterinput.find('.checkbox-clear-all').click(function (event) {
                                   var filterid = $(this).parent('.btn-group').parent('.btn-group').parent(
                                          '.dropdown-content').parent(fbig.classSelector).attr('id').match(/[0-9]+/); $(fbi.idSelectorPrefix + filterid + ' .checkbox-group input').prop('checked', false); updateFilterButtonState(filterid); filterTable($(fbb.idSelectorPrefix + filterid).parent('td,th').parent('tr').parent('thead,tbody,tfoot').parent(fb.classSelector));
                            });
              } function updateFilterButtonState(id) { var keyword = $(fbi.idSelectorPrefix + id + ' .input-group input').val(); var items = $(fbi.idSelectorPrefix + id + ' .checkbox-group input:not(:checked)'); if (keyword || items.length) { $(fbb.idSelectorPrefix + id).addClass(fbb.activeClass); } else { $(fbb.idSelectorPrefix + id).removeClass(fbb.activeClass); } } function setupFilterable($filterable) { $filterable.children('thead,tbody,tfoot').children('tr').children(fbh.classSelector).each(function () { filterButtons.push(new FilterButton($(this), filterIdCounter)); filterInputs.push(new FilterInput(filterIdCounter)); filterIdCounter++; }); } function updateFilterableInputPosition(id) {
                     var $filterinput = $(fbi.
                            idSelectorPrefix + id); var $filtericon = $(fbb.idSelectorPrefix + id); var offset = $filtericon.offset(); var top = offset.top + $filtericon.height(); var left = offset.left - ($filterinput.width() / 2); var right = left + $filterinput.width(); var bottom = top + $filterinput.height(); if (left < 0) { left = 0; } else if (right > $(document).width()) { left = $(document).width() - $filterinput.width(); } if (bottom > $(document).height()) { top = $(document).height() - $filterinput.height(); } $filterinput.offset({ top: top, left: left, });
              } function filterTable($filterabletable) {
                     if (window.filterTimeoutId) { window.clearTimeout(window.filterTimeoutId); window.filterTimeoutId = null; } window.filterTimeoutId = window.setTimeout(function () {
                            var filters = {}; $filterabletable.children('thead,tbody,tfoot').children('tr').children('th,td').children(fbb.classSelector).each(function () {
                                   var index = $(this).parent('th,td').index(); filters[index] = {}; var $filterInput = $('#' + $(this).attr('id').replace(fbb.idPrefix, fbi.idPrefix)); filters[index].items = []; $filterInput.find(
                                          '.checkbox-group input:not(:checked)').each(function () { filters[index].items.push($(this).val()); }); filters[index].keyword = $filterInput.find('.input-group input').val().replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
                            }); $filterabletable.children('tbody').children('tr').each(function () {
                                   for (var col in filters) {
                                          if (filters.hasOwnProperty(col)) {
                                                 var $cell = $(this).children('td,th').eq(col); if ($cell.length === 0) {
                                                        console.log('Filterable: Cannot find target cell(colspan?), skipping...')
                                                        return;
                                                 } if ($cell.hasClass(fbh.name)) { return; } var keywordRegex = new RegExp(filters[col].keyword, 'i'); if (!keywordRegex.test($cell.text())) { $(this).hide(); return; } for (var item in filters[col].items) { if (filters[col].items[item] == $cell.text()) { $(this).hide(); return; } }
                                          }
                                   } $(this).show();
                            });
                     }, 500);
              } $(document).ready(function () { if ($(fb.classSelector).length === 0) { return; } console.log('Filterable: Loading module...'); $(fb.classSelector).each(function () { if ($(this).prop('tagName') !== 'TABLE') { console.log('Filterable: Invalid tag found, skipping...'); return; } setupFilterable($(this)); }); $(window).resize(function (event) { for (var i = 0; i <= filterIdCounter; i++) { updateFilterableInputPosition(i); } }); $(window).click(function () { for (var i = 0; i <= filterIdCounter; i++) { if ($(fbi.idSelectorPrefix + i).css('display') !== 'none') { $(fbi.idSelectorPrefix + i).fadeToggle(); } } }); });
       }(mediaWiki, jQuery));
}, { "css": [".filterable-button{float:right;color:lightgray;padding:0 2px 0 0.5em;text-shadow:none;transition:all 1250ms cubic-bezier(0.19,1,0.22,1);cursor:pointer}.filterable-button:hover{text-shadow:1px 1px 2px #888}.filterable-button-active{color:black}.filterable-input-group{position:absolute;width:200px;display:none}.filterable-input-group .list-group-item input{vertical-align:text-bottom;margin:0 5px 0 0}.filterable-input-group .dropdown-content{padding:0 10px}.filterable-input-group .dropdown-content .list-group-item{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.filterable-input-group .list-group{margin-bottom:10px;max-height:206px;overflow-y:auto}"] }, null, null);; mw.loader.implement("ext.gadget.BabyPlumHelper@1sshv", function ($, jQuery, require, module) {
       (function () {
              var huijiApp = huijiApp || { isApp: false }; function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); } function _createForOfIteratorHelper(o, allowArrayLike) {
                     var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() { }; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var
                            normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } };
              } function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); } function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i]; return arr2; } function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } } function _defineProperties(target,
                     props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } } function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; } function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); } function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } var
                            document_nav_toolbar = document.getElementById("content-actions"); function reset_animation(el) { el.style.animation = 'none'; el.offsetHeight; el.style.animation = null; } var BabyPlum = function () {
                                   function BabyPlum(initX, initY) {
                                          var startAnim = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true; var texture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined; _classCallCheck(this, BabyPlum); var element = document.createElement("div"); element.style = "position:absolute;left:0;top:0;" + "transform:translate(" + initX + "px," + initY + "px);"; var cross = document.createElement("div"); cross.style = "position: absolute;left: 0;top: 0;"; cross.innerHTML = "<div style=\"position: absolute;left: -50px;top: 0;width: 100px;height: 1px;background-color: green;\"></div>\n            <div style=\"position: absolute;left: 0px;top: -50;width: 1px;height: 100px;background-color: green;\"></div>"; var anmelement = document.createElement("div"); anmelement.style.position = 'absolute'; anmelement.style.left = '0px';
                                          anmelement.style.top = '0px'; if (texture) { anmelement.style.background = 'url(' + texture + ')'; } element.appendChild(cross); element.appendChild(anmelement); this.element = element; this.cross = cross; this.anmelement = anmelement; this.cross.hidden = true; anmelement.baby_plum = this; function plum_anm_callback(e) { switch (e.type) { case "animationstart": e.target.baby_plum.anmstart(); break; case "animationiteration": e.target.baby_plum.anmiterate(); break; case "animationend": e.target.baby_plum.anmend(); break; } } anmelement.addEventListener("animationstart", plum_anm_callback); anmelement.addEventListener("animationiteration", plum_anm_callback); anmelement.addEventListener("animationend", plum_anm_callback); anmelement.classList.add("baby_plum_anim"); if (startAnim) { this.setPlumAnms("Descend"); this.status = "enter"; } else { this.setPlumAnms("Idle"); this.status = "idle"; } this.currentPos = { x: initX, y: initY }; this.targetPos = null;
                                   } _createClass(BabyPlum, [{
                                          key: "c_setBeforeChangeCallback", value: function c_setBeforeChangeCallback(cb) {
                                                 this.
                                                        beforeChangeCallback = cb;
                                          }
                                   }, { key: "anmstart", value: function anmstart() { } }, {
                                          key: "anmiterate", value: function anmiterate() {
                                                 if (this.beforeChangeCallback) { this.beforeChangeCallback(); } if (this.status == "enter") { this.handleIdle(); } else if (this.status == "idle") { if (this.handleMove()) { return; } if (this.handleHello()) { return; } if (this.handleAttack2()) { return; } if (this.handleBye()) { return; } if (this.handleDeath()) { return; } this.handleRandomWalk(); } else if (this.status == "move") { this.element.classList.remove("baby_plum_mover_attack1"); if (this.handleMove()) { return; } if (this.handleRandomWalk()) { return; } this.handleIdle(); } else if (this.status == "hello_start") { this.status = "hello_loop"; this.setPlumAnms("HelloLoop"); } else if (this.status == "hello_loop") { if (this.hello) { if (typeof this.hello == "number") { this.hello--; if (this.hello <= 0) { this.hello = false; } } if (this.helloCallback) { this.helloCallback(); } } else { this.status = "hello_end"; this.setPlumAnms("HelloEnd"); } } else if (this.status == "hello_end") { this.handleIdle(); } else if (this.
                                                        status == "bye") { this.element.remove(); } else if (this.status == "attack2") { this.element.classList.remove("baby_plum_mover_attack2"); if (this.handleMove()) { return; } if (this.handleRandomWalk()) { return; } this.handleIdle(); } else if (this.status == "death") { this.element.remove(); }
                                          }
                                   }, { key: "anmend", value: function anmend() { } }, { key: "setPlumAnms", value: function setPlumAnms(name) { var target_name = "baby_plum_anm_" + name; this.anmelement.classList.add(target_name); var rms = []; var _iterator = _createForOfIteratorHelper(this.anmelement.classList.entries()), _step; try { for (_iterator.s(); !(_step = _iterator.n()).done;) { var anm = _step.value; if (anm[1].startsWith("baby_plum_anm_") && anm[1] != target_name) { rms.push(anm[1]); } } } catch (err) { _iterator.e(err); } finally { _iterator.f(); } for (var _i = 0, _rms = rms; _i < _rms.length; _i++) { var rm = _rms[_i]; this.anmelement.classList.remove(rm); } } }, {
                                          key: "handleMove", value: function handleMove() {
                                                 if (this.targetPos) {
                                                        {
                                                               var COLLISION_DISTANCE = 64 + 32; var MOVE_DURATION = 1133.333333; var x1 = this.currentPos.x + 32, y1 =
                                                                      this.currentPos.y + 32, x2 = this.targetPos.x + 32, y2 = this.targetPos.y + 32; var lost_souls = document.getElementsByClassName("lost_soul_helper"); if (lost_souls.length > 0) { var _loop = function _loop() { var soul = lost_souls[i]; var x = soul.offsetLeft + 32, y = soul.offsetTop + 48; var hurt_time = undefined; if ((x - x1) * (x - x1) + (y - y1) * (y - y1) < COLLISION_DISTANCE * COLLISION_DISTANCE) { hurt_time = 0; } else if ((x - x2) * (x - x2) + (y - y2) * (y - y2) < COLLISION_DISTANCE * COLLISION_DISTANCE) { hurt_time = MOVE_DURATION; } else { var nx = x2 - x1, ny = y2 - y1; var len = Math.sqrt(nx * nx + ny * ny); if (len >= 3) { nx = nx / len; ny = ny / len; var px = x - x1, py = y - y1; var pos = px * nx + py * ny; var distance = nx * py - ny * px; if (pos >= 0 && pos <= len) { if (Math.abs(distance) < COLLISION_DISTANCE) { hurt_time = pos * MOVE_DURATION / len; } } } else { } } if (hurt_time != undefined && hurt_time == hurt_time) { setTimeout(function () { var s = soul.querySelector(".lost_soul_anm_FloatDown0"); if (s == undefined) { return; } s.death = true; }, hurt_time); } }; for (var i = 0; i < lost_souls.length; i++) { _loop(); } }
                                                        } this.status = "move"; this.element.style.setProperty(
                                                               "--plum_move_start", this.currentPos.x + "px," + this.currentPos.y + "px"); this.element.style.setProperty("--plum_move_end", this.targetPos.x + "px," + this.targetPos.y + "px"); this.element.style.setProperty("--plum_move_scale", this.targetPos.x > this.currentPos.x ? "1,1" : "-1,1"); this.element.style.setProperty("transform", "translate(" + this.targetPos.x + "px," + this.targetPos.y + "px)"); this.currentPos.x = this.targetPos.x; this.currentPos.y = this.targetPos.y; this.targetPos = undefined; reset_animation(this.element); this.element.classList.add("baby_plum_mover_attack1"); this.setPlumAnms("Attack1"); return true;
                                                 }
                                          }
                                   }, { key: "handleIdle", value: function handleIdle() { this.status = "idle"; this.setPlumAnms("Idle"); } }, { key: "handleRandomWalk", value: function handleRandomWalk() { if (this.randomWalk && this.randomWalk.rate > Math.random()) { var coord = this.randomWalk.callback(); if (coord) { this.c_goto(coord.x, coord.y); return true; } } } }, {
                                          key: "handleAttack2", value: function handleAttack2() {
                                                 if (this.attack2Pos) {
                                                        this.status = "attack2"; this.element.
                                                               style.setProperty("--plum_move_start", this.currentPos.x + "px," + this.currentPos.y + "px"); this.element.style.setProperty("--plum_move_end", this.attack2Pos.x + "px," + this.attack2Pos.y + "px"); this.element.style.setProperty("transform", "translate(" + this.attack2Pos.x + "px," + this.attack2Pos.y + "px)"); this.currentPos.x = this.attack2Pos.x; this.currentPos.y = this.attack2Pos.y; this.attack2Pos = null; this.element.classList.add("baby_plum_mover_attack2"); reset_animation(this.element); this.setPlumAnms("Attack2"); if (this.attack2Callback) { setTimeout(this.attack2Callback, 20 * 1000 / 30); this.attack2Callback = undefined; } return true;
                                                 }
                                          }
                                   }, { key: "handleHello", value: function handleHello() { if (this.hello) { this.status = "hello_start"; this.setPlumAnms("HelloStart"); return true; } if (this.randomHelloRate && Math.random() < this.randomHelloRate) { this.hello = 2; this.status = "hello_start"; this.setPlumAnms("HelloStart"); return true; } } }, {
                                          key: "handleBye", value: function handleBye() {
                                                 if (this.bye) {
                                                        this.bye = undefined; this.status = "bye"; this.element.
                                                               classList.add("baby_plum_mover_bye"); this.setPlumAnms("Leave"); return true;
                                                 }
                                          }
                                   }, { key: "handleDeath", value: function handleDeath() { if (this.death) { this.death = undefined; this.status = "death"; this.setPlumAnms("Death"); } } }, { key: "remove", value: function remove() { this.element.remove(); this.cross.remove(); this.anmelement.remove(); } }, { key: "c_goto", value: function c_goto(x, y) { this.targetPos = { x: x, y: y }; } }, { key: "c_setCrossVisible", value: function c_setCrossVisible(visible) { this.cross.hidden = !visible; } }, { key: "c_randomWalk", value: function c_randomWalk(rate, callback) { if (rate > 0 && callback) { this.randomWalk = { rate: rate, callback: callback }; } else { this.randomWalk = null; } } }, { key: "c_hello", value: function c_hello(toggle, callback) { this.hello = toggle; this.helloCallback = callback; } }, { key: "c_attack2", value: function c_attack2(x, y, callback) { this.attack2Pos = { x: x, y: y }; this.attack2Callback = callback; } }, { key: "c_randomHello", value: function c_randomHello(rate) { this.randomHelloRate = rate; } }, {
                                          key: "c_bye", value: function c_bye() {
                                                 this.bye =
                                                 true;
                                          }
                                   }, { key: "c_death", value: function c_death() { this.death = true; } }, { key: "setPosition", value: function setPosition(x, y) { if (Math.abs(this.currentPos.x - x) > 1 || Math.abs(this.currentPos.y - y) > 1) { this.currentPos = { x: x, y: y }; this.element.style.setProperty("transform", "translate(" + x + "px," + y + "px)"); } } }]); return BabyPlum;
                            }(); var Delirium_plum_texture = "https://huiji-public.huijistatic.com/isaac/uploads/4/4e/Anm2_resources-dlc3_gfx_bosses_afterbirthplus_deliriumforms_repentance_babyplum.png"; var plum_leader; if (mw.config.get("wgPageName") == '实体/412') { plum_leader = new BabyPlum(100, huijiApp.isApp ? 40 : 90 + (document_nav_toolbar ? document_nav_toolbar.clientHeight : 50), false, Delirium_plum_texture); } else { plum_leader = new BabyPlum(100, huijiApp.isApp ? 40 : 90 + (document_nav_toolbar ? document_nav_toolbar.clientHeight : 50), false); } document.body.appendChild(plum_leader.element); function random_move_when_click() {
                                   var height_min = 300, height_max = document.body.clientHeight - 300; if (window.baby_plum.currentPos.y - 500 > height_min)
                                          height_min = window.baby_plum.currentPos.y - 500; if (window.baby_plum.currentPos.y + 500 < height_max) height_max = window.baby_plum.currentPos.y + 500; window.baby_plum.c_goto(Math.random() * (document.body.clientWidth - 200) + 100, Math.random() * (height_max - height_min) + height_min);
                            } var local_active_time = new Date().getTime() + ""; var is_hiden = false; function only_one_plum_check() { var active_time = localStorage.getItem("plum_baby_window_active_time"); if (is_hiden) { if (active_time == local_active_time) { is_hiden = false; setTimeout(function () { $(window.baby_plum.anmelement).animate({ opacity: 1 }); }, 400); } } else { if (active_time != local_active_time) { is_hiden = true; $(window.baby_plum.anmelement).animate({ opacity: 0 }); } } } window.addEventListener("focus", function () { if (window.baby_plum == undefined) return; local_active_time = new Date().getTime() + ""; localStorage.setItem("plum_baby_window_active_time", local_active_time); if (is_hiden) { is_hiden = false; setTimeout(function () { $(window.baby_plum.anmelement).animate({ opacity: 1 }); }, 1000); } }); function
                     plum_baby_limit_to_screen() { var height_min = 300, height_max = document.body.clientHeight - 300; var left_min = 50, left_max = document.body.clientWidth - 50; var x = window.baby_plum.currentPos.x, y = window.baby_plum.currentPos.y; if (y < height_min) y = height_min; if (y > height_max) y = height_max; if (x < left_min) x = left_min; if (x > left_max) x = left_max; if (x != window.baby_plum.currentPos.x || y != window.baby_plum.currentPos.y) window.baby_plum.c_goto(x, y); } plum_leader.active_status = "idle"; setTimeout(function () { if (plum_leader.active_status != "idle") { return; } else { plum_leader.active_status = "timeout"; } plum_leader.c_goto(-100, huijiApp.isApp ? 40 : 90 + (document_nav_toolbar ? document_nav_toolbar.clientHeight : 50)); setTimeout(function () { plum_leader.remove(); }, 2000); }, 8 * 1000); plum_leader.anmelement.addEventListener("click", function () {
                            if (plum_leader.active_status != "idle") { return; } else { plum_leader.active_status = "actived"; } plum_leader.c_setBeforeChangeCallback(undefined); $(plum_leader.element).animate({ top: -64 }); local_active_time = new Date().
                                   getTime() + ""; localStorage.setItem("plum_baby_window_active_time", local_active_time); setTimeout(function () {
                                          var date = new Date(); var after_202304 = date.getFullYear() >= 2023 && date.getMonth() >= 3; if (after_202304) { if (window.enableMoveChara) { window.enableMoveChara(); } } if (after_202304 && mw.config.get("wgPageName") == "挑战/32" || date.getMonth() == 3 && date.getDate() == 1) {
                                                 plum_leader.remove(); var _p = []; window.baby_plums = _p; for (var i = 0; i < 30; i++) {
                                                        setTimeout(function () {
                                                               var plum = Math.random() < 0.05 ? new BabyPlum(Math.random() * (document.body.clientWidth - 200) + 100, 500 + (huijiApp.isApp ? -100 : 0), true, Delirium_plum_texture) : new BabyPlum(Math.random() * (document.body.clientWidth - 200) + 100, 500 + (huijiApp.isApp ? -100 : 0), true); _p.push(plum); var walk_func = function walk_func() {
                                                                      var height_min = 300, height_max = document.body.clientHeight - 300; if (plum.currentPos.y - 500 > height_min) height_min = plum.currentPos.y - 500; if (plum.currentPos.y + 500 < height_max) height_max = plum.currentPos.y + 500; return {
                                                                             x: Math.random() * (document.body.clientWidth - 200) +
                                                                                    100, y: Math.random() * (height_max - height_min) + height_min
                                                                      };
                                                               }; document.body.appendChild(plum.element); var hello_rate = Math.random(); plum.c_randomHello(hello_rate * hello_rate * 0.95); setTimeout(function () { var coord = walk_func(); var walk_rate = Math.random(); plum.c_goto(coord.x, coord.y); plum.c_randomWalk(walk_rate * 0.9 + 0.1, walk_func); }, 1500);
                                                        }, Math.random() * 10000);
                                                 } return;
                                          } plum_leader.remove(); var p; if (mw.config.get("wgPageName") == '实体/412') { p = new BabyPlum(100, 500 + (huijiApp.isApp ? -100 : 0), true, Delirium_plum_texture); } else { p = new BabyPlum(100, 500 + (huijiApp.isApp ? -100 : 0), true); } window.baby_plum = p; document.body.appendChild(p.element); if (mw.config.get("wgPageName") == "实体/908") {
                                                 var infobox_pic = undefined; var _iterator2 = _createForOfIteratorHelper(document.getElementsByClassName("infobox")), _step2; try {
                                                        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                                                               var infobox = _step2.value; var _iterator3 = _createForOfIteratorHelper(infobox.getElementsByTagName("img")), _step3; try {
                                                                      for (_iterator3.s(); !(_step3 = _iterator3.
                                                                             n()).done;) { var img = _step3.value; if (img.getAttribute("alt") == "Entity 908.0.0.png") { infobox_pic = img; break; } }
                                                               } catch (err) { _iterator3.e(err); } finally { _iterator3.f(); } if (infobox_pic) break;
                                                        }
                                                 } catch (err) { _iterator2.e(err); } finally { _iterator2.f(); } if (infobox_pic) { var pos = $(infobox_pic).offset(); p.c_attack2(pos.left + 64, pos.top + 64, function () { $(infobox_pic).animate({ opacity: 0 }); p.c_setBeforeChangeCallback(function () { var pos = $(infobox_pic).offset(); if (Math.abs(pos.left + 64 - p.currentPos.x) > 1 || Math.abs(pos.top + 64 + 64 - p.currentPos.y) > 1) { var _pos = $(infobox_pic).offset(); p.c_goto(_pos.left + 64, _pos.top + 64 + 64); p.c_hello(false); } else { p.c_hello(true); } only_one_plum_check(); }); var helloing = true; p.anmelement.addEventListener("click", function () { if (helloing) { helloing = false; setTimeout(function () { $(infobox_pic).animate({ opacity: 1 }); }, 1000); p.c_hello(false); p.c_setBeforeChangeCallback(function () { only_one_plum_check(); plum_baby_limit_to_screen(); }); p.c_randomHello(0.3); } random_move_when_click(); }); }); }
                                          } else {
                                                 window.
                                                        baby_plum.anmelement.addEventListener("click", random_move_when_click); window.baby_plum.c_randomHello(0.3); p.c_setBeforeChangeCallback(function () { only_one_plum_check(); plum_baby_limit_to_screen(); });
                                          }
                                   }, 1000);
                     });
       })()
}, { "css": [".baby_plum_anim{width:64px;height:64px;background-image:url(https://huiji-public.huijistatic.com/isaac/uploads/d/d0/BabyPlumSprite.png);image-rendering:pixelated}:root{--plum_move_start:0,0;--plum_move_end:0,0;--plum_move_scale:1,1}.baby_plum_mover_attack1{animation:baby_plum_mover_attack1 1133.333333ms 1 ease-in-out}@keyframes baby_plum_mover_attack1{0%{transform:translate(var(--plum_move_start)) scale(var(--plum_move_scale))}100%{transform:translate(var(--plum_move_end)) scale(var(--plum_move_scale))}}.baby_plum_mover_attack2{animation:baby_plum_mover_attack2 1333.333333ms 1 ease-in-out}@keyframes baby_plum_mover_attack2{0%{transform:translate(var(--plum_move_start))}17.500000%{transform:translate(var(--plum_move_start))}37.500000%{transform:translate(var(--plum_move_end))}100%{transform:translate(var(--plum_move_end))}}.baby_plum_mover_bye{animation:baby_plum_mover_bye 1933.333333ms 1 ease-in-out}@keyframes baby_plum_mover_bye{0%{opacity:100%}70%{opacity:100%}100%{opacity:0%}}.baby_plum_anm_Appear{animation:baby_plum_anm_Appear 1866.666667ms step-end infinite both }@keyframes baby_plum_anm_Appear{0.000%{transform:translate(-32px,-32px) scale(2) scale(1.0,1.0) translateY(-22.0px);background-position:0px -64px}1.786%{transform:translate(-32px,-32px) scale(2) scale(1.05,0.95) translateY(-22.0px);background-position:0px -64px}3.571%{transform:translate(-32px,-32px) scale(2) scale(1.1,0.9) translateY(-22.0px);background-position:0px -64px}5.357%{transform:translate(-32px,-32px) scale(2) scale(1.0,1.0) translateY(-22.0px);background-position:0px -64px}7.143%{transform:translate(-32px,-32px) scale(2) scale(0.9,1.1) translateY(-22.0px);background-position:-64px -64px}8.929%{transform:translate(-32px,-32px) scale(2) scale(0.975,1.025) translateY(-22.0px);background-position:-64px -64px}10.714%{transform:translate(-32px,-32px) scale(2) scale(1.05,0.95) translateY(-22.0px);background-position:-64px -64px}12.500%{transform:translate(-32px,-32px) scale(2) scale(1.025,0.975) translateY(-22.0px);background-position:-64px -64px}14.286%{transform:translate(-32px,-32px) scale(2) scale(1.0,1.0) translateY(-22.0px);background-position:-64px -64px}16.071%{transform:translate(-32px,-32px) scale(2) scale(1.0,1.0) translateY(-22.0px);background-position:-64px -64px}17.857%{transform:translate(-32px,-32px) scale(2) scale(1.0,1.0) translateY(-22.0px);background-position:-64px -64px}19.643%{transform:translate(-32px,-32px) scale(2) scale(1.0,1.0) translateY(-22.0px);background-position:-64px -64px}21.429%{transform:translate(-32px,-32px) scale(2) scale(1.0,1.0) translateY(-22.0px);background-position:-64px -64px}23.214%{transform:translate(-32px,-32px) scale(2) scale(1.0,1.0) translateY(-22.0px);background-position:-64px -64px}25.000%{transform:translate(-32px,-32px) scale(2) scale(1.0,1.0) translateY(-22.0px);background-position:-64px -64px}26.786%{transform:translate(-32px,-32px) scale(2) scale(0.95,1.05) translateY(-22.0px);background-position:-64px -64px}28.571%{transform:translate(-32px,-32px) scale(2) scale(0.9,1.1) translateY(-22.0px);background-position:-64px -64px}30.357%{transform:translate(-32px,-32px) scale(2) scale(1.0,1.0) translateY(-22.0px);background-position:-64px -64px}32.143%{transform:translate(-32px,-32px) scale(2) scale(1.1,0.9) translateY(-22.0px);background-position:-128px -64px}33.929%{transform:translate(-32px,-32px) scale(2) scale(1.1066666666666667,0.8933333333333333) translateY(-22.0px);background-position:-128px -64px}35.714%{transform:translate(-32px,-32px) scale(2) scale(1.1133333333333333,0.8866666666666667) translateY(-22.0px);background-position:-128px -64px}37.500%{transform:translate(-32px,-32px) scale(2) scale(1.12,0.88) translateY(-22.0px);background-position:-192px -64px}39.286%{transform:translate(-32px,-32px) scale(2) scale(1.13,0.87) translateY(-22.0px);background-position:-192px -64px}41.071%{transform:translate(-32px,-32px) scale(2) scale(1.14,0.86) translateY(-22.0px);background-position:-128px -64px}42.857%{transform:translate(-32px,-32px) scale(2) scale(1.145,0.855) translateY(-22.0px);background-position:-128px -64px}44.643%{transform:translate(-32px,-32px) scale(2) scale(1.15,0.85) translateY(-22.0px);background-position:-192px -64px}46.429%{transform:translate(-32px,-32px) scale(2) scale(1.155,0.845) translateY(-22.0px);background-position:-192px -64px}48.214%{transform:translate(-32px,-32px) scale(2) scale(1.16,0.84) translateY(-22.0px);background-position:-128px -64px}50.000%{transform:translate(-32px,-32px) scale(2) scale(1.16,0.84) translateY(-22.0px);background-position:-192px -64px}51.786%{transform:translate(-32px,-32px) scale(2) scale(1.1,0.9) translateY(-22.0px);background-position:-128px -64px}53.571%{transform:translate(-32px,-32px) scale(2) scale(1.02,0.98) translateY(-22.0px);background-position:-192px -64px}55.357%{transform:translate(-32px,-32px) scale(2) translateY(-36.0px) scale(0.98,1.02) translateY(20.0px);background-position:0px -128px}57.143%{transform:translate(-32px,-32px) scale(2) translateY(-37.0px) scale(0.98,1.02) translateY(20.0px);background-position:-256px -64px}58.929%{transform:translate(-32px,-32px) scale(2) translateY(-38.0px) scale(0.97,1.03) translateY(20.0px);background-position:0px -128px}60.714%{transform:translate(-32px,-32px) scale(2) translateY(-40.0px) scale(0.96,1.04) translateY(20.0px);background-position:-64px -128px}62.500%{transform:translate(-32px,-32px) scale(2) translateY(-42.0px) scale(0.95,1.05) translateY(20.0px);background-position:-128px -128px}64.286%{transform:translate(-32px,-32px) scale(2) translateY(-44.0px) scale(0.94,1.06) translateY(20.0px);background-position:-192px -128px}66.071%{transform:translate(-32px,-32px) scale(2) translateY(-46.0px) scale(0.93,1.07) translateY(20.0px);background-position:-256px -128px}67.857%{transform:translate(-32px,-32px) scale(2) translateY(-48.0px) scale(0.92,1.08) translateY(20.0px);background-position:-320px -128px}69.643%{transform:translate(-32px,-32px) scale(2) translateY(-49.0px) scale(0.92,1.08) translateY(20.0px);background-position:0px -192px}71.429%{transform:translate(-32px,-32px) scale(2) translateY(-50.0px) scale(0.92,1.08) translateY(20.0px);background-position:-64px -192px}73.214%{transform:translate(-32px,-32px) scale(2) translateY(-51.0px) scale(0.92,1.08) translateY(20.0px);background-position:-128px -192px}75.000%{transform:translate(-32px,-32px) scale(2) translateY(-51.0px) scale(0.94,1.06) translateY(20.0px);background-position:-192px -192px}76.786%{transform:translate(-32px,-32px) scale(2) translateY(-50.0px) scale(0.98,1.02) translateY(20.0px);background-position:-256px -192px}78.571%{transform:translate(-32px,-32px) scale(2) translateY(-50.0px) scale(1.02,0.98) translateY(20.0px);background-position:-320px -192px}80.357%{transform:translate(-32px,-32px) scale(2) translateY(-49.0px) scale(1.04,0.96) translateY(20.0px);background-position:-384px -192px}82.143%{transform:translate(-32px,-32px) scale(2) translateY(-48.0px) scale(1.02,0.98) translateY(20.0px);background-position:-256px -64px}83.929%{transform:translate(-32px,-32px) scale(2) translateY(-48.0px) scale(1.0,1.0) translateY(20.0px);background-position:0px -128px}85.714%{transform:translate(-32px,-32px) scale(2) translateY(-47.0px) scale(0.99,1.01) translateY(20.0px);background-position:-256px -64px}87.500%{transform:translate(-32px,-32px) scale(2) translateY(-47.0px) scale(0.98,1.02) translateY(20.0px);background-position:0px -128px}89.286%{transform:translate(-32px,-32px) scale(2) translateY(-46.0px) scale(0.98,1.02) translateY(20.0px);background-position:-256px -64px}91.071%{transform:translate(-32px,-32px) scale(2) translateY(-46.0px) scale(0.97,1.03) translateY(20.0px);background-position:0px -128px}92.857%{transform:translate(-32px,-32px) scale(2) translateY(-47.0px) scale(0.97,1.03) translateY(20.0px);background-position:-256px -64px}94.643%{transform:translate(-32px,-32px) scale(2) translateY(-47.0px) scale(0.98,1.02) translateY(20.0px);background-position:0px -128px}96.429%{transform:translate(-32px,-32px) scale(2) translateY(-48.0px) scale(1.02,0.98) translateY(20.0px);background-position:-256px -64px}98.214%{transform:translate(-32px,-32px) scale(2) translateY(-48.0px) scale(1.0,1.0) translateY(20.0px);background-position:0px -128px}}.baby_plum_anm_Idle{animation:baby_plum_anm_Idle 533.333333ms step-end infinite both }@keyframes baby_plum_anm_Idle{0.000%{transform:translate(-32px,-32px) scale(2) translateY(-48.0px) scale(1.0,1.0) translateY(20.0px);background-position:0px -128px}6.250%{transform:translate(-32px,-32px) scale(2) translateY(-48.0px) scale(0.99,1.01) translateY(20.0px);background-position:-256px -64px}12.500%{transform:translate(-32px,-32px) scale(2) translateY(-48.0px) scale(0.98,1.02) translateY(20.0px);background-position:0px -128px}18.750%{transform:translate(-32px,-32px) scale(2) translateY(-48.0px) scale(0.975,1.025) translateY(20.0px);background-position:-256px -64px}25.000%{transform:translate(-32px,-32px) scale(2) translateY(-48.0px) scale(0.97,1.03) translateY(20.0px);background-position:0px -128px}31.250%{transform:translate(-32px,-32px) scale(2) translateY(-48.0px) scale(0.975,1.025) translateY(20.0px);background-position:-256px -64px}37.500%{transform:translate(-32px,-32px) scale(2) translateY(-48.0px) scale(0.98,1.02) translateY(20.0px);background-position:0px -128px}43.750%{transform:translate(-32px,-32px) scale(2) translateY(-47.0px) scale(0.99,1.01) translateY(20.0px);background-position:-256px -64px}50.000%{transform:translate(-32px,-32px) scale(2) translateY(-46.0px) scale(1.0,1.0) translateY(20.0px);background-position:0px -128px}56.250%{transform:translate(-32px,-32px) scale(2) translateY(-46.0px) scale(1.01,0.99) translateY(20.0px);background-position:-256px -64px}62.500%{transform:translate(-32px,-32px) scale(2) translateY(-46.0px) scale(1.02,0.98) translateY(20.0px);background-position:0px -128px}68.750%{transform:translate(-32px,-32px) scale(2) translateY(-46.0px) scale(1.025,0.975) translateY(20.0px);background-position:-256px -64px}75.000%{transform:translate(-32px,-32px) scale(2) translateY(-46.0px) scale(1.03,0.97) translateY(20.0px);background-position:0px -128px}81.250%{transform:translate(-32px,-32px) scale(2) translateY(-47.0px) scale(1.025,0.975) translateY(20.0px);background-position:-256px -64px}87.500%{transform:translate(-32px,-32px) scale(2) translateY(-48.0px) scale(1.02,0.98) translateY(20.0px);background-position:0px -128px}93.750%{transform:translate(-32px,-32px) scale(2) translateY(-48.0px) scale(1.01,0.99) translateY(20.0px);background-position:-256px -64px}}.baby_plum_anm_Attack1{animation:baby_plum_anm_Attack1 1133.333333ms step-end infinite both }@keyframes baby_plum_anm_Attack1{0.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:0px -128px}2.941%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.05,0.95);background-position:-256px -64px}5.882%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.1,0.9);background-position:0px -256px}8.824%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(1.0deg) scale(1.13,0.87);background-position:-64px -256px}11.765%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(2.0deg) scale(1.15,0.85);background-position:0px -256px}14.706%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(3.0deg) scale(1.15,0.85);background-position:-64px -256px}17.647%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(2.0deg) scale(1.12,0.88);background-position:-64px -256px}20.588%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(1.0deg) scale(1.05,0.95);background-position:-128px -256px}23.529%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-192px -256px}26.471%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(-1.0deg) scale(0.95,1.05);background-position:-256px -256px}29.412%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(-2.0deg) scale(0.9,1.1);background-position:-320px -256px}32.353%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(-4.5deg) scale(0.925,1.075);background-position:-320px -256px}35.294%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(-7.0deg) scale(0.95,1.05);background-position:0px -320px}38.235%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(-7.0deg) scale(1.025,0.975);background-position:0px -320px}41.176%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(-7.0deg) scale(1.1,0.9);background-position:-64px -320px}44.118%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(-4.5deg) scale(1.125,0.875);background-position:-64px -320px}47.059%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(-2.0deg) scale(1.15,0.85);background-position:-128px -320px}50.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-192px -320px}52.941%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(1.0deg) scale(0.85,1.15);background-position:-256px -320px}55.882%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(2.0deg) scale(0.98,1.02);background-position:-192px -320px}58.824%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(3.0deg) scale(1.1,0.9);background-position:-256px -320px}61.765%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(3.0deg) scale(1.02,0.98);background-position:-192px -320px}64.706%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(4.0deg) scale(0.95,1.05);background-position:-256px -320px}67.647%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(4.0deg) scale(0.97,1.03);background-position:-192px -320px}70.588%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(3.0deg) scale(1.0,1.0);background-position:-256px -320px}73.529%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(3.0deg) scale(1.0,1.0);background-position:-192px -320px}76.471%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(2.0deg) scale(1.0,1.0);background-position:-256px -320px}79.412%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(2.0deg) scale(0.95,1.05);background-position:-192px -320px}82.353%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(1.0deg) scale(0.9,1.1);background-position:-256px -320px}85.294%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) rotate(1.0deg) scale(1.0,1.0);background-position:-192px -320px}88.235%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.1,0.9);background-position:0px -128px}91.176%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.05,0.95);background-position:-256px -64px}94.118%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.98,1.02);background-position:0px -128px}97.059%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-256px -64px}}.baby_plum_anm_Attack2{animation:baby_plum_anm_Attack2 1333.333333ms step-end infinite both }@keyframes baby_plum_anm_Attack2{0.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:0px -128px}2.500%{transform:translate(-32px,-32px) scale(2) translateY(-27.0px) scale(1.05,0.95);background-position:-256px -64px}5.000%{transform:translate(-32px,-32px) scale(2) translateY(-26.0px) scale(1.1,0.9);background-position:0px -128px}7.500%{transform:translate(-32px,-32px) scale(2) translateY(-25.0px) scale(1.13,0.87);background-position:-256px -64px}10.000%{transform:translate(-32px,-32px) scale(2) translateY(-24.0px) scale(1.15,0.85);background-position:0px -128px}12.500%{transform:translate(-32px,-32px) scale(2) translateY(-30.0px) scale(1.0,1.0);background-position:-256px -64px}15.000%{transform:translate(-32px,-32px) scale(2) translateY(-35.0px) scale(0.8,1.2);background-position:-320px -320px}17.500%{transform:translate(-32px,-32px) scale(2) translateY(-40.0px) scale(0.95,1.14);background-position:-384px -320px}20.000%{transform:translate(-32px,-32px) scale(2) translateY(-45.0px) scale(1.1,0.9);background-position:-320px -320px}22.500%{transform:translate(-32px,-32px) scale(2) translateY(-44.0px) scale(1.02,0.98);background-position:-384px -320px}25.000%{transform:translate(-32px,-32px) scale(2) translateY(-44.0px) scale(0.95,1.05);background-position:-320px -320px}27.500%{transform:translate(-32px,-32px) scale(2) translateY(-44.0px) scale(0.98,1.02);background-position:-384px -320px}30.000%{transform:translate(-32px,-32px) scale(2) translateY(-45.0px) scale(1.0,1.0);background-position:-320px -320px}32.500%{transform:translate(-32px,-32px) scale(2) translateY(-46.0px) scale(1.0,1.0);background-position:-384px -320px}35.000%{transform:translate(-32px,-32px) scale(2) translateY(-46.0px) scale(1.0,1.0);background-position:-320px -320px}37.500%{transform:translate(-32px,-32px) scale(2) translateY(-46.0px) scale(0.9,1.1);background-position:-384px -320px}40.000%{transform:translate(-32px,-32px) scale(2) translateY(-45.0px) scale(0.8,1.2);background-position:-320px -320px}42.500%{transform:translate(-32px,-32px) scale(2) translateY(-45.0px) scale(0.7,1.3);background-position:-384px -320px}45.000%{transform:translate(-32px,-32px) scale(2) translateY(-22.0px) scale(0.6,1.4);background-position:-320px -320px}47.500%{transform:translate(-32px,-32px) scale(2) translate(-2.0px,0.0px) scale(0.9,1.1) translateY(-22.0px);background-position:-448px -320px}50.000%{transform:translate(-32px,-32px) scale(2) translate(2.0px,0.0px) scale(1.15,0.85) translateY(-22.0px);background-position:-448px -320px}52.500%{transform:translate(-32px,-32px) scale(2) translate(-2.0px,0.0px) scale(1.2,0.8) translateY(-22.0px);background-position:-448px -320px}55.000%{transform:translate(-32px,-32px) scale(2) translate(2.0px,0.0px) scale(1.22,0.78) translateY(-22.0px);background-position:-448px -320px}57.500%{transform:translate(-32px,-32px) scale(2) translate(-2.0px,0.0px) scale(1.23,0.77) translateY(-22.0px);background-position:-448px -320px}60.000%{transform:translate(-32px,-32px) scale(2) translate(1.0px,0.0px) scale(1.24,0.76) translateY(-22.0px);background-position:-448px -320px}62.500%{transform:translate(-32px,-32px) scale(2) translate(-1.0px,0.0px) scale(1.25,0.75) translateY(-22.0px);background-position:-448px -320px}65.000%{transform:translate(-32px,-32px) scale(2) translate(1.0px,0.0px) scale(1.26,0.74) translateY(-22.0px);background-position:-448px -320px}67.500%{transform:translate(-32px,-32px) scale(2) translate(-1.0px,0.0px) scale(1.26,0.74) translateY(-22.0px);background-position:-448px -320px}70.000%{transform:translate(-32px,-32px) scale(2) scale(1.27,0.73) translateY(-22.0px);background-position:-448px -320px}72.500%{transform:translate(-32px,-32px) scale(2) scale(1.0,1.0) translateY(-22.0px);background-position:-448px -320px}75.000%{transform:translate(-32px,-32px) scale(2) translateY(-22.0px) scale(0.8,1.2);background-position:0px 0px}77.500%{transform:translate(-32px,-32px) scale(2) translateY(-29.0px) scale(0.95,1.05);background-position:0px 0px}80.000%{transform:translate(-32px,-32px) scale(2) translateY(-36.0px) scale(1.1,0.9);background-position:0px 0px}82.500%{transform:translate(-32px,-32px) scale(2) translateY(-36.0px) scale(1.0,1.0);background-position:-64px 0px}85.000%{transform:translate(-32px,-32px) scale(2) translateY(-35.0px) scale(0.9,1.1);background-position:-64px 0px}87.500%{transform:translate(-32px,-32px) scale(2) translateY(-30.0px) scale(0.98,1.02);background-position:0px 0px}90.000%{transform:translate(-32px,-32px) scale(2) translateY(-25.0px) scale(1.05,0.95);background-position:0px -128px}92.500%{transform:translate(-32px,-32px) scale(2) translateY(-27.0px) scale(1.02,0.98);background-position:-256px -64px}95.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:0px -128px}97.500%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-256px -64px}}.baby_plum_anm_Attack3{animation:baby_plum_anm_Attack3 1000.000000ms step-end infinite both }@keyframes baby_plum_anm_Attack3{0.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:0px -128px}3.333%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.05,0.95);background-position:-256px -64px}6.667%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.1,0.9);background-position:0px -128px}10.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.13,0.87);background-position:-256px -64px}13.333%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.15,0.85);background-position:0px -128px}16.667%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.08,0.92);background-position:-256px -64px}20.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.9,1.1);background-position:0px -384px}23.333%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.87,1.13);background-position:-64px -384px}26.667%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.85,1.15);background-position:0px -384px}30.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.84,1.16);background-position:-64px -384px}33.333%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.83,1.17);background-position:0px -384px}36.667%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.83,1.17);background-position:-64px -384px}40.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.82,1.18);background-position:0px -384px}43.333%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.82,1.18);background-position:-64px -384px}46.667%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.81,1.19);background-position:0px -384px}50.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.81,1.19);background-position:-64px -384px}53.333%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.8,1.2);background-position:0px -384px}56.667%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.77,1.23);background-position:-64px -384px}60.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.75,1.25);background-position:0px -384px}63.333%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.74,1.26);background-position:-64px -384px}66.667%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.73,1.27);background-position:0px -384px}70.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.98,1.02);background-position:-64px -384px}73.333%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.2,0.8);background-position:-256px -384px}76.667%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.13,0.87);background-position:-320px -384px}80.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.07,0.93);background-position:-256px -384px}83.333%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.01,0.99);background-position:-320px -384px}86.667%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.95,1.05);background-position:-256px -384px}90.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.98,1.02);background-position:-320px -384px}93.333%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.01,0.99);background-position:-256px -384px}96.667%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.03,0.97);background-position:-320px -384px}}.baby_plum_anm_Attack3Loop{animation:baby_plum_anm_Attack3Loop 266.666667ms step-end infinite both }@keyframes baby_plum_anm_Attack3Loop{0.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.05,0.95);background-position:-256px -384px}12.500%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.03,0.97);background-position:-320px -384px}25.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-256px -384px}37.500%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.97,1.03);background-position:-320px -384px}50.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.95,1.05);background-position:-256px -384px}62.500%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.97,1.03);background-position:-320px -384px}75.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-256px -384px}87.500%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.03,0.97);background-position:-320px -384px}}.baby_plum_anm_Attack3BackLoop{animation:baby_plum_anm_Attack3BackLoop 266.666667ms step-end infinite both }@keyframes baby_plum_anm_Attack3BackLoop{0.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.05,0.95);background-position:-384px -384px}12.500%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.03,0.97);background-position:-448px -384px}25.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-384px -384px}37.500%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.97,1.03);background-position:-448px -384px}50.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.95,1.05);background-position:-384px -384px}62.500%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.97,1.03);background-position:-448px -384px}75.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-384px -384px}87.500%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.03,0.97);background-position:-448px -384px}}.baby_plum_anm_Attack3End{animation:baby_plum_anm_Attack3End 600.000000ms step-end infinite both }@keyframes baby_plum_anm_Attack3End{0.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.05,0.95);background-position:-128px -384px}5.556%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.03,0.97);background-position:-192px -384px}11.111%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-128px -384px}16.667%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.97,1.03);background-position:-192px -384px}22.222%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.95,1.05);background-position:-128px -384px}27.778%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.97,1.03);background-position:-192px -384px}33.333%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-128px -384px}38.889%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.03,0.97);background-position:-192px -384px}44.444%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.05,0.95);background-position:-128px -384px}50.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.06,0.94);background-position:-192px -384px}55.556%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.06,0.94);background-position:-128px -384px}61.111%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.99,1.01);background-position:-192px -384px}66.667%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.9,1.1);background-position:0px -128px}72.222%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.98,1.02);background-position:-256px -64px}77.778%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.05,0.95);background-position:0px -128px}83.333%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.02,0.98);background-position:-256px -64px}88.889%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.99,1.01);background-position:0px -128px}94.444%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-256px -64px}}.baby_plum_anm_Death{animation:baby_plum_anm_Death 1733.333333ms step-end infinite both }@keyframes baby_plum_anm_Death{0.000%{transform:translate(-32px,-32px) scale(2) translateY(-27.0px) scale(0.9,1.1);background-position:0px -384px}1.923%{transform:translate(-32px,-32px) scale(2) translateY(-31.0px) scale(1.0,1.0);background-position:-64px -384px}3.846%{transform:translate(-32px,-32px) scale(2) translateY(-34.0px) scale(1.1,0.9);background-position:0px -384px}5.769%{transform:translate(-32px,-32px) scale(2) translateY(-35.0px) scale(1.0,1.0);background-position:-64px -384px}7.692%{transform:translate(-32px,-32px) scale(2) translateY(-36.0px) scale(0.9,1.1);background-position:0px -384px}9.615%{transform:translate(-32px,-32px) scale(2) translateY(-36.0px) scale(1.0,1.0);background-position:-64px -384px}11.538%{transform:translate(-32px,-32px) scale(2) translateY(-36.0px) scale(1.1,0.9);background-position:0px -384px}13.462%{transform:translate(-32px,-32px) scale(2) translateY(-36.0px) scale(0.9,1.1);background-position:0px -384px}15.385%{transform:translate(-32px,-32px) scale(2) translateY(-30.0px) scale(0.7,1.3);background-position:-64px -384px}17.308%{transform:translate(-32px,-32px) scale(2) translateY(-20.0px) scale(0.7,1.3);background-position:-64px -384px}19.231%{transform:translate(-32px,-32px) scale(2) translate(-2.0px,0.0px) scale(1.3,0.7) translateY(-24.0px);background-position:-384px -256px}21.154%{transform:translate(-32px,-32px) scale(2) translate(2.0px,0.0px) scale(1.0,1.0) translateY(-24.0px);background-position:-384px -256px}23.077%{transform:translate(-32px,-32px) scale(2) translateY(-4.0px) scale(0.8,1.2) translateY(-24.0px);background-position:-384px -256px}25.000%{transform:translate(-32px,-32px) scale(2) translateY(-8.0px) scale(0.95,1.05) translateY(-24.0px);background-position:-384px -256px}26.923%{transform:translate(-32px,-32px) scale(2) translateY(-8.0px) scale(1.0,1.0) translateY(-24.0px);background-position:-384px -256px}28.846%{transform:translate(-32px,-32px) scale(2) translateY(-4.0px) scale(0.8,1.2) translateY(-24.0px);background-position:-384px -256px}30.769%{transform:translate(-32px,-32px) scale(2) translate(-3.0px,0.0px) scale(1.0,1.0) translateY(-24.0px);background-position:-384px -256px}32.692%{transform:translate(-32px,-32px) scale(2) translate(-3.0px,0.0px) scale(1.15,0.85) translateY(-24.0px);background-position:-384px -256px}34.615%{transform:translate(-32px,-32px) scale(2) translate(3.0px,0.0px) scale(1.08,0.92) translateY(-24.0px);background-position:-384px -256px}36.538%{transform:translate(-32px,-32px) scale(2) translate(-3.0px,0.0px) scale(1.0,1.0) translateY(-24.0px);background-position:-384px -256px}38.462%{transform:translate(-32px,-32px) scale(2) translate(3.0px,0.0px) scale(1.08,0.92) translateY(-24.0px);background-position:-384px -256px}40.385%{transform:translate(-32px,-32px) scale(2) translate(-2.0px,0.0px) scale(1.09,0.91) translateY(-24.0px);background-position:-384px -256px}42.308%{transform:translate(-32px,-32px) scale(2) translate(2.0px,0.0px) scale(1.1,0.9) translateY(-24.0px);background-position:-384px -256px}44.231%{transform:translate(-32px,-32px) scale(2) translate(-2.0px,0.0px) scale(1.11,0.89) translateY(-24.0px);background-position:-384px -256px}46.154%{transform:translate(-32px,-32px) scale(2) translate(2.0px,0.0px) scale(1.12,0.88) translateY(-24.0px);background-position:-384px -256px}48.077%{transform:translate(-32px,-32px) scale(2) translate(-1.0px,0.0px) scale(1.12,0.88) translateY(-24.0px);background-position:-384px -256px}50.000%{transform:translate(-32px,-32px) scale(2) translate(1.0px,0.0px) scale(1.13,0.87) translateY(-24.0px);background-position:-384px -256px}51.923%{transform:translate(-32px,-32px) scale(2) translate(-1.0px,0.0px) scale(1.13,0.87) translateY(-24.0px);background-position:-384px -256px}53.846%{transform:translate(-32px,-32px) scale(2) translate(1.0px,0.0px) scale(1.14,0.86) translateY(-24.0px);background-position:-384px -256px}55.769%{transform:translate(-32px,-32px) scale(2) translate(-1.0px,0.0px) scale(1.14,0.86) translateY(-24.0px);background-position:-384px -256px}57.692%{transform:translate(-32px,-32px) scale(2) translate(1.0px,0.0px) scale(1.14,0.86) translateY(-24.0px);background-position:-384px -256px}59.615%{transform:translate(-32px,-32px) scale(2) translate(-1.0px,0.0px) scale(1.15,0.85) translateY(-24.0px);background-position:-384px -256px}61.538%{transform:translate(-32px,-32px) scale(2) translate(1.0px,0.0px) scale(1.15,0.85) translateY(-24.0px);background-position:-384px -256px}63.462%{transform:translate(-32px,-32px) scale(2) translate(-1.0px,0.0px) scale(1.15,0.85) translateY(-24.0px);background-position:-384px -256px}65.385%{transform:translate(-32px,-32px) scale(2) translate(1.0px,0.0px) scale(1.15,0.85) translateY(-24.0px);background-position:-384px -256px}67.308%{transform:translate(-32px,-32px) scale(2) scale(1.15,0.85) translateY(-24.0px);background-position:-384px -256px}69.231%{transform:translate(-32px,-32px) scale(2) scale(1.15125,0.84875) translateY(-24.0px);background-position:-384px -256px}71.154%{transform:translate(-32px,-32px) scale(2) scale(1.1525,0.8475) translateY(-24.0px);background-position:-384px -256px}73.077%{transform:translate(-32px,-32px) scale(2) scale(1.15375,0.84625) translateY(-24.0px);background-position:-384px -256px}75.000%{transform:translate(-32px,-32px) scale(2) scale(1.155,0.845) translateY(-24.0px);background-position:-384px -256px}76.923%{transform:translate(-32px,-32px) scale(2) scale(1.15625,0.84375) translateY(-24.0px);background-position:-384px -256px}78.846%{transform:translate(-32px,-32px) scale(2) scale(1.1575,0.8425) translateY(-24.0px);background-position:-384px -256px}80.769%{transform:translate(-32px,-32px) scale(2) scale(1.15875,0.84125) translateY(-24.0px);background-position:-384px -256px}82.692%{transform:translate(-32px,-32px) scale(2) scale(1.16,0.84) translateY(-24.0px);background-position:-384px -256px}84.615%{transform:translate(-32px,-32px) scale(2) scale(0.98,1.02) translateY(-24.0px);background-position:-384px -256px}86.538%{transform:translate(-32px,-32px) scale(2) scale(0.8,1.2) translateY(-24.0px);background-position:-384px -256px}88.462%{transform:translate(-32px,-32px) scale(2) scale(0.775,1.225) translateY(-24.0px);background-position:-384px -256px}90.385%{transform:translate(-32px,-32px) scale(2) scale(0.75,1.25) translateY(-24.0px);background-position:-384px -256px}92.308%{transform:translate(-32px,-32px) scale(2) scale(1.375,0.875) translateY(-24.0px);background-position:-384px -256px}94.231%{transform:translate(-32px,-32px) scale(2) scale(2.0,0.5) translateY(-24.0px);background-position:-384px -256px}96.154%{transform:translate(-32px,-32px) scale(2) scale(2.5,0.35) translateY(-24.0px);background-position:-384px -256px}98.077%{transform:translate(-32px,-32px) scale(2) scale(3.0,0.2) translateY(-24.0px);background-position:-384px -256px}}.baby_plum_anm_Descend{animation:baby_plum_anm_Descend 1233.333333ms step-end infinite both }@keyframes baby_plum_anm_Descend{0.000%{transform:translate(-32px,-32px) scale(2) translateY(-205.0px) scale(1.0,1.0) translateY(-22.0px);background-position:-128px 0px}2.703%{transform:translate(-32px,-32px) scale(2) translateY(-201.0px) scale(0.95,1.05) translateY(-22.0px);background-position:-192px 0px}5.405%{transform:translate(-32px,-32px) scale(2) translateY(-195.0px) scale(0.91,1.09) translateY(-22.0px);background-position:-128px 0px}8.108%{transform:translate(-32px,-32px) scale(2) translateY(-188.0px) scale(0.87,1.13) translateY(-22.0px);background-position:-192px 0px}10.811%{transform:translate(-32px,-32px) scale(2) translateY(-180.0px) scale(0.83,1.17) translateY(-22.0px);background-position:-128px 0px}13.514%{transform:translate(-32px,-32px) scale(2) translateY(-170.0px) scale(0.81,1.19) translateY(-22.0px);background-position:-192px 0px}16.216%{transform:translate(-32px,-32px) scale(2) translateY(-159.0px) scale(0.79,1.21) translateY(-22.0px);background-position:-128px 0px}18.919%{transform:translate(-32px,-32px) scale(2) translateY(-146.0px) scale(0.77,1.23) translateY(-22.0px);background-position:-192px 0px}21.622%{transform:translate(-32px,-32px) scale(2) translateY(-132.0px) scale(0.76,1.24) translateY(-22.0px);background-position:-128px 0px}24.324%{transform:translate(-32px,-32px) scale(2) translateY(-115.0px) scale(0.75,1.25) translateY(-22.0px);background-position:-192px 0px}27.027%{transform:translate(-32px,-32px) scale(2) translateY(-97.0px) scale(0.75,1.25) translateY(-22.0px);background-position:-128px 0px}29.730%{transform:translate(-32px,-32px) scale(2) translateY(-80.0px) scale(0.75,1.25) translateY(-22.0px);background-position:-192px 0px}32.432%{transform:translate(-32px,-32px) scale(2) translateY(-66.0px) scale(0.75,1.25) translateY(-22.0px);background-position:-128px 0px}35.135%{transform:translate(-32px,-32px) scale(2) translateY(-53.0px) scale(0.75,1.25) translateY(-22.0px);background-position:-192px 0px}37.838%{transform:translate(-32px,-32px) scale(2) translateY(-42.0px) scale(0.75,1.25) translateY(-22.0px);background-position:-128px 0px}40.541%{transform:translate(-32px,-32px) scale(2) translateY(-32.0px) scale(0.75,1.25) translateY(-22.0px);background-position:-192px 0px}43.243%{transform:translate(-32px,-32px) scale(2) translateY(-24.0px) scale(0.75,1.25) translateY(-22.0px);background-position:-128px 0px}45.946%{transform:translate(-32px,-32px) scale(2) translateY(-17.0px) scale(0.75,1.25) translateY(-22.0px);background-position:-192px 0px}48.649%{transform:translate(-32px,-32px) scale(2) translateY(-11.0px) scale(0.75,1.25) translateY(-22.0px);background-position:-128px 0px}51.351%{transform:translate(-32px,-32px) scale(2) translateY(-7.0px) scale(0.75,1.25) translateY(-22.0px);background-position:-192px 0px}54.054%{transform:translate(-32px,-32px) scale(2) translateY(-3.0px) scale(0.75,1.25) translateY(-22.0px);background-position:-256px 0px}56.757%{transform:translate(-32px,-32px) scale(2) translateY(-1.0px) scale(0.75,1.25) translateY(-22.0px);background-position:-320px 0px}59.459%{transform:translate(-32px,-32px) scale(2) translateY(1.0px) scale(0.75,1.25) translateY(-22.0px);background-position:-256px 0px}62.162%{transform:translate(-32px,-32px) scale(2) translateY(2.0px) scale(0.85,1.15) translateY(-22.0px);background-position:-320px 0px}64.865%{transform:translate(-32px,-32px) scale(2) translateY(2.0px) scale(0.95,1.05) translateY(-22.0px);background-position:-256px 0px}67.568%{transform:translate(-32px,-32px) scale(2) translateY(2.0px) scale(1.0,1.0) translateY(-22.0px);background-position:-320px 0px}70.270%{transform:translate(-32px,-32px) scale(2) translateY(1.0px) scale(1.03,0.97) translateY(-22.0px);background-position:-256px 0px}72.973%{transform:translate(-32px,-32px) scale(2) scale(1.06,0.94) translateY(-22.0px);background-position:-320px 0px}75.676%{transform:translate(-32px,-32px) scale(2) translateY(-1.0px) scale(1.09,0.91) translateY(-22.0px);background-position:-256px 0px}78.378%{transform:translate(-32px,-32px) scale(2) translateY(-2.0px) scale(1.1,0.9) translateY(-22.0px);background-position:-448px -128px}81.081%{transform:translate(-32px,-32px) scale(2) translateY(-3.0px) scale(1.11,0.89) translateY(-22.0px);background-position:-384px -128px}83.784%{transform:translate(-32px,-32px) scale(2) translateY(-5.0px) scale(1.07,0.93) translateY(-22.0px);background-position:-256px -64px}86.486%{transform:translate(-32px,-32px) scale(2) translateY(-6.0px) scale(1.03,0.97) translateY(-22.0px);background-position:0px -128px}89.189%{transform:translate(-32px,-32px) scale(2) translateY(-6.0px) scale(0.97,1.03) translateY(-22.0px);background-position:-256px -64px}91.892%{transform:translate(-32px,-32px) scale(2) translateY(-6.0px) scale(0.95,1.05) translateY(-22.0px);background-position:0px -128px}94.595%{transform:translate(-32px,-32px) scale(2) translateY(-6.0px) scale(0.98,1.02) translateY(-22.0px);background-position:-256px -64px}97.297%{transform:translate(-32px,-32px) scale(2) translateY(-6.0px) scale(1.0,1.0) translateY(-22.0px);background-position:0px -128px}}.baby_plum_anm_Leave{animation:baby_plum_anm_Leave 1933.333333ms step-end infinite both }@keyframes baby_plum_anm_Leave{0.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-256px -64px}1.724%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.05,0.95);background-position:0px -128px}3.448%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.1,0.9);background-position:-256px -64px}5.172%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.13,0.87);background-position:0px -128px}6.897%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.15,0.85);background-position:-448px -128px}8.621%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-384px -128px}10.345%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.9,1.1);background-position:-384px -64px}12.069%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.98,1.02);background-position:-448px -64px}13.793%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.02,0.98);background-position:-384px -64px}15.517%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.05,0.95);background-position:-384px 0px}17.241%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.02,0.98);background-position:-448px 0px}18.966%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-384px 0px}20.690%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.9,1.1);background-position:-384px -64px}22.414%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.98,1.02);background-position:-448px -64px}24.138%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.02,0.98);background-position:-384px -64px}25.862%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.05,0.95);background-position:-384px 0px}27.586%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.02,0.98);background-position:-448px 0px}29.310%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-384px 0px}31.034%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-448px 0px}32.759%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-384px 0px}34.483%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-448px 0px}36.207%{transform:translate(-32px,-32px) scale(2) translateY(-29.0px) scale(1.0,1.0);background-position:-384px 0px}37.931%{transform:translate(-32px,-32px) scale(2) translateY(-30.0px) scale(0.9,1.1);background-position:0px -256px}39.655%{transform:translate(-32px,-32px) scale(2) translateY(-29.0px) scale(0.85,1.15);background-position:-64px -256px}41.379%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-128px -256px}43.103%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.05,0.95);background-position:-448px -192px}44.828%{transform:translate(-32px,-32px) scale(2) translateY(-27.0px) scale(1.1,0.9);background-position:-128px -256px}46.552%{transform:translate(-32px,-32px) scale(2) translateY(-26.0px) scale(1.15,0.85);background-position:-448px -192px}48.276%{transform:translate(-32px,-32px) scale(2) translateY(-25.0px) scale(1.1,0.9);background-position:-128px -256px}50.000%{transform:translate(-32px,-32px) scale(2) translateY(-24.0px) scale(1.03,0.97);background-position:-448px -192px}51.724%{transform:translate(-32px,-32px) scale(2) translateY(-23.0px) scale(1.0,1.0);background-position:-128px -256px}53.448%{transform:translate(-32px,-32px) scale(2) translateY(-21.0px) scale(0.98,1.02);background-position:-448px -192px}55.172%{transform:translate(-32px,-32px) scale(2) translateY(-20.0px) scale(0.96,1.04);background-position:-128px -256px}56.897%{transform:translate(-32px,-32px) scale(2) translateY(-20.0px) scale(0.98,1.02);background-position:-448px -192px}58.621%{transform:translate(-32px,-32px) scale(2) translateY(-20.0px) scale(1.0,0.98);background-position:-128px -256px}60.345%{transform:translate(-32px,-32px) scale(2) translateY(-20.0px) scale(1.0,1.0);background-position:-448px -192px}62.069%{transform:translate(-32px,-32px) scale(2) translateY(-21.0px) scale(1.02,0.98);background-position:-128px -256px}63.793%{transform:translate(-32px,-32px) scale(2) translateY(-23.0px) scale(1.0,1.0);background-position:-448px -192px}65.517%{transform:translate(-32px,-32px) scale(2) translateY(-25.0px) scale(1.02,0.98);background-position:-128px -256px}67.241%{transform:translate(-32px,-32px) scale(2) translateY(-29.0px) scale(1.0,1.0);background-position:-448px -192px}68.966%{transform:translate(-32px,-32px) scale(2) translateY(-33.0px) scale(1.02,0.98);background-position:-128px -256px}70.690%{transform:translate(-32px,-32px) scale(2) translateY(-39.0px) scale(1.0,1.0);background-position:-448px -192px}72.414%{transform:translate(-32px,-32px) scale(2) translateY(-46.0px) scale(1.02,0.98);background-position:-128px -256px}74.138%{transform:translate(-32px,-32px) scale(2) translateY(-54.0px) scale(1.0,1.0);background-position:-448px -192px}75.862%{transform:translate(-32px,-32px) scale(2) translateY(-64.0px) scale(1.02,0.98);background-position:-128px -256px}77.586%{transform:translate(-32px,-32px) scale(2) translateY(-75.0px) scale(1.0,1.0);background-position:-448px -192px}79.310%{transform:translate(-32px,-32px) scale(2) translateY(-88.0px) scale(1.02,0.98);background-position:-128px -256px}81.034%{transform:translate(-32px,-32px) scale(2) translateY(-102.0px) scale(1.0,1.0);background-position:-448px -192px}82.759%{transform:translate(-32px,-32px) scale(2) translateY(-119.0px) scale(1.02,0.98);background-position:-128px -256px}84.483%{transform:translate(-32px,-32px) scale(2) translateY(-137.0px) scale(1.0,1.0);background-position:-448px -192px}86.207%{transform:translate(-32px,-32px) scale(2) translateY(-154.0px) scale(1.02,0.98);background-position:-128px -256px}87.931%{transform:translate(-32px,-32px) scale(2) translateY(-168.0px) scale(1.0,1.0);background-position:-448px -192px}89.655%{transform:translate(-32px,-32px) scale(2) translateY(-181.0px) scale(1.02,0.98);background-position:-128px -256px}91.379%{transform:translate(-32px,-32px) scale(2) translateY(-192.0px) scale(1.0,1.0);background-position:-448px -192px}93.103%{transform:translate(-32px,-32px) scale(2) translateY(-202.0px) scale(1.02,0.98);background-position:-128px -256px}94.828%{transform:translate(-32px,-32px) scale(2) translateY(-210.0px) scale(1.0,1.0);background-position:-448px -192px}96.552%{transform:translate(-32px,-32px) scale(2) translateY(-217.0px) scale(1.02,0.98);background-position:-128px -256px}98.276%{transform:translate(-32px,-32px) scale(2) translateY(-223.0px) scale(1.0,1.0);background-position:-448px -192px}}.baby_plum_anm_HelloLoop{animation:baby_plum_anm_HelloLoop 400.000000ms step-end infinite both }@keyframes baby_plum_anm_HelloLoop{0.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.9,1.1);background-position:-384px -64px}8.333%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.98,1.02);background-position:-448px -64px}16.667%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.02,0.98);background-position:-384px -64px}25.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.05,0.95);background-position:-384px 0px}33.333%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.02,0.98);background-position:-448px 0px}41.667%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-384px 0px}50.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.9,1.1);background-position:-384px -64px}58.333%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.98,1.02);background-position:-448px -64px}66.667%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.02,0.98);background-position:-384px -64px}75.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.05,0.95);background-position:-384px 0px}83.333%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.02,0.98);background-position:-448px 0px}91.667%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-384px 0px}}.baby_plum_anm_HelloStart{animation:baby_plum_anm_HelloStart 333.333333ms step-end infinite both }@keyframes baby_plum_anm_HelloStart{0.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-256px -64px}10.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.05,0.95);background-position:0px -128px}20.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.1,0.9);background-position:-256px -64px}30.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.13,0.87);background-position:0px -128px}40.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.15,0.85);background-position:-448px -128px}50.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-384px -128px}60.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.9,1.1);background-position:-384px -64px}70.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(0.98,1.02);background-position:-448px -64px}80.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.02,0.98);background-position:-384px -64px}90.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.05,0.95);background-position:-384px 0px}}.baby_plum_anm_HelloEnd{animation:baby_plum_anm_HelloEnd 266.666667ms step-end infinite both }@keyframes baby_plum_anm_HelloEnd{0.000%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-384px 0px}12.500%{transform:translate(-32px,-32px) scale(2) translateY(-28.0px) scale(1.0,1.0);background-position:-448px 0px}25.000%{transform:translate(-32px,-32px) scale(2) translateY(-29.0px) scale(1.0,1.0);background-position:-384px 0px}37.500%{transform:translate(-32px,-32px) scale(2) translateY(-30.0px) scale(0.9,1.1);background-position:0px -128px}50.000%{transform:translate(-32px,-32px) scale(2) translateY(-29.0px) scale(0.85,1.15);background-position:-256px -64px}62.500%{transform:translate(-32px,-32px) scale(2) translateY(-29.0px) scale(0.9,1.1);background-position:-256px -64px}75.000%{transform:translate(-32px,-32px) scale(2) translateY(-29.0px) scale(0.95,1.05);background-position:-256px -64px}87.500%{transform:translate(-32px,-32px) scale(2) translateY(-48.0px) scale(1.0,1.0) translateY(20.0px);background-position:-256px -64px}}"] }, null, null);; mw.loader.implement("mediawiki.page.ready@1tt0o", {
       main: "ready.js", files: {
              "ready.js": function (require, module, exports) {
                     var checkboxShift = require('./checkboxShift.js'); var config = require('./config.json'); if (mw.config.get('wgBreakFrames')) { if (window.top !== window.self) { window.top.location.href = location.href; } } mw.hook('wikipage.content').add(function ($content) { var $sortable, $collapsible, dependencies = []; if (config.collapsible) { $collapsible = $content.find('.mw-collapsible'); if ($collapsible.length) { dependencies.push('jquery.makeCollapsible'); } } if (config.sortable) { $sortable = $content.find('table.sortable'); if ($sortable.length) { dependencies.push('jquery.tablesorter'); } } if (dependencies.length) { mw.loader.using(dependencies).then(function () { if ($sortable && $sortable.length) { $sortable.tablesorter(); } if ($collapsible && $collapsible.length) { $collapsible.makeCollapsible(); } }); } checkboxShift($content.find('input[type="checkbox"]:not(.noshiftselect)')); }); $(function () {
                            var $nodes; $('[accesskey]').
                                   updateTooltipAccessKeys(); var node = document.querySelector('.mw-indicators'); if (node && node.children.length) { mw.hook('wikipage.indicators').fire($(node.children)); } var $content = $('#mw-content-text'); if ($content.length) { mw.hook('wikipage.content').fire($content); } $nodes = $('.catlinks[data-mw="interface"]'); if ($nodes.length) { mw.hook('wikipage.categories').fire($nodes); } $nodes = $('table.diff[data-mw="interface"]'); if ($nodes.length) { mw.hook('wikipage.diff').fire($nodes.eq(0)); } $('#t-print a').on('click', function (e) { window.print(); e.preventDefault(); }); $(config.selectorLogoutLink).on('click', function (e) { var api = new mw.Api(), url = this.href; mw.notify(mw.message('logging-out-notify'), { tag: 'logout', autoHide: false }); api.postWithToken('csrf', { action: 'logout' }).then(function () { location.href = url; }, function (err, data) { mw.notify(api.getErrorMessage(data), { type: 'error', tag: 'logout', autoHide: false }); }); e.preventDefault(); });
                     }); function isSearchInput(element) {
                            return element.id === 'searchInput' ||
                                   /(^|\s)mw-searchInput($|\s)/.test(element.className);
                     } function loadSearchModule(moduleName) { var shouldTestSearch = !!(moduleName === 'mediawiki.searchSuggest' && mw.config.get('skin') === 'vector' && window.performance && performance.mark && performance.measure && performance.getEntriesByName), loadStartMark = 'mwVectorLegacySearchLoadStart', loadEndMark = 'mwVectorLegacySearchLoadEnd'; function requestSearchModule() { if (shouldTestSearch) { performance.mark(loadStartMark); } mw.loader.using(moduleName, function () { if (shouldTestSearch && performance.getEntriesByName(loadStartMark).length) { performance.mark(loadEndMark); performance.measure('mwVectorLegacySearchLoadStartToLoadEnd', loadStartMark, loadEndMark); } }); } function eventListener(e) { if (isSearchInput(e.target)) { requestSearchModule(); document.removeEventListener('focusin', eventListener); } } if (document.activeElement && isSearchInput(document.activeElement)) { requestSearchModule(); return; } document.addEventListener('focusin', eventListener); } if (config.search) {
                            loadSearchModule
                                   ('mediawiki.searchSuggest');
                     } module.exports = { loadSearchModule: loadSearchModule, checkboxHack: require('./checkboxHack.js') };
              }, "checkboxShift.js": function (require, module, exports) { module.exports = function ($box) { var prev; $box.on('click', function (e) { if (prev && e.shiftKey) { $box.slice(Math.min($box.index(prev), $box.index(e.target)), Math.max($box.index(prev), $box.index(e.target)) + 1).filter(function () { return !this.disabled; }).prop('checked', e.target.checked); } prev = e.target; }); }; }, "checkboxHack.js": function (require, module, exports) {
                     function updateAriaExpanded(checkbox, button) { if (button) { mw.log.warn('[1.38] The button parameter in updateAriaExpanded is deprecated, aria-expanded will be applied to the checkbox going forward. View the updated checkbox hack documentation for more details.'); button.setAttribute('aria-expanded', checkbox.checked.toString()); return; } checkbox.setAttribute('aria-expanded', checkbox.checked.toString()); } function setCheckedState(checkbox, checked) {
                            var e; checkbox.checked = checked; if (
                                   typeof Event === 'function') { e = new Event('input', { bubbles: true, composed: true }); } else { e = document.createEvent('CustomEvent'); if (!e) { return; } e.initCustomEvent('input', true, false, false); } checkbox.dispatchEvent(e);
                     } function containsEventTarget(checkbox, button, target, event) { return event.target instanceof Node && (checkbox.contains(event.target) || button.contains(event.target) || target.contains(event.target)); } function dismissIfExternalEventTarget(checkbox, button, target, event) { if (checkbox.checked && !containsEventTarget(checkbox, button, target, event)) { setCheckedState(checkbox, false); } } function bindUpdateAriaExpandedOnInput(checkbox, button) {
                            if (button) { mw.log.warn('[1.38] The button parameter in bindUpdateAriaExpandedOnInput is deprecated, aria-expanded will be applied to the checkbox going forward. View the updated checkbox hack documentation for more details.'); } var listener = updateAriaExpanded.bind(undefined, checkbox, button); checkbox.addEventListener('input', listener); return function () {
                                   checkbox.
                                          removeEventListener('input', listener);
                            };
                     } function bindToggleOnClick(checkbox, button) { function listener(event) { event.preventDefault(); setCheckedState(checkbox, !checkbox.checked); } button.addEventListener('click', listener, true); return function () { button.removeEventListener('click', listener, true); }; } function bindToggleOnSpaceEnter(checkbox, button) { mw.log.warn('[1.38] bindToggleOnSpaceEnter is deprecated. Use `bindToggleOnEnter` instead.'); function isEnterOrSpace(event) { return event.key === ' ' || event.key === 'Enter'; } function onKeydown(event) { if (!isEnterOrSpace(event)) { return; } event.preventDefault(); } function onKeyup(event) { if (!isEnterOrSpace(event)) { return; } button.click(); } button.addEventListener('keydown', onKeydown); button.addEventListener('keyup', onKeyup); return function () { button.removeEventListener('keydown', onKeydown); button.removeEventListener('keyup', onKeyup); }; } function bindToggleOnEnter(checkbox) {
                            function onKeyup(event) {
                                   if (event.key !== 'Enter') { return; } setCheckedState(checkbox, !checkbox
                                          .checked);
                            } checkbox.addEventListener('keyup', onKeyup); return function () { checkbox.removeEventListener('keyup', onKeyup); };
                     } function bindDismissOnClickOutside(window, checkbox, button, target) { var listener = dismissIfExternalEventTarget.bind(undefined, checkbox, button, target); window.addEventListener('click', listener, true); return function () { window.removeEventListener('click', listener, true); }; } function bindDismissOnFocusLoss(window, checkbox, button, target) { var listener = dismissIfExternalEventTarget.bind(undefined, checkbox, button, target); window.addEventListener('focusin', listener, true); return function () { window.removeEventListener('focusin', listener, true); }; } function bind(window, checkbox, button, target) { var cleanups = [bindUpdateAriaExpandedOnInput(checkbox), bindToggleOnClick(checkbox, button), bindToggleOnEnter(checkbox), bindDismissOnClickOutside(window, checkbox, button, target), bindDismissOnFocusLoss(window, checkbox, button, target)]; return function () { cleanups.forEach(function (cleanup) { cleanup(); }); }; }
                     module.exports = { updateAriaExpanded: updateAriaExpanded, bindUpdateAriaExpandedOnInput: bindUpdateAriaExpandedOnInput, bindToggleOnClick: bindToggleOnClick, bindToggleOnSpaceEnter: bindToggleOnSpaceEnter, bindToggleOnEnter: bindToggleOnEnter, bindDismissOnClickOutside: bindDismissOnClickOutside, bindDismissOnFocusLoss: bindDismissOnFocusLoss, bind: bind };
              }, "config.json": { "search": true, "collapsible": true, "sortable": true, "selectorLogoutLink": "#pt-logout a[data-mw=\"interface\"]" }
       }
}, {}, { "logging-out-notify": "您正在退出，请稍候。" }, null);; mw.loader.implement("mediawiki.api@1n2ak", function ($, jQuery, require, module) {
       (function () {
              var defaultOptions; mw.Api = function (options) { var defaults = $.extend({}, options), setsUrl = options && options.ajax && options.ajax.url !== undefined; defaults.parameters = $.extend({}, defaultOptions.parameters, defaults.parameters); defaults.ajax = $.extend({}, defaultOptions.ajax, defaults.ajax); if (setsUrl) { defaults.ajax.url = String(defaults.ajax.url); } if (defaults.useUS === undefined) { defaults.useUS = !setsUrl; } this.defaults = defaults; this.requests = []; }; defaultOptions = { parameters: { action: 'query', format: 'json' }, ajax: { url: mw.util.wikiScript('api'), timeout: 30 * 1000, dataType: 'json' } }; var promises = {}; function mapLegacyToken(action) { var csrfActions = ['edit', 'delete', 'protect', 'move', 'block', 'unblock', 'email', 'import', 'options']; if (csrfActions.indexOf(action) !== -1) { mw.track('mw.deprecate', 'apitoken_' + action); mw.log.warn('Use of the "' + action + '" token is deprecated. Use "csrf" instead.'); return 'csrf'; } return action; } promises[
                     defaultOptions.ajax.url] = {}; $.each(mw.user.tokens.get(), function (key, value) { promises[defaultOptions.ajax.url][key] = $.Deferred().resolve(value).promise({ abort: function () { } }); }); mw.Api.prototype = {
                            abort: function () { this.requests.forEach(function (request) { if (request) { request.abort(); } }); }, get: function (parameters, ajaxOptions) { ajaxOptions = ajaxOptions || {}; ajaxOptions.type = 'GET'; return this.ajax(parameters, ajaxOptions); }, post: function (parameters, ajaxOptions) { ajaxOptions = ajaxOptions || {}; ajaxOptions.type = 'POST'; return this.ajax(parameters, ajaxOptions); }, preprocessParameters: function (parameters, useUS) { var key; for (key in parameters) { if (Array.isArray(parameters[key])) { if (!useUS || parameters[key].join('').indexOf('|') === -1) { parameters[key] = parameters[key].join('|'); } else { parameters[key] = '\x1f' + parameters[key].join('\x1f'); } } else if (parameters[key] === false || parameters[key] === undefined) { delete parameters[key]; } } }, ajax: function (parameters, ajaxOptions) {
                                   var token, requestIndex, api = this, apiDeferred = $.
                                          Deferred(), xhr, key, formData; parameters = $.extend({}, this.defaults.parameters, parameters); ajaxOptions = $.extend({}, this.defaults.ajax, ajaxOptions); if (parameters.token) { token = parameters.token; delete parameters.token; } this.preprocessParameters(parameters, this.defaults.useUS); if (ajaxOptions.type === 'POST' && window.FormData && ajaxOptions.contentType === 'multipart/form-data') { formData = new FormData(); for (key in parameters) { formData.append(key, parameters[key]); } if (token) { formData.append('token', token); } ajaxOptions.data = formData; ajaxOptions.processData = false; ajaxOptions.contentType = false; } else { ajaxOptions.data = $.param(parameters); if (token) { ajaxOptions.data += '&token=' + encodeURIComponent(token); } if (ajaxOptions.contentType === 'multipart/form-data') { delete ajaxOptions.contentType; } } xhr = $.ajax(ajaxOptions).fail(function (jqXHR, textStatus, exception) { apiDeferred.reject('http', { xhr: jqXHR, textStatus: textStatus, exception: exception }); }).done(function (result, textStatus, jqXHR) {
                                                 var code; if (result === undefined || result
                                                        === null || result === '') { apiDeferred.reject('ok-but-empty', 'OK response but empty result (check HTTP headers?)', result, jqXHR); } else if (result.error) { code = result.error.code === undefined ? 'unknown' : result.error.code; apiDeferred.reject(code, result, result, jqXHR); } else if (result.errors) { code = result.errors[0].code === undefined ? 'unknown' : result.errors[0].code; apiDeferred.reject(code, result, result, jqXHR); } else { apiDeferred.resolve(result, jqXHR); }
                                          }); requestIndex = this.requests.length; this.requests.push(xhr); xhr.always(function () { api.requests[requestIndex] = null; }); return apiDeferred.promise({ abort: xhr.abort }).fail(function (code, details) { if (!(code === 'http' && details && details.textStatus === 'abort')) { mw.log('mw.Api error: ', code, details); } });
                            }, postWithToken: function (tokenType, params, ajaxOptions) {
                                   var api = this, assertParams = { assert: params.assert, assertuser: params.assertuser }, abortedPromise = $.Deferred().reject('http', { textStatus: 'abort', exception: 'abort' }).promise(), abortable, aborted; return api.getToken(
                                          tokenType, assertParams).then(function (token) { params.token = token; if (aborted) { return abortedPromise; } return (abortable = api.post(params, ajaxOptions)).catch(function (code) { if (code === 'badtoken') { api.badToken(tokenType); params.token = undefined; abortable = null; return api.getToken(tokenType, assertParams).then(function (t) { params.token = t; if (aborted) { return abortedPromise; } return (abortable = api.post(params, ajaxOptions)); }); } return $.Deferred().rejectWith(this, arguments); }); }).promise({ abort: function () { if (abortable) { abortable.abort(); } else { aborted = true; } } });
                            }, getToken: function (type, additionalParams) {
                                   var apiPromise, promiseGroup, d, reject; type = mapLegacyToken(type); promiseGroup = promises[this.defaults.ajax.url]; d = promiseGroup && promiseGroup[type + 'Token']; if (typeof additionalParams === 'string') { additionalParams = { assert: additionalParams }; } if (!promiseGroup) { promiseGroup = promises[this.defaults.ajax.url] = {}; } if (!d) {
                                          apiPromise = this.get($.extend({ action: 'query', meta: 'tokens', type: type }, additionalParams)); reject =
                                                 function () { delete promiseGroup[type + 'Token']; return $.Deferred().rejectWith(this, arguments); }; d = apiPromise.then(function (res) { if (!res.query) { return reject('query-missing', res); } if (!res.query.tokens[type + 'token']) { return $.Deferred().reject('token-missing', res); } return res.query.tokens[type + 'token']; }, reject).promise({ abort: apiPromise.abort }); promiseGroup[type + 'Token'] = d;
                                   } return d;
                            }, badToken: function (type) { var promiseGroup = promises[this.defaults.ajax.url]; type = mapLegacyToken(type); if (promiseGroup) { delete promiseGroup[type + 'Token']; } }, getErrorMessage: function (data) {
                                   if (data === undefined || data === null || data === '' || data === 'OK response but empty result (check HTTP headers?)') { return $('<div>').append(mw.message('api-clientside-error-invalidresponse').parseDom()); } else if (data.xhr) {
                                          if (data.textStatus === 'timeout') { return $('<div>').append(mw.message('api-clientside-error-timeout').parseDom()); } else if (data.textStatus === 'abort') {
                                                 return $('<div>').append(mw.message('api-clientside-error-aborted').
                                                        parseDom());
                                          } else if (data.textStatus === 'parsererror') { return $('<div>').append(mw.message('api-clientside-error-invalidresponse').parseDom()); } else if (data.xhr.status) { return $('<div>').append(mw.message('api-clientside-error-http', data.xhr.status).parseDom()); } else { return $('<div>').append(mw.message('api-clientside-error-noconnect').parseDom()); }
                                   } else if (data.error) { return $('<div>').text(data.error.info); } else if (data.errors) { return $(data.errors.map(function (err) { var $node = $('<div>').html(err['*'] || err.html); return $node[0]; })); } else { mw.log.warn('mw.Api#getErrorMessage could not handle the response:', data); return $('<div>').append(mw.message('api-clientside-error-invalidresponse').parseDom()); }
                            }
                     };
       }()); (function () {
              var defaultOptions = { ajax: { url: mw.util.wikiScript('rest'), timeout: 30 * 1000 } }; function objectKeysToLowerCase(headers) { return Object.keys(headers || {}).reduce(function (updatedHeaders, key) { updatedHeaders[key.toLowerCase()] = headers[key]; return updatedHeaders; }, {}); } mw.Rest =
                     function (options) { var defaults = $.extend({}, options); defaults.ajax = $.extend({}, defaultOptions.ajax, defaults.ajax); this.url = defaults.ajax.url; delete defaults.ajax.url; this.defaults = defaults; this.requests = []; }; mw.Rest.prototype = {
                            abort: function () { this.requests.forEach(function (request) { if (request) { request.abort(); } }); }, get: function (path, query, headers) { return this.ajax(path, { type: 'GET', data: query, headers: headers || {} }); }, post: function (path, body, headers) { headers = objectKeysToLowerCase(headers); return this.ajax(path, { type: 'POST', headers: $.extend(headers, { 'content-type': 'application/json' }), data: JSON.stringify(body), dataType: 'json' }); }, ajax: function (path, ajaxOptions) {
                                   var self = this, apiDeferred = $.Deferred(), xhr, requestIndex; ajaxOptions = $.extend({}, this.defaults.ajax, ajaxOptions); ajaxOptions.url = this.url + path; xhr = $.ajax(ajaxOptions); requestIndex = this.requests.length; this.requests.push(xhr); xhr.always(function () { self.requests[requestIndex] = null; }); xhr.then(function (result, textStatus, jqXHR) {
                                          apiDeferred.resolve(result, jqXHR);
                                   }, function (jqXHR, textStatus, exception) { apiDeferred.reject('http', { xhr: jqXHR, textStatus: textStatus, exception: exception }); }); return apiDeferred.promise({ abort: xhr.abort });
                            }
                     };
       }()); (function () {
              $.extend(mw.Api.prototype, {
                     isCategory: function (title) { var apiPromise = this.get({ formatversion: 2, prop: 'categoryinfo', titles: [String(title)] }); return apiPromise.then(function (data) { return !!(data.query && data.query.pages && data.query.pages[0].categoryinfo); }).promise({ abort: apiPromise.abort }); }, getCategoriesByPrefix: function (prefix) { var apiPromise = this.get({ formatversion: 2, list: 'allpages', apprefix: prefix, apnamespace: mw.config.get('wgNamespaceIds').category }); return apiPromise.then(function (data) { return data.query.allpages.map(function (category) { return new mw.Title(category.title).getMainText(); }); }).promise({ abort: apiPromise.abort }); }, getCategories: function (title) {
                            var apiPromise = this.get({ formatversion: 2, prop: 'categories', titles: [String(title)] }); return apiPromise.then(
                                   function (data) { var page; if (!data.query || !data.query.pages) { return false; } page = data.query.pages[0]; if (!page.categories) { return false; } return page.categories.map(function (cat) { return new mw.Title(cat.title); }); }).promise({ abort: apiPromise.abort });
                     }
              });
       }()); (function () {
              $.extend(mw.Api.prototype, {
                     postWithEditToken: function (params, ajaxOptions) { return this.postWithToken('csrf', params, ajaxOptions); }, getEditToken: function () { return this.getToken('csrf'); }, create: function (title, params, content) { return this.postWithEditToken($.extend(this.assertCurrentUser({ action: 'edit', title: String(title), text: content, formatversion: '2', createonly: true }), params)).then(function (data) { return data.edit; }); }, edit: function (title, transform) {
                            var basetimestamp, curtimestamp, api = this; title = String(title); return api.get({ action: 'query', prop: 'revisions', rvprop: ['content', 'timestamp'], titles: [title], formatversion: '2', curtimestamp: true }).then(function (data) {
                                   var page, revision; if (!data.query || !data.query.pages) {
                                          return $.Deferred()
                                                 .reject('unknown');
                                   } page = data.query.pages[0]; if (!page || page.invalid) { return $.Deferred().reject('invalidtitle'); } if (page.missing) { return $.Deferred().reject('nocreate-missing'); } revision = page.revisions[0]; basetimestamp = revision.timestamp; curtimestamp = data.curtimestamp; return transform({ timestamp: revision.timestamp, content: revision.content });
                            }).then(function (params) { var editParams = typeof params === 'object' ? params : { text: String(params) }; return api.postWithEditToken($.extend({ action: 'edit', title: title, formatversion: '2', assert: mw.config.get('wgUserName') ? 'user' : undefined, basetimestamp: basetimestamp, starttimestamp: curtimestamp, nocreate: true }, editParams)); }).then(function (data) { return data.edit; });
                     }, newSection: function (title, header, message, additionalParams) { return this.postWithEditToken($.extend({ action: 'edit', section: 'new', title: String(title), summary: header, text: message }, additionalParams)); }
              });
       }()); (function () {
              'use strict'; $.extend(mw.Api.prototype, {
                     login: function (username, password) {
                            var params
                            , apiPromise, innerPromise, api = this; params = { action: 'login', lgname: username, lgpassword: password }; apiPromise = api.post(params); return apiPromise.then(function (data) { params.lgtoken = data.login.token; innerPromise = api.post(params).then(function (response) { var code; if (response.login.result !== 'Success') { code = response.error && response.error.code || 'unknown'; return $.Deferred().reject(code, response); } return response; }); return innerPromise; }).promise({ abort: function () { apiPromise.abort(); if (innerPromise) { innerPromise.abort(); } } });
                     }
              });
       }()); (function () {
              'use strict'; $.extend(mw.Api.prototype, {
                     getMessages: function (messages, options) {
                            var that = this; options = options || {}; messages = Array.isArray(messages) ? messages : [messages]; return this.get($.extend({ action: 'query', meta: 'allmessages', ammessages: messages.slice(0, 50), amlang: mw.config.get('wgUserLanguage'), formatversion: 2 }, options)).then(function (data) {
                                   var result = {}; data.query.allmessages.forEach(function (obj) { if (!obj.missing) { result[obj.name] = obj.content; } }); if (
                                          messages.length <= 50) { return result; } return that.getMessages(messages.slice(50), options).then(function (innerResult) { return $.extend(result, innerResult); });
                            });
                     }, loadMessages: function (messages, options) { return this.getMessages(messages, options).then(mw.messages.set.bind(mw.messages)); }, loadMessagesIfMissing: function (messages, options) { var missing = messages.filter(function (msg) { return !mw.message(msg).exists(); }); if (missing.length === 0) { return $.Deferred().resolve(); } return this.loadMessages(missing, options); }
              });
       }()); (function () {
              var saveOptionsRequests = {}; $.extend(mw.Api.prototype, {
                     saveOption: function (name, value) { var param = {}; param[name] = value; return this.saveOptions(param); }, saveOptions: function (options) {
                            var name, value, bundleable, grouped = [], promise; if (mw.config.get('wgUserName') === null) { return $.Deferred().reject('notloggedin').promise(); } if (saveOptionsRequests[this.defaults.ajax.url] && saveOptionsRequests[this.defaults.ajax.url].state() === 'pending') {
                                   promise = saveOptionsRequests[this.defaults.
                                          ajax.url].then(function () { return $.Deferred().resolve(); }, function () { return $.Deferred().resolve(); });
                            } else { promise = $.Deferred().resolve(); } for (name in options) { value = options[name] === null ? null : String(options[name]); if (this.defaults.useUS) { bundleable = name.indexOf('=') === -1; } else { bundleable = (value === null || value.indexOf('|') === -1) && (name.indexOf('|') === -1 && name.indexOf('=') === -1); } if (bundleable) { if (value !== null) { grouped.push(name + '=' + value); } else { grouped.push(name); } } else { if (value !== null) { promise = promise.then(function (n, v) { return this.postWithToken('csrf', { formatversion: 2, action: 'options', optionname: n, optionvalue: v }); }.bind(this, name, value)); } else { promise = promise.then(function (n) { return this.postWithToken('csrf', { formatversion: 2, action: 'options', optionname: n }); }.bind(this, name)); } } } if (grouped.length) { promise = promise.then(function () { return this.postWithToken('csrf', { formatversion: 2, action: 'options', change: grouped }); }.bind(this)); } saveOptionsRequests[this.defaults.ajax.url] = promise; return promise
                                   ;
                     }
              });
       }()); (function () { $.extend(mw.Api.prototype, { parse: function (content, additionalParams) { var apiPromise, config = $.extend({ formatversion: 2, action: 'parse', contentmodel: 'wikitext' }, additionalParams); if (mw.Title && content instanceof mw.Title) { config.page = content.getPrefixedDb(); apiPromise = this.get(config); } else { config.text = String(content); apiPromise = this.post(config); } return apiPromise.then(function (data) { return data.parse.text; }).promise({ abort: apiPromise.abort }); } }); }()); (function () { $.extend(mw.Api.prototype, { rollback: function (page, user, params) { return this.postWithToken('rollback', $.extend({ action: 'rollback', title: String(page), user: user, uselang: mw.config.get('wgUserLanguage') }, params)).then(function (data) { return data.rollback; }); } }); }()); (function () {
              var fieldsAllowed = { stash: true, filekey: true, filename: true, comment: true, text: true, watchlist: true, ignorewarnings: true, chunk: true, offset: true, filesize: true, async: true }; function getFirstKey(obj) { return obj[Object.keys(obj)[0]]; } $.extend(mw.Api.
                     prototype, {
                            upload: function (file, data) { if (file && file.nodeType === Node.ELEMENT_NODE && file.files) { file = file.files[0]; } if (!file) { throw new Error('No file'); } if (!(file instanceof window.File || file instanceof window.Blob)) { throw new Error('Unsupported argument type passed to mw.Api.upload'); } return this.uploadWithFormData(file, data); }, uploadWithFormData: function (file, data) {
                                   var key, request, deferred = $.Deferred(); for (key in data) { if (!fieldsAllowed[key]) { delete data[key]; } } data = $.extend({}, this.defaults.parameters, { action: 'upload' }, data); if (!data.chunk) { data.file = file; } if (!data.filename && !data.stash) { throw new Error('Filename not included in file data.'); } request = this[this.needToken() ? 'postWithEditToken' : 'post'](data, { contentType: 'multipart/form-data', timeout: 0, xhr: function () { var xhr = $.ajaxSettings.xhr(); if (xhr.upload) { xhr.upload.addEventListener('progress', function (ev) { if (ev.lengthComputable) { deferred.notify(ev.loaded / ev.total); } }); } return xhr; } }).done(function (result) {
                                          deferred.notify(1); if (
                                                 result.upload && result.upload.warnings) { deferred.reject(getFirstKey(result.upload.warnings), result); } else { deferred.resolve(result); }
                                   }).fail(function (errorCode, result) { deferred.notify(1); deferred.reject(errorCode, result); }); return deferred.promise({ abort: request.abort });
                            }, chunkedUpload: function (file, data, chunkSize, chunkRetries) {
                                   var start, end, promise, next, active, deferred = $.Deferred(); chunkSize = chunkSize === undefined ? 5 * 1024 * 1024 : chunkSize; chunkRetries = chunkRetries === undefined ? 1 : chunkRetries; if (!data.filename) { throw new Error('Filename not included in file data.'); } active = promise = this.uploadChunk(file, data, 0, chunkSize, '', chunkRetries).done(chunkSize >= file.size ? deferred.resolve : null).fail(deferred.reject).progress(deferred.notify); for (start = chunkSize; start < file.size; start += chunkSize) {
                                          end = Math.min(start + chunkSize, file.size); next = $.Deferred(); promise.done(function (s, e, n, result) {
                                                 var filekey = result.upload.filekey; active = this.uploadChunk(file, data, s, e, filekey, chunkRetries).done(e === file.size ?
                                                        deferred.resolve : n.resolve).fail(deferred.reject).progress(deferred.notify);
                                          }.bind(this, start, end, next)); promise = next;
                                   } return deferred.promise({ abort: active.abort });
                            }, uploadChunk: function (file, data, start, end, filekey, retries) { var upload, api = this, chunk = this.slice(file, start, end); retries = retries === undefined ? 1 : retries; data.filesize = file.size; data.chunk = chunk; data.offset = start; if (filekey && start !== 0) { data.filekey = filekey; } upload = this.uploadWithFormData(file, data); return upload.then(null, function (code, result) { var retry; if (result.upload && result.upload.warnings) { if (end === file.size) { return $.Deferred().reject(result.upload.warnings.code || 'unknown', result); } else { return $.Deferred().resolve(result); } } if (retries === 0) { return $.Deferred().reject(code, result); } retry = api.uploadChunk.bind(api, file, data, start, end, filekey, retries - 1); return api.retry(code, result, retry); }, function (fraction) { return (start + fraction * (end - start)) / file.size; }).promise({ abort: upload.abort }); }, retry: function (code, result, callable) {
                                   var uploadPromise, retryTimer, deferred = $.Deferred(), retry = function () { uploadPromise = callable(); uploadPromise.then(deferred.resolve, deferred.reject); }; if (code !== 'http' || result.textStatus === 'abort') { return deferred.reject(code, result); } retryTimer = setTimeout(retry, 1000); return deferred.promise({ abort: function () { if (retryTimer) { clearTimeout(retryTimer); } if (uploadPromise.abort) { uploadPromise.abort(); } } });
                            }, slice: function (file, start, stop) { if (file.mozSlice) { return file.mozSlice(start, stop, file.type); } else if (file.webkitSlice) { return file.webkitSlice(start, stop, file.type); } else { return file.slice(start, stop, file.type); } }, finishUploadToStash: function (uploadPromise, data) {
                                   var filekey, api = this; function finishUpload(moreData) { return api.uploadFromStash(filekey, $.extend(data, moreData)); } return uploadPromise.then(function (result) { filekey = result.upload.filekey; return finishUpload; }, function (errorCode, result) {
                                          if (result && result.upload && result.upload.result === 'Success' && result.upload.filekey) {
                                                 filekey = result.
                                                        upload.filekey; return $.Deferred().resolve(finishUpload);
                                          } return $.Deferred().reject(errorCode, result);
                                   });
                            }, uploadToStash: function (file, data) { var promise; if (!data.filename) { throw new Error('Filename not included in file data.'); } promise = this.upload(file, { stash: true, filename: data.filename, ignorewarnings: data.ignorewarnings }); return this.finishUploadToStash(promise, data); }, chunkedUploadToStash: function (file, data, chunkSize, chunkRetries) { var promise; if (!data.filename) { throw new Error('Filename not included in file data.'); } promise = this.chunkedUpload(file, { stash: true, filename: data.filename, ignorewarnings: data.ignorewarnings }, chunkSize, chunkRetries); return this.finishUploadToStash(promise, data); }, uploadFromStash: function (filekey, data) {
                                   data.filekey = filekey; data.action = 'upload'; data.format = 'json'; if (!data.filename) { throw new Error('Filename not included in file data.'); } return this.postWithEditToken(data).then(function (result) {
                                          if (result.upload && result.upload.warnings) {
                                                 return $.Deferred().
                                                        reject(getFirstKey(result.upload.warnings), result).promise();
                                          } return result;
                                   });
                            }, needToken: function () { return true; }
              });
       }()); (function () { $.extend(mw.Api.prototype, { getUserInfo: function () { return this.get({ action: 'query', meta: 'userinfo', uiprop: ['groups', 'rights'] }).then(function (data) { if (data.query && data.query.userinfo) { return data.query.userinfo; } return $.Deferred().reject().promise(); }); }, assertCurrentUser: function (query) { var user = mw.config.get('wgUserName'), assertParams = {}; if (user !== null) { assertParams.assert = 'user'; assertParams.assertuser = user; } else { assertParams.assert = 'anon'; } return $.extend(assertParams, query); } }); }()); (function () {
              function doWatchInternal(pages, addParams) { var apiPromise = this.postWithToken('watch', $.extend({ formatversion: 2, action: 'watch', titles: Array.isArray(pages) ? pages : String(pages) }, addParams)); return apiPromise.then(function (data) { return Array.isArray(pages) ? data.watch : data.watch[0]; }).promise({ abort: apiPromise.abort }); } $.extend(mw.Api.prototype, {
                     watch: function (
                            pages, expiry) { return doWatchInternal.call(this, pages, { expiry: expiry }); }, unwatch: function (pages) { return doWatchInternal.call(this, pages, { unwatch: 1 }); }
              });
       }());
}, {}, { "api-clientside-error-aborted": "该请求已被终止。", "api-clientside-error-http": "服务器返回错误：HTTP $1。", "api-clientside-error-invalidresponse": "来自服务器的无效响应。", "api-clientside-error-noconnect": "无法连接到服务器。请确保您正常连接到互联网，并重试。", "api-clientside-error-timeout": "服务器没有在预期时间内响应。" }, null);; mw.loader.implement("mediawiki.jqueryMsg@bbub7", {
       main: "mediawiki.jqueryMsg.js", files: {
              "mediawiki.jqueryMsg.js": function (require, module, exports) {
                     var slice = Array.prototype.slice, mwString = require('mediawiki.String'), parserDefaults = { magic: { PAGENAME: mw.config.get('wgPageName'), PAGENAMEE: mw.util.wikiUrlencode(mw.config.get('wgPageName')), SERVERNAME: mw.config.get('wgServerName') }, allowedHtmlElements: [], allowedHtmlCommonAttributes: ['id', 'class', 'style', 'lang', 'dir', 'title', 'role'], allowedHtmlAttributesByElement: {}, messages: mw.messages, language: mw.language, format: 'parse' }; $.extend(true, parserDefaults, require('./parserDefaults.json')); function appendWithoutParsing($parent, children) {
                            var i, len; if (!Array.isArray(children)) { children = [children]; } for (i = 0, len = children.length; i < len; i++) { if (typeof children[i] !== 'object') { children[i] = document.createTextNode(children[i]); } if (children[i] instanceof $ && children[i].hasClass('mediaWiki_htmlEmitter')) { children[i] = children[i].contents(); } } return $parent.
                                   append(children);
                     } function decodePrimaryHtmlEntities(encoded) { return encoded.replace(/&#039;/g, '\'').replace(/&quot;/g, '"').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&'); } function textify(input) { if (input instanceof $) { input = input.text(); } return String(input); } function getFailableParserFn(options) { return function (args) { var parser = new mw.jqueryMsg.Parser(options), key = args[0], argsArray = Array.isArray(args[1]) ? args[1] : slice.call(args, 1); try { return parser.parse(key, argsArray); } catch (e) { var fallback = parser.settings.messages.get(key); mw.log.warn('mediawiki.jqueryMsg: ' + key + ': ' + e.message); mw.track('mediawiki.jqueryMsg.error', { messageKey: key, errorMessage: e.message }); return $('<span>').text(fallback); } }; } mw.jqueryMsg = {}; mw.jqueryMsg.setParserDefaults = function (data) { $.extend(parserDefaults, data); }; mw.jqueryMsg.getParserDefaults = function () { return $.extend({}, parserDefaults); }; mw.jqueryMsg.getMessageFunction = function (options) {
                            var failableParserFn, format; if (options && options.format
                                   !== undefined) { format = options.format; } else { format = parserDefaults.format; } return function () { if (!failableParserFn) { failableParserFn = getFailableParserFn(options); } var failableResult = failableParserFn(arguments); if (format === 'text' || format === 'escaped') { return failableResult.text(); } else { return failableResult.html(); } };
                     }; mw.jqueryMsg.getPlugin = function (options) { var failableParserFn; return function () { if (!failableParserFn) { failableParserFn = getFailableParserFn(options); } var $target = this.empty(); appendWithoutParsing($target, failableParserFn(arguments)); return $target; }; }; mw.jqueryMsg.Parser = function (options) { this.settings = $.extend({}, parserDefaults, options); this.settings.onlyCurlyBraceTransform = (this.settings.format === 'text' || this.settings.format === 'escaped'); this.astCache = {}; this.emitter = new mw.jqueryMsg.HtmlEmitter(this.settings.language, this.settings.magic); }; mw.jqueryMsg.parser = mw.jqueryMsg.Parser; mw.jqueryMsg.Parser.prototype = {
                            parse: function (key, replacements) {
                                   var ast = this.getAst(key,
                                          replacements); return this.emitter.emit(ast, replacements);
                            }, getAst: function (key, replacements) { if (!Object.prototype.hasOwnProperty.call(this.astCache, key)) { var wikiText = this.settings.messages.get(key); if (mw.config.get('wgUserLanguage') === 'qqx' && wikiText === '(' + key + ')') { wikiText = '(' + key + '$*)'; } else if (typeof wikiText !== 'string') { wikiText = '⧼' + key + '⧽'; } wikiText = mw.internalDoTransformFormatForQqx(wikiText, replacements); this.astCache[key] = this.wikiTextToAst(wikiText); } return this.astCache[key]; }, wikiTextToAst: function (input) {
                                   var pos, regularLiteral, regularLiteralWithoutBar, regularLiteralWithoutSpace, regularLiteralWithSquareBrackets, doubleQuote, singleQuote, backslash, anyCharacter, asciiAlphabetLiteral, escapedOrLiteralWithoutSpace, escapedOrLiteralWithoutBar, escapedOrRegularLiteral, whitespace, dollar, digits, htmlDoubleQuoteAttributeValue, htmlSingleQuoteAttributeValue, htmlAttributeEquals, openHtmlStartTag, optionalForwardSlash, openHtmlEndTag, closeHtmlTag, openExtlink, closeExtlink, wikilinkContents,
                                   openWikilink, closeWikilink, pipe, colon, templateContents, openTemplate, closeTemplate, nonWhitespaceExpression, paramExpression, expression, curlyBraceTransformExpression, res, settings = this.settings, concat = Array.prototype.concat; pos = 0; function choice(ps) { return function () { var i, result; for (i = 0; i < ps.length; i++) { result = ps[i](); if (result !== null) { return result; } } return null; }; } function sequence(ps) { var i, r, originalPos = pos, result = []; for (i = 0; i < ps.length; i++) { r = ps[i](); if (r === null) { pos = originalPos; return null; } result.push(r); } return result; } function nOrMore(n, p) { return function () { var originalPos = pos, result = [], parsed = p(); while (parsed !== null) { result.push(parsed); parsed = p(); } if (result.length < n) { pos = originalPos; return null; } return result; }; } function makeStringParser(s) { var len = s.length; return function () { var result = null; if (input.slice(pos, pos + len) === s) { result = s; pos += len; } return result; }; } function makeRegexParser(regex) {
                                          return function () {
                                                 var matches = input.slice(pos).match(regex); if (matches === null) {
                                                        return null
                                                               ;
                                                 } pos += matches[0].length; return matches[0];
                                          };
                                   } regularLiteral = makeRegexParser(/^[^{}\[\]$<\\]/); regularLiteralWithoutBar = makeRegexParser(/^[^{}\[\]$\\|]/); regularLiteralWithoutSpace = makeRegexParser(/^[^{}\[\]$\s]/); backslash = makeStringParser('\\'); anyCharacter = makeRegexParser(/^./); function escapedLiteral() { var result = sequence([backslash, anyCharacter]); return result === null ? null : result[1]; } escapedOrLiteralWithoutSpace = choice([escapedLiteral, regularLiteralWithoutSpace]); escapedOrLiteralWithoutBar = choice([escapedLiteral, regularLiteralWithoutBar]); escapedOrRegularLiteral = choice([escapedLiteral, regularLiteral]); function literalWithoutSpace() { var result = nOrMore(1, escapedOrLiteralWithoutSpace)(); return result === null ? null : result.join(''); } function literalWithoutBar() { var result = nOrMore(1, escapedOrLiteralWithoutBar)(); return result === null ? null : result.join(''); } function literal() { var result = nOrMore(1, escapedOrRegularLiteral)(); return result === null ? null : result.join(''); } asciiAlphabetLiteral =
                                          makeRegexParser(/^[A-Za-z]+/); whitespace = makeRegexParser(/^\s+/); dollar = makeStringParser('$'); digits = makeRegexParser(/^\d+/); function replacement() { var result = sequence([dollar, digits]); if (result === null) { return null; } return ['REPLACE', parseInt(result[1], 10) - 1]; } openExtlink = makeStringParser('['); closeExtlink = makeStringParser(']'); function extlink() { var parsedResult = sequence([openExtlink, nOrMore(1, nonWhitespaceExpression), whitespace, nOrMore(1, expression), closeExtlink]); if (parsedResult === null) { return null; } var target = parsedResult[1].length === 1 ? parsedResult[1][0] : ['CONCAT'].concat(parsedResult[1]); return ['EXTLINK', target, ['CONCAT'].concat(parsedResult[3])]; } pipe = makeStringParser('|'); openTemplate = makeStringParser('{{'); closeTemplate = makeStringParser('}}'); function template() { var result = sequence([openTemplate, templateContents, closeTemplate]); return result === null ? null : result[1]; } function templateName() {
                                                 var templateNameRegex = makeRegexParser(/^[ !"$&'()*,./0-9;=?@A-Z^_`a-z~\x80-\xFF+-]+/); var
                                                        result = templateNameRegex(); return result === null ? null : result.toString();
                                          } function templateParam() { var result = sequence([pipe, nOrMore(0, paramExpression)]); if (result === null) { return null; } var expr = result[1]; return expr.length > 1 ? ['CONCAT'].concat(expr) : expr[0]; } function templateWithReplacement() { var result = sequence([templateName, colon, replacement]); return result === null ? null : [result[0], result[2]]; } function templateWithOutReplacement() { var result = sequence([templateName, colon, paramExpression]); return result === null ? null : [result[0], result[2]]; } function templateWithOutFirstParameter() { var result = sequence([templateName, colon]); return result === null ? null : [result[0], '']; } colon = makeStringParser(':'); templateContents = choice([function () { var result = sequence([choice([templateWithReplacement, templateWithOutReplacement, templateWithOutFirstParameter]), nOrMore(0, templateParam)]); return result === null ? null : result[0].concat(result[1]); }, function () {
                                                 var result = sequence([templateName, nOrMore(0, templateParam)]); if (
                                                        result === null) { return null; } return [result[0]].concat(result[1]);
                                          }]); function pipedWikilink() { var result = sequence([nOrMore(1, paramExpression), pipe, nOrMore(1, expression)]); return result === null ? null : [['CONCAT'].concat(result[0]), ['CONCAT'].concat(result[2])]; } function unpipedWikilink() { var result = sequence([nOrMore(1, paramExpression)]); return result === null ? null : [['CONCAT'].concat(result[0])]; } wikilinkContents = choice([pipedWikilink, unpipedWikilink]); openWikilink = makeStringParser('[['); closeWikilink = makeStringParser(']]'); function wikilink() { var parsedResult = sequence([openWikilink, wikilinkContents, closeWikilink]); return parsedResult === null ? null : ['WIKILINK'].concat(parsedResult[1]); } doubleQuote = makeStringParser('"'); htmlDoubleQuoteAttributeValue = makeRegexParser(/^[^"]*/); function doubleQuotedHtmlAttributeValue() { var parsedResult = sequence([doubleQuote, htmlDoubleQuoteAttributeValue, doubleQuote]); return parsedResult === null ? null : parsedResult[1]; } singleQuote = makeStringParser('\'');
                                   htmlSingleQuoteAttributeValue = makeRegexParser(/^[^']*/); function singleQuotedHtmlAttributeValue() { var parsedResult = sequence([singleQuote, htmlSingleQuoteAttributeValue, singleQuote]); return parsedResult === null ? null : parsedResult[1]; } htmlAttributeEquals = makeRegexParser(/^\s*=\s*/); function htmlAttribute() { var parsedResult = sequence([whitespace, asciiAlphabetLiteral, htmlAttributeEquals, choice([doubleQuotedHtmlAttributeValue, singleQuotedHtmlAttributeValue])]); return parsedResult === null ? null : [parsedResult[1], parsedResult[3]]; } function isAllowedHtml(startTagName, endTagName, attributes) {
                                          startTagName = startTagName.toLowerCase(); endTagName = endTagName.toLowerCase(); if (startTagName !== endTagName || settings.allowedHtmlElements.indexOf(startTagName) === -1) { return false; } var badStyle = /[\000-\010\013\016-\037\177]|expression|filter\s*:|accelerator\s*:|-o-link\s*:|-o-link-source\s*:|-o-replace\s*:|url\s*\(|image\s*\(|image-set\s*\(/i; var attributeName; for (var i = 0, len = attributes.length; i < len; i += 2) {
                                                 attributeName
                                                 = attributes[i]; if (settings.allowedHtmlCommonAttributes.indexOf(attributeName) === -1 && (settings.allowedHtmlAttributesByElement[startTagName] || []).indexOf(attributeName) === -1) { return false; } if (attributeName === 'style' && attributes[i + 1].search(badStyle) !== -1) { mw.log('HTML tag not parsed due to dangerous style attribute'); return false; }
                                          } return true;
                                   } function htmlAttributes() { var parsedResult = nOrMore(0, htmlAttribute)(); return concat.apply(['HTMLATTRIBUTES'], parsedResult); } openHtmlStartTag = makeStringParser('<'); optionalForwardSlash = makeRegexParser(/^\/?/); openHtmlEndTag = makeStringParser('</'); closeHtmlTag = makeRegexParser(/^\s*>/); function html() {
                                          var startOpenTagPos = pos; var parsedOpenTagResult = sequence([openHtmlStartTag, asciiAlphabetLiteral, htmlAttributes, optionalForwardSlash, closeHtmlTag]); if (parsedOpenTagResult === null) { return null; } var endOpenTagPos = pos; var startTagName = parsedOpenTagResult[1]; var parsedHtmlContents = nOrMore(0, expression)(); var startCloseTagPos = pos; var parsedCloseTagResult =
                                                 sequence([openHtmlEndTag, asciiAlphabetLiteral, closeHtmlTag]); if (parsedCloseTagResult === null) { return ['CONCAT', input.slice(startOpenTagPos, endOpenTagPos)].concat(parsedHtmlContents); } var endCloseTagPos = pos; var endTagName = parsedCloseTagResult[1]; var wrappedAttributes = parsedOpenTagResult[2]; var attributes = wrappedAttributes.slice(1); if (isAllowedHtml(startTagName, endTagName, attributes)) { return ['HTMLELEMENT', startTagName, wrappedAttributes].concat(parsedHtmlContents); } return ['CONCAT', input.slice(startOpenTagPos, endOpenTagPos)].concat(parsedHtmlContents, input.slice(startCloseTagPos, endCloseTagPos));
                                   } function nowiki() { var parsedResult = sequence([makeStringParser('<nowiki>'), makeRegexParser(/^.*?(?=<\/nowiki>)/), makeStringParser('</nowiki>')]); return parsedResult === null ? null : ['CONCAT'].concat(parsedResult[1]); } nonWhitespaceExpression = choice([template, wikilink, extlink, replacement, literalWithoutSpace]); paramExpression = choice([template, wikilink, extlink, replacement, literalWithoutBar]); expression =
                                          choice([template, wikilink, extlink, replacement, nowiki, html, literal]); regularLiteralWithSquareBrackets = makeRegexParser(/^[^{}$\\]/); function curlyBraceTransformExpressionLiteral() { var result = nOrMore(1, regularLiteralWithSquareBrackets)(); return result === null ? null : result.join(''); } curlyBraceTransformExpression = choice([template, replacement, curlyBraceTransformExpressionLiteral]); function start(rootExpression) { var result = nOrMore(0, rootExpression)(); if (result === null) { return null; } return ['CONCAT'].concat(result); } res = start(this.settings.onlyCurlyBraceTransform ? curlyBraceTransformExpression : expression); if (res === null || pos !== input.length) { throw new Error('Parse error at position ' + pos.toString() + ' in input: ' + input); } return res;
                            }
                     }; mw.jqueryMsg.HtmlEmitter = function (language, magic) {
                            var jmsg = this; this.language = language; $.each(magic, function (key, val) { jmsg[key.toLowerCase()] = function () { return val; }; }); this.emit = function (node, replacements) {
                                   switch (typeof node) {
                                          case 'string': case 'number': return node; case
                                                 'object': var subnodes = $.map(node.slice(1), function (n) { return jmsg.emit(n, replacements); }); var operation = node[0].toLowerCase(); if (typeof jmsg[operation] === 'function') { return jmsg[operation](subnodes, replacements); } else { throw new Error('Unknown operation "' + operation + '"'); } case 'undefined': return ''; default: throw new Error('Unexpected type in AST: ' + typeof node);
                                   }
                            };
                     }; var strongDirRegExp = new RegExp('(?:' + '(' +
                            '[\u0041-\u005a\u0061-\u007a\u00aa\u00b5\u00ba\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u02bb-\u02c1\u02d0\u02d1\u02e0-\u02e4\u02ee\u0370-\u0373\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0482\u048a-\u052f\u0531-\u0556\u0559-\u055f\u0561-\u0587\u0589\u0903-\u0939\u093b\u093d-\u0940\u0949-\u094c\u094e-\u0950\u0958-\u0961\u0964-\u0980\u0982\u0983\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd-\u09c0\u09c7\u09c8\u09cb\u09cc\u09ce\u09d7\u09dc\u09dd\u09df-\u09e1\u09e6-\u09f1\u09f4-\u09fa\u0a03\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a3e-\u0a40\u0a59-\u0a5c\u0a5e\u0a66-\u0a6f\u0a72-\u0a74\u0a83\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd-\u0ac0\u0ac9\u0acb\u0acc\u0ad0\u0ae0\u0ae1\u0ae6-\u0af0\u0af9\u0b02\u0b03\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b3e\u0b40\u0b47\u0b48\u0b4b\u0b4c\u0b57\u0b5c\u0b5d\u0b5f-\u0b61\u0b66-\u0b77\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bbe\u0bbf\u0bc1\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcc\u0bd0\u0bd7\u0be6-\u0bf2\u0c01-\u0c03\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c41-\u0c44\u0c58-\u0c5a\u0c60\u0c61\u0c66-\u0c6f\u0c7f\u0c82\u0c83\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd-\u0cc4\u0cc6-\u0cc8\u0cca\u0ccb\u0cd5\u0cd6\u0cde\u0ce0\u0ce1\u0ce6-\u0cef\u0cf1\u0cf2\u0d02\u0d03\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d-\u0d40\u0d46-\u0d48\u0d4a-\u0d4c\u0d4e\u0d57\u0d5f-\u0d61\u0d66-\u0d75\u0d79-\u0d7f\u0d82\u0d83\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0dcf-\u0dd1\u0dd8-\u0ddf\u0de6-\u0def\u0df2-\u0df4\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e4f-\u0e5b\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0ed0-\u0ed9\u0edc-\u0edf\u0f00-\u0f17\u0f1a-\u0f34\u0f36\u0f38\u0f3e-\u0f47\u0f49-\u0f6c\u0f7f\u0f85\u0f88-\u0f8c\u0fbe-\u0fc5\u0fc7-\u0fcc\u0fce-\u0fda\u1000-\u102c\u1031\u1038\u103b\u103c\u103f-\u1057\u105a-\u105d\u1061-\u1070\u1075-\u1081\u1083\u1084\u1087-\u108c\u108e-\u109c\u109e-\u10c5\u10c7\u10cd\u10d0-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1360-\u137c\u1380-\u138f\u13a0-\u13f5\u13f8-\u13fd\u1401-\u167f\u1681-\u169a\u16a0-\u16f8\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1735\u1736\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17b6\u17be-\u17c5\u17c7\u17c8\u17d4-\u17da\u17dc\u17e0-\u17e9\u1810-\u1819\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1923-\u1926\u1929-\u192b\u1930\u1931\u1933-\u1938\u1946-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u19d0-\u19da\u1a00-\u1a16\u1a19\u1a1a\u1a1e-\u1a55\u1a57\u1a61\u1a63\u1a64\u1a6d-\u1a72\u1a80-\u1a89\u1a90-\u1a99\u1aa0-\u1aad\u1b04-\u1b33\u1b35\u1b3b\u1b3d-\u1b41\u1b43-\u1b4b\u1b50-\u1b6a\u1b74-\u1b7c\u1b82-\u1ba1\u1ba6\u1ba7\u1baa\u1bae-\u1be5\u1be7\u1bea-\u1bec\u1bee\u1bf2\u1bf3\u1bfc-\u1c2b\u1c34\u1c35\u1c3b-\u1c49\u1c4d-\u1c7f\u1cc0-\u1cc7\u1cd3\u1ce1\u1ce9-\u1cec\u1cee-\u1cf3\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u200e\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u214f\u2160-\u2188\u2336-\u237a\u2395\u249c-\u24e9\u26ac\u2800-\u28ff\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d70\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3005-\u3007\u3021-\u3029\u302e\u302f\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u3190-\u31ba\u31f0-\u321c\u3220-\u324f\u3260-\u327b\u327f-\u32b0\u32c0-\u32cb\u32d0-\u32fe\u3300-\u3376\u337b-\u33dd\u33e0-\u33fe\u3400-\u4db5\u4e00-\u9fd5\ua000-\ua48c\ua4d0-\ua60c\ua610-\ua62b\ua640-\ua66e\ua680-\ua69d\ua6a0-\ua6ef\ua6f2-\ua6f7\ua722-\ua787\ua789-\ua7ad\ua7b0-\ua7b7\ua7f7-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua824\ua827\ua830-\ua837\ua840-\ua873\ua880-\ua8c3\ua8ce-\ua8d9\ua8f2-\ua8fd\ua900-\ua925\ua92e-\ua946\ua952\ua953\ua95f-\ua97c\ua983-\ua9b2\ua9b4\ua9b5\ua9ba\ua9bb\ua9bd-\ua9cd\ua9cf-\ua9d9\ua9de-\ua9e4\ua9e6-\ua9fe\uaa00-\uaa28\uaa2f\uaa30\uaa33\uaa34\uaa40-\uaa42\uaa44-\uaa4b\uaa4d\uaa50-\uaa59\uaa5c-\uaa7b\uaa7d-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaaeb\uaaee-\uaaf5\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab65\uab70-\uabe4\uabe6\uabe7\uabe9-\uabec\uabf0-\uabf9\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\ue000-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc]|\ud800[\udc00-\udc0b]|\ud800[\udc0d-\udc26]|\ud800[\udc28-\udc3a]|\ud800\udc3c|\ud800\udc3d|\ud800[\udc3f-\udc4d]|\ud800[\udc50-\udc5d]|\ud800[\udc80-\udcfa]|\ud800\udd00|\ud800\udd02|\ud800[\udd07-\udd33]|\ud800[\udd37-\udd3f]|\ud800[\uddd0-\uddfc]|\ud800[\ude80-\ude9c]|\ud800[\udea0-\uded0]|\ud800[\udf00-\udf23]|\ud800[\udf30-\udf4a]|\ud800[\udf50-\udf75]|\ud800[\udf80-\udf9d]|\ud800[\udf9f-\udfc3]|\ud800[\udfc8-\udfd5]|\ud801[\udc00-\udc9d]|\ud801[\udca0-\udca9]|\ud801[\udd00-\udd27]|\ud801[\udd30-\udd63]|\ud801\udd6f|\ud801[\ude00-\udf36]|\ud801[\udf40-\udf55]|\ud801[\udf60-\udf67]|\ud804\udc00|\ud804[\udc02-\udc37]|\ud804[\udc47-\udc4d]|\ud804[\udc66-\udc6f]|\ud804[\udc82-\udcb2]|\ud804\udcb7|\ud804\udcb8|\ud804[\udcbb-\udcc1]|\ud804[\udcd0-\udce8]|\ud804[\udcf0-\udcf9]|\ud804[\udd03-\udd26]|\ud804\udd2c|\ud804[\udd36-\udd43]|\ud804[\udd50-\udd72]|\ud804[\udd74-\udd76]|\ud804[\udd82-\uddb5]|\ud804[\uddbf-\uddc9]|\ud804\uddcd|\ud804[\uddd0-\udddf]|\ud804[\udde1-\uddf4]|\ud804[\ude00-\ude11]|\ud804[\ude13-\ude2e]|\ud804\ude32|\ud804\ude33|\ud804\ude35|\ud804[\ude38-\ude3d]|\ud804[\ude80-\ude86]|\ud804\ude88|\ud804[\ude8a-\ude8d]|\ud804[\ude8f-\ude9d]|\ud804[\ude9f-\udea9]|\ud804[\udeb0-\udede]|\ud804[\udee0-\udee2]|\ud804[\udef0-\udef9]|\ud804\udf02|\ud804\udf03|\ud804[\udf05-\udf0c]|\ud804\udf0f|\ud804\udf10|\ud804[\udf13-\udf28]|\ud804[\udf2a-\udf30]|\ud804\udf32|\ud804\udf33|\ud804[\udf35-\udf39]|\ud804[\udf3d-\udf3f]|\ud804[\udf41-\udf44]|\ud804\udf47|\ud804\udf48|\ud804[\udf4b-\udf4d]|\ud804\udf50|\ud804\udf57|\ud804[\udf5d-\udf63]|\ud805[\udc80-\udcb2]|\ud805\udcb9|\ud805[\udcbb-\udcbe]|\ud805\udcc1|\ud805[\udcc4-\udcc7]|\ud805[\udcd0-\udcd9]|\ud805[\udd80-\uddb1]|\ud805[\uddb8-\uddbb]|\ud805\uddbe|\ud805[\uddc1-\udddb]|\ud805[\ude00-\ude32]|\ud805\ude3b|\ud805\ude3c|\ud805\ude3e|\ud805[\ude41-\ude44]|\ud805[\ude50-\ude59]|\ud805[\ude80-\udeaa]|\ud805\udeac|\ud805\udeae|\ud805\udeaf|\ud805\udeb6|\ud805[\udec0-\udec9]|\ud805[\udf00-\udf19]|\ud805\udf20|\ud805\udf21|\ud805\udf26|\ud805[\udf30-\udf3f]|\ud806[\udca0-\udcf2]|\ud806\udcff|\ud806[\udec0-\udef8]|\ud808[\udc00-\udf99]|\ud809[\udc00-\udc6e]|\ud809[\udc70-\udc74]|\ud809[\udc80-\udd43]|\ud80c[\udc00-\udfff]|\ud80d[\udc00-\udc2e]|\ud811[\udc00-\ude46]|\ud81a[\udc00-\ude38]|\ud81a[\ude40-\ude5e]|\ud81a[\ude60-\ude69]|\ud81a\ude6e|\ud81a\ude6f|\ud81a[\uded0-\udeed]|\ud81a\udef5|\ud81a[\udf00-\udf2f]|\ud81a[\udf37-\udf45]|\ud81a[\udf50-\udf59]|\ud81a[\udf5b-\udf61]|\ud81a[\udf63-\udf77]|\ud81a[\udf7d-\udf8f]|\ud81b[\udf00-\udf44]|\ud81b[\udf50-\udf7e]|\ud81b[\udf93-\udf9f]|\ud82c\udc00|\ud82c\udc01|\ud82f[\udc00-\udc6a]|\ud82f[\udc70-\udc7c]|\ud82f[\udc80-\udc88]|\ud82f[\udc90-\udc99]|\ud82f\udc9c|\ud82f\udc9f|\ud834[\udc00-\udcf5]|\ud834[\udd00-\udd26]|\ud834[\udd29-\udd66]|\ud834[\udd6a-\udd72]|\ud834\udd83|\ud834\udd84|\ud834[\udd8c-\udda9]|\ud834[\uddae-\udde8]|\ud834[\udf60-\udf71]|\ud835[\udc00-\udc54]|\ud835[\udc56-\udc9c]|\ud835\udc9e|\ud835\udc9f|\ud835\udca2|\ud835\udca5|\ud835\udca6|\ud835[\udca9-\udcac]|\ud835[\udcae-\udcb9]|\ud835\udcbb|\ud835[\udcbd-\udcc3]|\ud835[\udcc5-\udd05]|\ud835[\udd07-\udd0a]|\ud835[\udd0d-\udd14]|\ud835[\udd16-\udd1c]|\ud835[\udd1e-\udd39]|\ud835[\udd3b-\udd3e]|\ud835[\udd40-\udd44]|\ud835\udd46|\ud835[\udd4a-\udd50]|\ud835[\udd52-\udea5]|\ud835[\udea8-\udeda]|\ud835[\udedc-\udf14]|\ud835[\udf16-\udf4e]|\ud835[\udf50-\udf88]|\ud835[\udf8a-\udfc2]|\ud835[\udfc4-\udfcb]|\ud836[\udc00-\uddff]|\ud836[\ude37-\ude3a]|\ud836[\ude6d-\ude74]|\ud836[\ude76-\ude83]|\ud836[\ude85-\ude8b]|\ud83c[\udd10-\udd2e]|\ud83c[\udd30-\udd69]|\ud83c[\udd70-\udd9a]|\ud83c[\udde6-\ude02]|\ud83c[\ude10-\ude3a]|\ud83c[\ude40-\ude48]|\ud83c\ude50|\ud83c\ude51|[\ud840-\ud868][\udc00-\udfff]|\ud869[\udc00-\uded6]|\ud869[\udf00-\udfff]|[\ud86a-\ud86c][\udc00-\udfff]|\ud86d[\udc00-\udf34]|\ud86d[\udf40-\udfff]|\ud86e[\udc00-\udc1d]|\ud86e[\udc20-\udfff]|[\ud86f-\ud872][\udc00-\udfff]|\ud873[\udc00-\udea1]|\ud87e[\udc00-\ude1d]|[\udb80-\udbbe][\udc00-\udfff]|\udbbf[\udc00-\udffd]|[\udbc0-\udbfe][\udc00-\udfff]|\udbff[\udc00-\udffd]'
                            + ')|(' +
                            '[\u0590\u05be\u05c0\u05c3\u05c6\u05c8-\u05ff\u07c0-\u07ea\u07f4\u07f5\u07fa-\u0815\u081a\u0824\u0828\u082e-\u0858\u085c-\u089f\u200f\ufb1d\ufb1f-\ufb28\ufb2a-\ufb4f\u0608\u060b\u060d\u061b-\u064a\u066d-\u066f\u0671-\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u0710\u0712-\u072f\u074b-\u07a5\u07b1-\u07bf\u08a0-\u08e2\ufb50-\ufd3d\ufd40-\ufdcf\ufdf0-\ufdfc\ufdfe\ufdff\ufe70-\ufefe]|\ud802[\udc00-\udd1e]|\ud802[\udd20-\ude00]|\ud802\ude04|\ud802[\ude07-\ude0b]|\ud802[\ude10-\ude37]|\ud802[\ude3b-\ude3e]|\ud802[\ude40-\udee4]|\ud802[\udee7-\udf38]|\ud802[\udf40-\udfff]|\ud803[\udc00-\ude5f]|\ud803[\ude7f-\udfff]|\ud83a[\udc00-\udccf]|\ud83a[\udcd7-\udfff]|\ud83b[\udc00-\uddff]|\ud83b[\udf00-\udfff]|\ud83b[\udf00-\udfff]|\ud83b[\udf00-\udfff]|\ud83b[\udf00-\udfff]|\ud83b[\udf00-\udfff]|\ud83b[\udf00-\udfff]|\ud83b[\udf00-\udfff]|\ud83b[\udf00-\udfff]|\ud83b[\udf00-\udfff]|\ud83b[\udf00-\udfff]|\ud83b[\udf00-\udfff]|\ud83b[\udf00-\udfff]|\ud83b[\udf00-\udfff]|\ud83b[\ude00-\udeef]|\ud83b[\udef2-\udeff]'
                            + ')' + ')'); function strongDirFromContent(text) { var m = text.match(strongDirRegExp); if (!m) { return null; } if (m[2] === undefined) { return 'ltr'; } return 'rtl'; } mw.jqueryMsg.HtmlEmitter.prototype = {
                                   concat: function (nodes) { var $span = $('<span>').addClass('mediaWiki_htmlEmitter'); $.each(nodes, function (i, node) { appendWithoutParsing($span, node); }); return $span; }, replace: function (nodes, replacements) { var index = parseInt(nodes[0], 10); if (index < replacements.length) { if (typeof replacements[index] === 'object') { if (!replacements[index].mwJQueryMsgHasAlreadyBeenUsedAsAReplacement) { Object.defineProperty(replacements[index], 'mwJQueryMsgHasAlreadyBeenUsedAsAReplacement', { value: true, enumerable: false, writable: false }); return replacements[index]; } if (typeof replacements[index].clone === 'function') { return replacements[index].clone(true); } if (typeof replacements[index].cloneNode === 'function') { return replacements[index].cloneNode(true); } return replacements[index]; } return replacements[index]; } else { return '$' + (index + 1); } }, wikilink:
                                          function (nodes) { var page = textify(nodes[0]); if (page.charAt(0) === ':') { page = page.slice(1); } var url = mw.util.getUrl(page); var anchor; if (nodes.length === 1) { anchor = page; } else { anchor = nodes[1]; } var $el = $('<a>').attr({ title: page, href: url }); return appendWithoutParsing($el, anchor); }, htmlattributes: function (nodes) { var i, len, mapping = {}; for (i = 0, len = nodes.length; i < len; i += 2) { mapping[nodes[i]] = decodePrimaryHtmlEntities(nodes[i + 1]); } return mapping; }, htmlelement: function (nodes) { var tagName = nodes.shift(); var attributes = nodes.shift(); var contents = nodes; var $element = $(document.createElement(tagName)).attr(attributes); return appendWithoutParsing($element, contents); }, extlink: function (nodes) {
                                                 var $el, arg = nodes[0], contents = nodes[1]; if (arg instanceof $ && !arg.hasClass('mediaWiki_htmlEmitter')) { $el = arg; } else {
                                                        $el = $('<a>'); if (typeof arg === 'function') { $el.attr({ role: 'button', tabindex: 0 }).on('click keypress', function (e) { if (e.type === 'click' || e.type === 'keypress' && e.which === 13) { arg.call(this, e); } }); } else {
                                                               var target = textify(
                                                                      arg); if (target.search(new RegExp('^(/|' + mw.config.get('wgUrlProtocols') + ')')) !== -1) { $el.attr('href', target); if (target.search('^' + mw.config.get('wgArticlePath').replace(/\$1/g, '.+?') + '$') === -1) { $el.addClass('external'); } } else { mw.log('External link in message had illegal target ' + target); return appendWithoutParsing($('<span>'), ['[' + target + ' '].concat(contents).concat(']')).contents(); }
                                                        }
                                                 } return appendWithoutParsing($el.empty(), contents);
                                          }, plural: function (nodes) {
                                                 var firstChild, firstChildText, explicitPluralFormNumber, formIndex, form, explicitPluralForms = {}; var count = parseFloat(this.language.convertNumber(textify(nodes[0]), true)); var forms = nodes.slice(1); for (formIndex = 0; formIndex < forms.length; formIndex++) {
                                                        form = forms[formIndex]; if (form instanceof $ && form.hasClass('mediaWiki_htmlEmitter')) {
                                                               firstChild = form.contents().get(0); if (firstChild && firstChild.nodeType === Node.TEXT_NODE) {
                                                                      firstChildText = firstChild.textContent; if (/^\d+=/.test(firstChildText)) {
                                                                             explicitPluralFormNumber = parseInt(firstChildText.
                                                                                    split(/=/)[0], 10); firstChild.textContent = firstChildText.slice(firstChildText.indexOf('=') + 1); explicitPluralForms[explicitPluralFormNumber] = form; forms[formIndex] = undefined;
                                                                      }
                                                               }
                                                        } else if (/^\d+=/.test(form)) { explicitPluralFormNumber = parseInt(form.split(/=/)[0], 10); explicitPluralForms[explicitPluralFormNumber] = form.slice(form.indexOf('=') + 1); forms[formIndex] = undefined; }
                                                 } forms = $.map(forms, function (f) { return f; }); return this.language.convertPlural(count, forms, explicitPluralForms);
                                          }, gender: function (nodes) { var gender, maybeUser = nodes[0], forms = nodes.slice(1); if (maybeUser === '') { maybeUser = mw.user; } if (maybeUser && maybeUser.options instanceof mw.Map) { gender = maybeUser.options.get('gender'); } else { gender = textify(maybeUser); } return this.language.gender(gender, forms); }, bidi: function (nodes) { var dir = strongDirFromContent(nodes[0]); if (dir === 'ltr') { return '\u202A' + nodes[0] + '\u202C'; } if (dir === 'rtl') { return '\u202B' + nodes[0] + '\u202C'; } return nodes[0]; }, grammar: function (nodes) {
                                                 var form = nodes[0], word = nodes[1]; if (typeof
                                                        form === 'string' && typeof word === 'string') { return this.language.convertGrammar(word, form); } return word;
                                          }, int: function (nodes) { var msg = textify(nodes[0]); return mw.jqueryMsg.getMessageFunction()(mwString.lcFirst(msg)); }, ns: function (nodes) { var ns = textify(nodes[0]).trim(); if (!/^\d+$/.test(ns)) { ns = mw.config.get('wgNamespaceIds')[ns.replace(/ /g, '_').toLowerCase()]; } ns = mw.config.get('wgFormattedNamespaces')[ns]; return ns || ''; }, formatnum: function (nodes) { var isInteger = !!nodes[1] && nodes[1] === 'R', number = nodes[0]; if (typeof number === 'string' || typeof number === 'number') { return this.language.convertNumber(number, isInteger); } return number; }, lc: function (nodes) { return textify(nodes[0]).toLowerCase(); }, uc: function (nodes) { return textify(nodes[0]).toUpperCase(); }, lcfirst: function (nodes) { var text = textify(nodes[0]); return mwString.lcFirst(text); }, ucfirst: function (nodes) { var text = textify(nodes[0]); return mwString.ucFirst(text); }
                            }; $.fn.msg = mw.jqueryMsg.getPlugin(); var oldParser = mw.Message.prototype.parser; mw.
                                   Message.prototype.parser = function (format) { if (format === 'plain' || (!/\{\{|[<>[&]/.test(this.map.get(this.key)) && !this.parameters.some(function (param) { return param instanceof $ || (param && param.nodeType !== undefined); }))) { return oldParser.call(this, format); } if (!Object.prototype.hasOwnProperty.call(this.map, format)) { this.map[format] = mw.jqueryMsg.getMessageFunction({ messages: this.map, format: format }); } return this.map[format](this.key, this.parameters); }; mw.Message.prototype.parseDom = (function () { var $wrapper = $('<div>'); return function () { return $wrapper.msg(this.key, this.parameters).contents().detach(); }; }());
              }, "parserDefaults.json": { "allowedHtmlElements": ["b", "bdi", "del", "i", "ins", "u", "font", "big", "small", "sub", "sup", "h1", "h2", "h3", "h4", "h5", "h6", "cite", "code", "em", "s", "strike", "strong", "tt", "var", "div", "center", "blockquote", "ol", "ul", "dl", "table", "caption", "pre", "ruby", "rb", "rp", "rt", "rtc", "p", "span", "abbr", "dfn", "kbd", "samp", "data", "time", "mark", "li", "dt", "dd"], "magic": { "SITENAME": "以撒的结合中文维基" } }
       }
}, null, null, null);; mw.loader.implement("mediawiki.language@m8kko", function ($, jQuery, require, module) {
       (function () { mw.language = { data: {}, getData: function (langCode, dataKey) { var langData = mw.language.data; langCode = langCode.toLowerCase(); if (langData && langData[langCode] instanceof mw.Map) { return langData[langCode].get(dataKey); } return undefined; }, setData: function (langCode, dataKey, value) { var langData = mw.language.data; langCode = langCode.toLowerCase(); if (!(langData[langCode] instanceof mw.Map)) { langData[langCode] = new mw.Map(); } if (arguments.length > 2) { langData[langCode].set(dataKey, value); } else { langData[langCode].set(dataKey); } } }; }()); (function () {
              $.extend(mw.language, {
                     convertPlural: function (count, forms, explicitPluralForms) {
                            var pluralRules, pluralFormIndex = 0; if (explicitPluralForms && (explicitPluralForms[count] !== undefined)) { return explicitPluralForms[count]; } if (!forms || forms.length === 0) { return ''; } pluralRules = mw.language.getData(mw.config.get('wgUserLanguage'), 'pluralRules'); if (!pluralRules) {
                                   return (count === 1) ? forms[0] : forms[
                                          1];
                            } pluralFormIndex = mw.cldr.getPluralForm(count, pluralRules); pluralFormIndex = Math.min(pluralFormIndex, forms.length - 1); return forms[pluralFormIndex];
                     }, preConvertPlural: function (forms, count) { while (forms.length < count) { forms.push(forms[forms.length - 1]); } return forms; }, gender: function (gender, forms) { if (!forms || forms.length === 0) { return ''; } forms = mw.language.preConvertPlural(forms, 2); if (gender === 'male') { return forms[0]; } if (gender === 'female') { return forms[1]; } return (forms.length === 3) ? forms[2] : forms[0]; }, convertGrammar: function (word, form) {
                            var userLanguage, forms, transformations, patterns, i, rule, sourcePattern, regexp, replacement; userLanguage = mw.config.get('wgUserLanguage'); forms = mw.language.getData(userLanguage, 'grammarForms'); if (forms && forms[form]) { return forms[form][word]; } transformations = mw.language.getData(userLanguage, 'grammarTransformations'); if (!(transformations && transformations[form])) { return word; } patterns = transformations[form]; if (typeof patterns === 'string') {
                                   patterns = transformations[patterns
                                   ];
                            } for (i = 0; i < patterns.length; i++) { rule = patterns[i]; sourcePattern = rule[0]; if (sourcePattern === '@metadata') { continue; } regexp = new RegExp(sourcePattern); replacement = rule[1]; if (word.match(regexp)) { return word.replace(regexp, replacement); } } return word;
                     }, listToText: function (list) { var text = '', i = 0; for (; i < list.length; i++) { text += list[i]; if (list.length - 2 === i) { text += mw.msg('and') + mw.msg('word-separator'); } else if (list.length - 1 !== i) { text += mw.msg('comma-separator'); } } return text; }, bcp47: function (languageTag) {
                            var bcp47Map, formatted, segments, isFirstSegment = true, isPrivate = false; languageTag = languageTag.toLowerCase(); bcp47Map = mw.language.getData(mw.config.get('wgUserLanguage'), 'bcp47Map'); if (bcp47Map && Object.prototype.hasOwnProperty.call(bcp47Map, languageTag)) { languageTag = bcp47Map[languageTag]; } segments = languageTag.split('-'); formatted = segments.map(function (segment) {
                                   var newSegment; if (isPrivate) { newSegment = segment.toLowerCase(); } else if (segment.length === 2 && !isFirstSegment) { newSegment = segment.toUpperCase(); }
                                   else if (segment.length === 4 && !isFirstSegment) { newSegment = segment.charAt(0).toUpperCase() + segment.slice(1).toLowerCase(); } else { newSegment = segment.toLowerCase(); } isPrivate = segment.toLowerCase() === 'x'; isFirstSegment = false; return newSegment;
                            }); return formatted.join('-');
                     }
              });
       }()); (function () {
              function replicate(str, num) { var buf = []; if (num <= 0 || !str) { return ''; } while (num--) { buf.push(str); } return buf.join(''); } function pad(text, size, ch, end) { var out, padStr; if (!ch) { ch = '0'; } out = String(text); padStr = replicate(ch, Math.ceil((size - out.length) / ch.length)); return end ? out + padStr : padStr + out; } function commafyNumber(value, pattern, options) {
                     var padLength, patternDigits, index, whole, off, remainder, patternParts = pattern.split('.'), maxPlaces = (patternParts[1] || []).length, valueParts = String(Math.abs(value)).split('.'), fractional = valueParts[1] || '', groupSize = 0, groupSize2 = 0, pieces = []; options = options || { group: ',', decimal: '.' }; if (isNaN(value)) { return value; } if (patternParts[1]) {
                            padLength = (patternParts[1] && patternParts[1].
                                   lastIndexOf('0') + 1); if (padLength > fractional.length) { valueParts[1] = pad(fractional, padLength, '0', true); } if (maxPlaces < fractional.length) { valueParts[1] = fractional.slice(0, maxPlaces); }
                     } else { if (valueParts[1]) { valueParts.pop(); } } patternDigits = patternParts[0].replace(',', ''); padLength = patternDigits.indexOf('0'); if (padLength !== -1) { padLength = patternDigits.length - padLength; if (padLength > valueParts[0].length) { valueParts[0] = pad(valueParts[0], padLength); } if (patternDigits.indexOf('#') === -1) { valueParts[0] = valueParts[0].slice(valueParts[0].length - padLength); } } index = patternParts[0].lastIndexOf(','); if (index !== -1) { groupSize = patternParts[0].length - index - 1; remainder = patternParts[0].slice(0, index); index = remainder.lastIndexOf(','); if (index !== -1) { groupSize2 = remainder.length - index - 1; } } if (options.minimumGroupingDigits === null || valueParts[0].length >= groupSize + options.minimumGroupingDigits) {
                            for (whole = valueParts[0]; whole;) {
                                   off = groupSize ? whole.length - groupSize : 0; pieces.push((off > 0) ? whole.slice(off) : whole); whole = (off >
                                          0) ? whole.slice(0, off) : ''; if (groupSize2) { groupSize = groupSize2; groupSize2 = null; }
                            } valueParts[0] = pieces.reverse().join(options.group);
                     } return valueParts.join(options.decimal);
              } function commafyInternal(value, pattern, minimumGroupingDigits) { var numberPattern, transformTable = mw.language.getSeparatorTransformTable(), group = transformTable[','] || ',', numberPatternRE = /[#0,]*[#0](?:\.0*#*)?/, decimal = transformTable['.'] || '.', patternList = pattern.split(';'), positivePattern = patternList[0]; pattern = patternList[(value < 0) ? 1 : 0] || ('-' + positivePattern); numberPattern = positivePattern.match(numberPatternRE); minimumGroupingDigits = minimumGroupingDigits !== undefined ? minimumGroupingDigits : null; if (!numberPattern) { throw new Error('unable to find a number expression in pattern: ' + pattern); } return pattern.replace(numberPatternRE, commafyNumber(value, numberPattern[0], { minimumGroupingDigits: minimumGroupingDigits, decimal: decimal, group: group })); } function flipTransform() {
                     var i, key, table, flipped = {}; flipped[','] = ''; for (i = 0; i <
                            arguments.length; i++) { table = arguments[i]; for (key in table) { flipped[table[key]] = key === ',' ? '' : key; } } return flipped;
              } $.extend(mw.language, {
                     convertNumber: function (num, integer) {
                            var transformTable, digitTransformTable, separatorTransformTable, i, numberString, convertedNumber, pattern, minimumGroupingDigits; if (integer && parseInt(num, 10) === num) { return num; } digitTransformTable = mw.language.getDigitTransformTable(); separatorTransformTable = mw.language.getSeparatorTransformTable(); if (integer) { transformTable = flipTransform(separatorTransformTable, digitTransformTable); numberString = String(num); } else { if (mw.config.get('wgTranslateNumerals')) { transformTable = digitTransformTable; } pattern = mw.language.getData(mw.config.get('wgUserLanguage'), 'digitGroupingPattern') || '#,##0.###'; minimumGroupingDigits = mw.language.getData(mw.config.get('wgUserLanguage'), 'minimumGroupingDigits') || null; numberString = commafyInternal(num, pattern, minimumGroupingDigits); } if (transformTable) {
                                   convertedNumber = ''; for (i = 0; i < numberString.length; i++) {
                                          if (Object.prototype.hasOwnProperty.call(transformTable, numberString[i])) { convertedNumber += transformTable[numberString[i]]; } else { convertedNumber += numberString[i]; }
                                   }
                            } else { convertedNumber = numberString; } if (integer) { convertedNumber = parseInt(convertedNumber, 10); } return convertedNumber;
                     }, getDigitTransformTable: function () { return mw.language.getData(mw.config.get('wgUserLanguage'), 'digitTransformTable') || []; }, getSeparatorTransformTable: function () { return mw.language.getData(mw.config.get('wgUserLanguage'), 'separatorTransformTable') || []; }
              }); mw.log.deprecate(mw.language, 'commafy', commafyInternal, 'Use mw.language.convertNumber instead', 'mw.language.commafy');
       }()); (function () { $.extend(mw.language, { getFallbackLanguages: function () { return mw.language.getData(mw.config.get('wgUserLanguage'), 'fallbackLanguages') || []; }, getFallbackLanguageChain: function () { return [mw.config.get('wgUserLanguage')].concat(mw.language.getFallbackLanguages()); } }); }()); mw.language.setData("zh-hans", {
              "digitTransformTable": null,
              "separatorTransformTable": null, "minimumGroupingDigits": null, "grammarForms": [], "grammarTransformations": [], "pluralRules": ["i = 1 and v = 0 @integer 1"], "digitGroupingPattern": "#,##0.###", "fallbackLanguages": ["en"], "bcp47Map": { "als": "gsw", "bat-smg": "sgs", "be-x-old": "be-tarask", "fiu-vro": "vro", "roa-rup": "rup", "zh-classical": "lzh", "zh-min-nan": "nan", "zh-yue": "yue", "cbk-zam": "cbk", "de-formal": "de-x-formal", "eml": "egl", "en-rtl": "en-x-rtl", "es-formal": "es-x-formal", "hu-formal": "hu-x-formal", "map-bms": "jv-x-bms", "mo": "ro-Cyrl-MD", "nrm": "nrf", "nl-informal": "nl-x-informal", "roa-tara": "nap-x-tara", "simple": "en-simple", "sr-ec": "sr-Cyrl", "sr-el": "sr-Latn", "zh-cn": "zh-Hans-CN", "zh-sg": "zh-Hans-SG", "zh-my": "zh-Hans-MY", "zh-tw": "zh-Hant-TW", "zh-hk": "zh-Hant-HK", "zh-mo": "zh-Hant-MO" }
       });
}, {}, { "and": "和", "comma-separator": "、​", "word-separator": "" }, null);; mw.loader.implement("mediawiki.cldr@1630p", function ($, jQuery, require, module) { (function () { 'use strict'; mw.cldr = { getPluralForm: function (number, pluralRules) { var i, pluralRuleParser = require('mediawiki.libs.pluralruleparser'); for (i = 0; i < pluralRules.length; i++) { if (pluralRuleParser(pluralRules[i], number)) { break; } } return i; } }; }()); }, null, null, null);; mw.loader.implement("mediawiki.libs.pluralruleparser@8vy0u", function ($, jQuery, require, module) {
       (function (root, factory) { if (typeof define === 'function' && define.amd) { define(factory); } else if (typeof exports === 'object') { module.exports = factory(); } else { root.pluralRuleParser = factory(); } }(this, function () {
              function pluralRuleParser(rule, number) {
                     'use strict'; rule = rule.split('@')[0].replace(/^\s*/, '').replace(/\s*$/, ''); if (!rule.length) { return true; } var pos = 0, operand, expression, relation, result, whitespace = makeRegexParser(/^\s+/), value = makeRegexParser(/^\d+/), _n_ = makeStringParser('n'), _i_ = makeStringParser('i'), _f_ = makeStringParser('f'), _t_ = makeStringParser('t'), _v_ = makeStringParser('v'), _w_ = makeStringParser('w'), _is_ = makeStringParser('is'), _isnot_ = makeStringParser('is not'), _isnot_sign_ = makeStringParser('!='), _equal_ = makeStringParser('='), _mod_ = makeStringParser('mod'), _percent_ = makeStringParser('%'), _not_ = makeStringParser('not'), _in_ = makeStringParser('in'), _within_ = makeStringParser('within'), _range_ =
                            makeStringParser('..'), _comma_ = makeStringParser(','), _or_ = makeStringParser('or'), _and_ = makeStringParser('and'); function debug() { } debug('pluralRuleParser', rule, number); function choice(parserSyntax) { return function () { var i, result; for (i = 0; i < parserSyntax.length; i++) { result = parserSyntax[i](); if (result !== null) { return result; } } return null; }; } function sequence(parserSyntax) { var i, parserRes, originalPos = pos, result = []; for (i = 0; i < parserSyntax.length; i++) { parserRes = parserSyntax[i](); if (parserRes === null) { pos = originalPos; return null; } result.push(parserRes); } return result; } function nOrMore(n, p) { return function () { var originalPos = pos, result = [], parsed = p(); while (parsed !== null) { result.push(parsed); parsed = p(); } if (result.length < n) { pos = originalPos; return null; } return result; }; } function makeStringParser(s) { var len = s.length; return function () { var result = null; if (rule.substr(pos, len) === s) { result = s; pos += len; } return result; }; } function makeRegexParser(regex) {
                                   return function () {
                                          var matches = rule.substr(pos).match(regex);
                                          if (matches === null) { return null; } pos += matches[0].length; return matches[0];
                                   };
                            } function i() { var result = _i_(); if (result === null) { debug(' -- failed i', parseInt(number, 10)); return result; } result = parseInt(number, 10); debug(' -- passed i ', result); return result; } function n() { var result = _n_(); if (result === null) { debug(' -- failed n ', number); return result; } result = parseFloat(number, 10); debug(' -- passed n ', result); return result; } function f() { var result = _f_(); if (result === null) { debug(' -- failed f ', number); return result; } result = (number + '.').split('.')[1] || 0; debug(' -- passed f ', result); return result; } function t() { var result = _t_(); if (result === null) { debug(' -- failed t ', number); return result; } result = (number + '.').split('.')[1].replace(/0$/, '') || 0; debug(' -- passed t ', result); return result; } function v() { var result = _v_(); if (result === null) { debug(' -- failed v ', number); return result; } result = (number + '.').split('.')[1].length || 0; debug(' -- passed v ', result); return result; } function w() {
                                   var result = _w_();
                                   if (result === null) { debug(' -- failed w ', number); return result; } result = (number + '.').split('.')[1].replace(/0$/, '').length || 0; debug(' -- passed w ', result); return result;
                            } operand = choice([n, i, f, t, v, w]); expression = choice([mod, operand]); function mod() { var result = sequence([operand, whitespace, choice([_mod_, _percent_]), whitespace, value]); if (result === null) { debug(' -- failed mod'); return null; } debug(' -- passed ', parseInt(result[0], 10), result[2], parseInt(result[4], 10)); return parseFloat(result[0]) % parseInt(result[4], 10); } function not() { var result = sequence([whitespace, _not_]); if (result === null) { debug(' -- failed not'); return null; } return result[1]; } function is() { var result = sequence([expression, whitespace, choice([_is_]), whitespace, value]); if (result !== null) { debug(' -- passed is :', result[0], ' == ', parseInt(result[4], 10)); return result[0] === parseInt(result[4], 10); } debug(' -- failed is'); return null; } function isnot() {
                                   var result = sequence([expression, whitespace, choice([_isnot_, _isnot_sign_]), whitespace,
                                          value]); if (result !== null) { debug(' -- passed isnot: ', result[0], ' != ', parseInt(result[4], 10)); return result[0] !== parseInt(result[4], 10); } debug(' -- failed isnot'); return null;
                            } function not_in() { var i, range_list, result = sequence([expression, whitespace, _isnot_sign_, whitespace, rangeList]); if (result !== null) { debug(' -- passed not_in: ', result[0], ' != ', result[4]); range_list = result[4]; for (i = 0; i < range_list.length; i++) { if (parseInt(range_list[i], 10) === parseInt(result[0], 10)) { return false; } } return true; } debug(' -- failed not_in'); return null; } function rangeList() { var result = sequence([choice([range, value]), nOrMore(0, rangeTail)]), resultList = []; if (result !== null) { resultList = resultList.concat(result[0]); if (result[1][0]) { resultList = resultList.concat(result[1][0]); } return resultList; } debug(' -- failed rangeList'); return null; } function rangeTail() { var result = sequence([_comma_, rangeList]); if (result !== null) { return result[1]; } debug(' -- failed rangeTail'); return null; } function range() {
                                   var i, array, left, right
                                   , result = sequence([value, _range_, value]); if (result !== null) { debug(' -- passed range'); array = []; left = parseInt(result[0], 10); right = parseInt(result[2], 10); for (i = left; i <= right; i++) { array.push(i); } return array; } debug(' -- failed range'); return null;
                            } function _in() { var result, range_list, i; result = sequence([expression, nOrMore(0, not), whitespace, choice([_in_, _equal_]), whitespace, rangeList]); if (result !== null) { debug(' -- passed _in:', result); range_list = result[5]; for (i = 0; i < range_list.length; i++) { if (parseInt(range_list[i], 10) === parseFloat(result[0])) { return (result[1][0] !== 'not'); } } return (result[1][0] === 'not'); } debug(' -- failed _in '); return null; } function within() {
                                   var range_list, result; result = sequence([expression, nOrMore(0, not), whitespace, _within_, whitespace, rangeList]); if (result !== null) { debug(' -- passed within'); range_list = result[5]; if ((result[0] >= parseInt(range_list[0], 10)) && (result[0] < parseInt(range_list[range_list.length - 1], 10))) { return (result[1][0] !== 'not'); } return (result[1][0] === 'not'); } debug(
                                          ' -- failed within '); return null;
                            } relation = choice([is, not_in, isnot, _in, within]); function and() { var i, result = sequence([relation, nOrMore(0, andTail)]); if (result) { if (!result[0]) { return false; } for (i = 0; i < result[1].length; i++) { if (!result[1][i]) { return false; } } return true; } debug(' -- failed and'); return null; } function andTail() { var result = sequence([whitespace, _and_, whitespace, relation]); if (result !== null) { debug(' -- passed andTail', result); return result[3]; } debug(' -- failed andTail'); return null; } function orTail() { var result = sequence([whitespace, _or_, whitespace, and]); if (result !== null) { debug(' -- passed orTail: ', result[3]); return result[3]; } debug(' -- failed orTail'); return null; } function condition() { var i, result = sequence([and, nOrMore(0, orTail)]); if (result) { for (i = 0; i < result[1].length; i++) { if (result[1][i]) { return true; } } return result[0]; } return false; } result = condition(); if (result === null) { throw new Error('Parse error at position ' + pos.toString() + ' for rule: ' + rule); } if (pos !== rule.length) {
                                   debug(
                                          'Warning: Rule not parsed completely. Parser stopped at ', rule.substr(0, pos), ' for rule: ', rule);
                            } return result;
              } return pluralRuleParser;
       })); module.exports = window.pluralRuleParser; mw.libs.pluralRuleParser = window.pluralRuleParser;
}, null, null, null);; mw.loader.implement("mediawiki.Title@1bqh8", {
       main: "Title.js", files: {
              "Title.js": function (require, module, exports) {
                     var toUpperMap, mwString = require('mediawiki.String'), namespaceIds = mw.config.get('wgNamespaceIds'), NS_MAIN = namespaceIds[''], NS_TALK = namespaceIds.talk, NS_SPECIAL = namespaceIds.special, NS_MEDIA = namespaceIds.media, NS_FILE = namespaceIds.file, FILENAME_MAX_BYTES = 240, TITLE_MAX_BYTES = 255, getNsIdByName = function (ns) { var id; if (typeof ns !== 'string') { return false; } id = mw.config.get('wgNamespaceIds')[ns.toLowerCase()]; if (id === undefined) { return false; } return id; }, isKnownNamespace = function (namespace) { return namespace === NS_MAIN || mw.config.get('wgFormattedNamespaces')[namespace] !== undefined; }, getNamespacePrefix = function (namespace) { return namespace === NS_MAIN ? '' : (mw.config.get('wgFormattedNamespaces')[namespace].replace(/ /g, '_') + ':'); }, rUnderscoreTrim = /^_+|_+$/g, rSplit = /^(.+?)_*:_*(.*)$/, rInvalid = new RegExp('[^' + mw.config.get('wgLegalTitleChars') + ']' + '|%[\\dA-Fa-f]{2}' +
                            '|&[\\dA-Za-z\u0080-\uFFFF]+;'), rWhitespace = /[ _\u00A0\u1680\u180E\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]+/g, rUnicodeBidi = /[\u200E\u200F\u202A-\u202E]+/g, sanitationRules = [{ pattern: /~{3}/g, replace: '', generalRule: true }, { pattern: /[\x00-\x1f\x7f]/g, replace: '', generalRule: true }, { pattern: /%([\dA-Fa-f]{2})/g, replace: '% $1', generalRule: true }, { pattern: /&(([\dA-Za-z\x80-\xff]+|#\d+|#x[\dA-Fa-f]+);)/g, replace: '& $1', generalRule: true }, { pattern: new RegExp('[' + mw.config.get('wgIllegalFileChars', '') + ']', 'g'), replace: '-', fileRule: true }, { pattern: /[}\]>]/g, replace: ')', generalRule: true }, { pattern: /[{[<]/g, replace: '(', generalRule: true }, { pattern: new RegExp(rInvalid.source, 'g'), replace: '-', generalRule: true }, { pattern: /^(\.|\.\.|\.\/.*|\.\.\/.*|.*\/\.\/.*|.*\/\.\.\/.*|.*\/\.|.*\/\.\.)$/g, replace: '', generalRule: true }], parse = function (title, defaultNamespace) {
                                   var namespace, m, id, i, fragment; namespace = defaultNamespace === undefined ? NS_MAIN : defaultNamespace; title = title.replace(rUnicodeBidi, '').replace(rWhitespace,
                                          '_').replace(rUnderscoreTrim, ''); if (title !== '' && title[0] === ':') { namespace = NS_MAIN; title = title.slice(1).replace(rUnderscoreTrim, ''); } if (title === '') { return false; } m = title.match(rSplit); if (m) { id = getNsIdByName(m[1]); if (id !== false) { namespace = id; title = m[2]; if (namespace === NS_TALK && (m = title.match(rSplit))) { if (getNsIdByName(m[1]) !== false) { return false; } } } } i = title.indexOf('#'); if (i === -1) { fragment = null; } else { fragment = title.slice(i + 1).replace(/_/g, ' '); title = title.slice(0, i).replace(rUnderscoreTrim, ''); } if (rInvalid.test(title)) { return false; } if (title.indexOf('.') !== -1 && (title === '.' || title === '..' || title.indexOf('./') === 0 || title.indexOf('../') === 0 || title.indexOf('/./') !== -1 || title.indexOf('/../') !== -1 || title.slice(-2) === '/.' || title.slice(-3) === '/..')) { return false; } if (title.indexOf('~~~') !== -1) { return false; } if (namespace !== NS_SPECIAL && mwString.byteLength(title) > TITLE_MAX_BYTES) { return false; } if (title === '' && namespace !== NS_MAIN) { return false; } if (title[0] === ':') { return false; } return {
                                                 namespace: namespace
                                                 , title: title, fragment: fragment
                                          };
                            }, text = function (s) { return s.replace(/_/g, ' '); }, sanitize = function (s, filter) { var i, ruleLength, rule, m, filterLength, rules = sanitationRules; for (i = 0, ruleLength = rules.length; i < ruleLength; ++i) { rule = rules[i]; for (m = 0, filterLength = filter.length; m < filterLength; ++m) { if (rule[filter[m]]) { s = s.replace(rule.pattern, rule.replace); } } } return s; }, trimToByteLength = function (s, length) { return mwString.trimByteLength('', s, length).newVal; }, trimFileNameToByteLength = function (name, extension) { return trimToByteLength(name, FILENAME_MAX_BYTES - extension.length - 1) + '.' + extension; }; function Title(title, namespace) { var parsed = parse(title, namespace); if (!parsed) { throw new Error('Unable to parse title'); } this.namespace = parsed.namespace; this.title = parsed.title; this.fragment = parsed.fragment; } Title.newFromText = function (title, namespace) {
                                   var t, parsed = parse(title, namespace); if (!parsed) { return null; } t = Object.create(Title.prototype); t.namespace = parsed.namespace; t.title = parsed.title; t.fragment = parsed.
                                          fragment; return t;
                            }; Title.makeTitle = function (namespace, title) { if (!isKnownNamespace(namespace)) { return null; } else { return mw.Title.newFromText(getNamespacePrefix(namespace) + title); } }; Title.newFromUserInput = function (title, defaultNamespace, options) {
                                   var m, id, ext, lastDot, namespace = parseInt(defaultNamespace) || NS_MAIN; options = $.extend({ forUploading: true }, options); title = title.replace(/\s/g, ' ').trim(); if (title !== '' && title[0] === ':') { namespace = NS_MAIN; title = title.slice(1).replace(rUnderscoreTrim, ''); } m = title.match(rSplit); if (m) { id = getNsIdByName(m[1]); if (id !== false) { namespace = id; title = m[2]; } } if (namespace === NS_MEDIA || (options.forUploading && (namespace === NS_FILE))) { title = sanitize(title, ['generalRule', 'fileRule']); lastDot = title.lastIndexOf('.'); if (lastDot === -1 || lastDot >= title.length - 1) { return null; } ext = title.slice(lastDot + 1); title = title.slice(0, lastDot).trim(); title = trimFileNameToByteLength(title, ext); } else {
                                          title = sanitize(title, ['generalRule']); if (namespace !== NS_SPECIAL) {
                                                 title = trimToByteLength(title,
                                                        TITLE_MAX_BYTES);
                                          }
                                   } title = title.replace(/^:+/, ''); return Title.newFromText(title, namespace);
                            }; Title.newFromFileName = function (uncleanName) { return Title.newFromUserInput('File:' + uncleanName); }; Title.newFromImg = function (img) { var src = img.jquery ? img[0].src : img.src, data = mw.util.parseImageUrl(src); return data ? mw.Title.newFromText('File:' + data.name) : null; }; Title.isTalkNamespace = function (namespaceId) { return !!(namespaceId > NS_MAIN && namespaceId % 2); }; Title.wantSignaturesNamespace = function (namespaceId) { return Title.isTalkNamespace(namespaceId) || mw.config.get('wgExtraSignatureNamespaces').indexOf(namespaceId) !== -1; }; Title.exists = function (title) { var match, obj = Title.exist.pages; if (typeof title === 'string') { match = obj[title]; } else if (title instanceof Title) { match = obj[title.toString()]; } else { throw new Error('mw.Title.exists: title must be a string or an instance of Title'); } if (typeof match !== 'boolean') { return null; } return match; }; Title.exist = {
                                   pages: {}, set: function (titles, state) {
                                          var i, len, pages = this.pages;
                                          titles = Array.isArray(titles) ? titles : [titles]; state = state === undefined ? true : !!state; for (i = 0, len = titles.length; i < len; i++) { pages[titles[i]] = state; } return true;
                                   }
                            }; Title.normalizeExtension = function (extension) { var lower = extension.toLowerCase(), normalizations = { htm: 'html', jpeg: 'jpg', mpeg: 'mpg', tiff: 'tif', ogv: 'ogg' }; if (Object.hasOwnProperty.call(normalizations, lower)) { return normalizations[lower]; } else if (/^[\da-z]+$/.test(lower)) { return lower; } else { return ''; } }; Title.phpCharToUpper = function (chr) { if (!toUpperMap) { toUpperMap = require('./phpCharToUpper.json'); } if (toUpperMap[chr] === 0) { return chr; } return toUpperMap[chr] || chr.toUpperCase(); }; Title.prototype = {
                                   constructor: Title, getNamespaceId: function () { return this.namespace; }, getNamespacePrefix: function () { return getNamespacePrefix(this.namespace); }, getName: function () { var ext = this.getExtension(); if (ext === null) { return this.getMain(); } return this.getMain().slice(0, -ext.length - 1); }, getNameText: function () { return text(this.getName()); }, getExtension: function () {
                                          var lastDot = this.title.lastIndexOf('.'); if (lastDot === -1) { return null; } return this.title.slice(lastDot + 1) || null;
                                   }, getMain: function () { if (mw.config.get('wgCaseSensitiveNamespaces').indexOf(this.namespace) !== -1 || !this.title.length) { return this.title; } var firstChar = mwString.charAt(this.title, 0); return mw.Title.phpCharToUpper(firstChar) + this.title.slice(firstChar.length); }, getMainText: function () { return text(this.getMain()); }, getPrefixedDb: function () { return this.getNamespacePrefix() + this.getMain(); }, getPrefixedText: function () { return text(this.getPrefixedDb()); }, getRelativeText: function (namespace) { if (this.getNamespaceId() === namespace) { return this.getMainText(); } else if (this.getNamespaceId() === NS_MAIN) { return ':' + this.getPrefixedText(); } else { return this.getPrefixedText(); } }, getFragment: function () { return this.fragment; }, getUrl: function (params) {
                                          var fragment = this.getFragment(); if (fragment) { return mw.util.getUrl(this.toString() + '#' + fragment, params); } else {
                                                 return mw.util.getUrl(this.toString(), params)
                                                        ;
                                          }
                                   }, isTalkPage: function () { return Title.isTalkNamespace(this.getNamespaceId()); }, getTalkPage: function () { if (!this.canHaveTalkPage()) { return null; } return this.isTalkPage() ? this : Title.makeTitle(this.getNamespaceId() + 1, this.getMainText()); }, getSubjectPage: function () { return this.isTalkPage() ? Title.makeTitle(this.getNamespaceId() - 1, this.getMainText()) : this; }, canHaveTalkPage: function () { return this.getNamespaceId() >= NS_MAIN; }, exists: function () { return Title.exists(this); }
                            }; Title.prototype.toString = Title.prototype.getPrefixedDb; Title.prototype.toText = Title.prototype.getPrefixedText; mw.Title = Title;
              }, "phpCharToUpper.json": { "ß": 0, "ŉ": 0, "ǰ": 0, "ʂ": 0, "ͅ": 0, "ΐ": 0, "ΰ": 0, "և": 0, "ა": 0, "ბ": 0, "გ": 0, "დ": 0, "ე": 0, "ვ": 0, "ზ": 0, "თ": 0, "ი": 0, "კ": 0, "ლ": 0, "მ": 0, "ნ": 0, "ო": 0, "პ": 0, "ჟ": 0, "რ": 0, "ს": 0, "ტ": 0, "უ": 0, "ფ": 0, "ქ": 0, "ღ": 0, "ყ": 0, "შ": 0, "ჩ": 0, "ც": 0, "ძ": 0, "წ": 0, "ჭ": 0, "ხ": 0, "ჯ": 0, "ჰ": 0, "ჱ": 0, "ჲ": 0, "ჳ": 0, "ჴ": 0, "ჵ": 0, "ჶ": 0, "ჷ": 0, "ჸ": 0, "ჹ": 0, "ჺ": 0, "ჽ": 0, "ჾ": 0, "ჿ": 0, "ᶎ": 0, "ẖ": 0, "ẗ": 0, "ẘ": 0, "ẙ": 0, "ẚ": 0, "ὐ": 0, "ὒ": 0, "ὔ": 0, "ὖ": 0, "ᾀ": "ᾈ", "ᾁ": "ᾉ", "ᾂ": "ᾊ", "ᾃ": "ᾋ", "ᾄ": "ᾌ", "ᾅ": "ᾍ", "ᾆ": "ᾎ", "ᾇ": "ᾏ", "ᾈ": 0, "ᾉ": 0, "ᾊ": 0, "ᾋ": 0, "ᾌ": 0, "ᾍ": 0, "ᾎ": 0, "ᾏ": 0, "ᾐ": "ᾘ", "ᾑ": "ᾙ", "ᾒ": "ᾚ", "ᾓ": "ᾛ", "ᾔ": "ᾜ", "ᾕ": "ᾝ", "ᾖ": "ᾞ", "ᾗ": "ᾟ", "ᾘ": 0, "ᾙ": 0, "ᾚ": 0, "ᾛ": 0, "ᾜ": 0, "ᾝ": 0, "ᾞ": 0, "ᾟ": 0, "ᾠ": "ᾨ", "ᾡ": "ᾩ", "ᾢ": "ᾪ", "ᾣ": "ᾫ", "ᾤ": "ᾬ", "ᾥ": "ᾭ", "ᾦ": "ᾮ", "ᾧ": "ᾯ", "ᾨ": 0, "ᾩ": 0, "ᾪ": 0, "ᾫ": 0, "ᾬ": 0, "ᾭ": 0, "ᾮ": 0, "ᾯ": 0, "ᾲ": 0, "ᾳ": "ᾼ", "ᾴ": 0, "ᾶ": 0, "ᾷ": 0, "ᾼ": 0, "ῂ": 0, "ῃ": "ῌ", "ῄ": 0, "ῆ": 0, "ῇ": 0, "ῌ": 0, "ῒ": 0, "ΐ": 0, "ῖ": 0, "ῗ": 0, "ῢ": 0, "ΰ": 0, "ῤ": 0, "ῦ": 0, "ῧ": 0, "ῲ": 0, "ῳ": "ῼ", "ῴ": 0, "ῶ": 0, "ῷ": 0, "ῼ": 0, "ⅰ": 0, "ⅱ": 0, "ⅲ": 0, "ⅳ": 0, "ⅴ": 0, "ⅵ": 0, "ⅶ": 0, "ⅷ": 0, "ⅸ": 0, "ⅹ": 0, "ⅺ": 0, "ⅻ": 0, "ⅼ": 0, "ⅽ": 0, "ⅾ": 0, "ⅿ": 0, "ⓐ": 0, "ⓑ": 0, "ⓒ": 0, "ⓓ": 0, "ⓔ": 0, "ⓕ": 0, "ⓖ": 0, "ⓗ": 0, "ⓘ": 0, "ⓙ": 0, "ⓚ": 0, "ⓛ": 0, "ⓜ": 0, "ⓝ": 0, "ⓞ": 0, "ⓟ": 0, "ⓠ": 0, "ⓡ": 0, "ⓢ": 0, "ⓣ": 0, "ⓤ": 0, "ⓥ": 0, "ⓦ": 0, "ⓧ": 0, "ⓨ": 0, "ⓩ": 0, "ꞔ": 0, "ꞹ": 0, "ꞻ": 0, "ꞽ": 0, "ꞿ": 0, "ꟃ": 0, "ﬀ": 0, "ﬁ": 0, "ﬂ": 0, "ﬃ": 0, "ﬄ": 0, "ﬅ": 0, "ﬆ": 0, "ﬓ": 0, "ﬔ": 0, "ﬕ": 0, "ﬖ": 0, "ﬗ": 0, "𖹠": 0, "𖹡": 0, "𖹢": 0, "𖹣": 0, "𖹤": 0, "𖹥": 0, "𖹦": 0, "𖹧": 0, "𖹨": 0, "𖹩": 0, "𖹪": 0, "𖹫": 0, "𖹬": 0, "𖹭": 0, "𖹮": 0, "𖹯": 0, "𖹰": 0, "𖹱": 0, "𖹲": 0, "𖹳": 0, "𖹴": 0, "𖹵": 0, "𖹶": 0, "𖹷": 0, "𖹸": 0, "𖹹": 0, "𖹺": 0, "𖹻": 0, "𖹼": 0, "𖹽": 0, "𖹾": 0, "𖹿": 0 }
       }
}, null, null, null);; mw.loader.implement("mediawiki.util@1wh7q", {
       main: "util.js", files: {
              "util.js": function (require, module, exports) {
                     'use strict'; var util, config = require('./config.json'), portletLinkOptions = require('./portletLinkOptions.json'); require('./jquery.accessKeyLabel.js'); function rawurlencode(str) { return encodeURIComponent(String(str)).replace(/!/g, '%21').replace(/'/g, '%27').replace(/\(/g, '%28').replace(/\)/g, '%29').replace(/\*/g, '%2A').replace(/~/g, '%7E'); } function escapeIdInternal(str, mode) { str = String(str); switch (mode) { case 'html5': return str.replace(/ /g, '_'); case 'legacy': return rawurlencode(str.replace(/ /g, '_')).replace(/%3A/g, ':').replace(/%/g, '.'); default: throw new Error('Unrecognized ID escaping mode ' + mode); } } util = {
                            rawurlencode: rawurlencode, escapeIdForAttribute: function (str) { return escapeIdInternal(str, config.FragmentMode[0]); }, escapeIdForLink: function (str) { return escapeIdInternal(str, config.FragmentMode[0]); }, debounce: function (func, wait, immediate) {
                                   if (typeof func === 'number') {
                                          var tmpWait =
                                                 wait; wait = func; func = tmpWait;
                                   } var timeout; return function () { var context = this, args = arguments, later = function () { timeout = null; if (!immediate) { func.apply(context, args); } }; if (immediate && !timeout) { func.apply(context, args); } if (!timeout || wait) { clearTimeout(timeout); timeout = setTimeout(later, wait); } };
                            }, throttle: function (func, wait) { var context, args, timeout, previous = Date.now() - wait, run = function () { timeout = null; previous = Date.now(); func.apply(context, args); }; return function () { var remaining = Math.max(wait - (Date.now() - previous), 0); context = this; args = arguments; if (!timeout) { timeout = setTimeout(run, remaining); } }; }, wikiUrlencode: function (str) { return util.rawurlencode(str).replace(/%20/g, '_').replace(/%3B/g, ';').replace(/%40/g, '@').replace(/%24/g, '$').replace(/%21/g, '!').replace(/%2A/g, '*').replace(/%28/g, '(').replace(/%29/g, ')').replace(/%2C/g, ',').replace(/%2F/g, '/').replace(/%7E/g, '~').replace(/%3A/g, ':'); }, getUrl: function (pageName, params) {
                                   var fragmentIdx, url, query, fragment, title = typeof pageName === 'string' ?
                                          pageName : mw.config.get('wgPageName'); fragmentIdx = title.indexOf('#'); if (fragmentIdx !== -1) { fragment = title.slice(fragmentIdx + 1); title = title.slice(0, fragmentIdx); } if (params) { query = $.param(params); } if (!title && fragment) { url = ''; } else if (query) { url = title ? util.wikiScript() + '?title=' + util.wikiUrlencode(title) + '&' + query : util.wikiScript() + '?' + query; } else { url = mw.config.get('wgArticlePath').replace('$1', util.wikiUrlencode(title).replace(/\$/g, '$$$$')); } if (fragment) { url += '#' + util.escapeIdForLink(fragment); } return url;
                            }, wikiScript: function (str) { if (!str || str === 'index') { return mw.config.get('wgScript'); } else if (str === 'load') { return config.LoadScript; } else { return mw.config.get('wgScriptPath') + '/' + str + '.php'; } }, addCSS: function (text) { var s = mw.loader.addStyleTag(text); return s.sheet; }, getParamValue: function (param, url) {
                                   var re = new RegExp('^[^#]*[&?]' + util.escapeRegExp(param) + '=([^&#]*)'), m = re.exec(url !== undefined ? url : location.href); if (m) { try { return decodeURIComponent(m[1].replace(/\+/g, '%20')); } catch (e) { } }
                                   return null;
                            }, $content: null, hidePortlet: function (portletId) { var portlet = document.getElementById(portletId); if (portlet) { portlet.classList.add('emptyPortlet'); } }, isPortletVisible: function (portletId) { var portlet = document.getElementById(portletId); return portlet && !portlet.classList.contains('emptyPortlet'); }, showPortlet: function (portletId) { var portlet = document.getElementById(portletId); if (portlet) { portlet.classList.remove('emptyPortlet'); } }, addPortletLink: function (portletId, href, text, id, tooltip, accesskey, nextnode) {
                                   var item, link, portlet, portletDiv, ul, next; if (!portletId) { return null; } portlet = document.getElementById(portletId); if (!portlet) { return null; } link = document.createElement('a'); link.href = href; var linkChild = document.createTextNode(text); var i = portletLinkOptions['text-wrapper'].length; while (i--) {
                                          var wrapper = portletLinkOptions['text-wrapper'][i]; var wrapperElement = document.createElement(wrapper.tag); if (wrapper.attributes) { $(wrapperElement).attr(wrapper.attributes); } wrapperElement.
                                                 appendChild(linkChild); linkChild = wrapperElement;
                                   } link.appendChild(linkChild); if (tooltip) { link.title = tooltip; } if (accesskey) { link.accessKey = accesskey; } util.showPortlet(portletId); item = $('<li>').append(link)[0]; item.className = 'mw-list-item mw-list-item-js'; if (id) { item.id = id; } ul = portlet.tagName.toLowerCase() === 'ul' ? portlet : portlet.querySelector('ul'); if (!ul) { ul = document.createElement('ul'); portletDiv = portlet.querySelector('div'); if (portletDiv) { portletDiv.appendChild(ul); } else { portlet.appendChild(ul); } } if (nextnode && (typeof nextnode === 'string' || nextnode.nodeType || nextnode.jquery)) { nextnode = $(ul).find(nextnode); if (nextnode.length === 1 && nextnode[0].parentNode === ul) { nextnode.before(item); next = true; } } if (!next) { ul.appendChild(item); } if (accesskey) { $(link).updateTooltipAccessKeys(); } mw.hook('util.addPortletLink').fire(item, { id: id }); return item;
                            }, validateEmail: function (email) {
                                   if (email === '') { return null; } var rfc5322Atext = 'a-z0-9!#$%&\'*+\\-/=?^_`{|}~'; var rfc1034LdhStr = 'a-z0-9\\-'; var html5EmailRegexp
                                          = new RegExp('^' + '[' + rfc5322Atext + '\\.]+' + '@' + '[' + rfc1034LdhStr + ']+' + '(?:\\.[' + rfc1034LdhStr + ']+)*' + '$', 'i'); return (email.match(html5EmailRegexp) !== null);
                            }, isIPv4Address: function (address, allowBlock) { var block, RE_IP_BYTE = '(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|0?[0-9]?[0-9])', RE_IP_ADD = '(?:' + RE_IP_BYTE + '\\.){3}' + RE_IP_BYTE; if (typeof address !== 'string') { return false; } block = allowBlock ? '(?:\\/(?:3[0-2]|[12]?\\d))?' : ''; return (new RegExp('^' + RE_IP_ADD + block + '$').test(address)); }, isIPv6Address: function (address, allowBlock) {
                                   var block, RE_IPV6_ADD; if (typeof address !== 'string') { return false; } block = allowBlock ? '(?:\\/(?:12[0-8]|1[01][0-9]|[1-9]?\\d))?' : ''; RE_IPV6_ADD = '(?:' + ':(?::|(?::' + '[0-9A-Fa-f]{1,4}' + '){1,7})' + '|' + '[0-9A-Fa-f]{1,4}' + '(?::' + '[0-9A-Fa-f]{1,4}' + '){0,6}::' + '|' + '[0-9A-Fa-f]{1,4}' + '(?::' + '[0-9A-Fa-f]{1,4}' + '){7}' + ')'; if (new RegExp('^' + RE_IPV6_ADD + block + '$').test(address)) { return true; } RE_IPV6_ADD = '[0-9A-Fa-f]{1,4}' + '(?:::?' + '[0-9A-Fa-f]{1,4}' + '){1,6}'; return (new RegExp('^' + RE_IPV6_ADD +
                                          block + '$').test(address) && /::/.test(address) && !/::.*::/.test(address));
                            }, isIPAddress: function (address, allowBlock) { return util.isIPv4Address(address, allowBlock) || util.isIPv6Address(address, allowBlock); }, parseImageUrl: function (url) {
                                   var i, name, decodedName, width, match, strippedUrl, urlTemplate = null, thumbPhpRegex = /thumb\.php/, regexes = [/\/[\da-f]\/[\da-f]{2}\/([^\s/]+)\/(?:[^\s/]+-)?(\d+)px-(?:\1|thumbnail|[a-z\d]{31})(\.[^\s/]+)?$/, /\/[\da-f]\/[\da-f]{2}\/([^\s/]+)$/, /\/([^\s/]+)\/(?:[^\s/]+-)?(\d+)px-(?:\1|thumbnail|[a-z\d]{31})[^\s/]*$/, /\/([^\s/]+)$/]; if (thumbPhpRegex.test(url)) { decodedName = mw.util.getParamValue('f', url); name = encodeURIComponent(decodedName); width = mw.util.getParamValue('width', url) || mw.util.getParamValue('w', url); urlTemplate = url.replace(/([&?])w(?:idth)?=[^&]+/g, '') + '&width={width}'; } else { for (i = 0; i < regexes.length; i++) { match = url.match(regexes[i]); if (match) { name = match[1]; decodedName = decodeURIComponent(name); width = match[2] || null; break; } } } if (name) {
                                          if (width !== null) {
                                                 width =
                                                 parseInt(width, 10) || null;
                                          } if (config.GenerateThumbnailOnParse) { urlTemplate = mw.util.getUrl('Special:Redirect/file/' + decodedName, { width: '{width}' }).replace('%7Bwidth%7D', '{width}'); } else if (width && !urlTemplate) { strippedUrl = url.replace(name, '{name}').replace(name, '{name}').replace(width + 'px-', '{width}px-'); urlTemplate = strippedUrl.replace(/\{name\}/g, name); } return { name: decodedName.replace(/_/g, ' '), width: width, resizeUrl: urlTemplate ? function (w) { return urlTemplate.replace('{width}', w); } : null };
                                   } return null;
                            }, escapeRegExp: function (str) { return str.replace(/([\\{}()|.?*+\-^$\[\]])/g, '\\$1'); }, repeatString: function (str, count) { if (count <= 0 || count === Infinity || str === '') { return str; } var repeatedString = ''; for (var i = 0; i < count; i++) { repeatedString += str; } return repeatedString; }, sanitizeIP: function (ip) {
                                   ip = ip.replace(/(^\s+|\s+$)/g, ''); if (ip === '') { return null; } if (!this.isIPAddress(ip, true)) { return ip; } if (this.isIPv4Address(ip, true)) { return ip.replace(/(^|\.)0+(\d)/g, '$1$2'); } ip = ip.toUpperCase(); var abbrevPos,
                                          CIDRStart, addressEnd, repeatStr, extra, pad; abbrevPos = ip.search(/::/); if (abbrevPos !== -1) { CIDRStart = ip.search(/\//); addressEnd = (CIDRStart !== -1) ? CIDRStart - 1 : ip.length - 1; if (abbrevPos === 0) { repeatStr = '0:'; extra = ip === '::' ? '0' : ''; pad = 9; } else if (abbrevPos === addressEnd - 1) { repeatStr = ':0'; extra = ''; pad = 9; } else { repeatStr = ':0'; extra = ':'; pad = 8; } ip = ip.replace('::', this.repeatString(repeatStr, pad - (ip.split(':').length - 1)) + extra); } return ip.replace(/(^|:)0+(([0-9A-Fa-f]{1,4}))/g, '$1$2');
                            }, prettifyIP: function (ip) {
                                   ip = this.sanitizeIP(ip); if (ip === null) { return null; } if (this.isIPv6Address(ip, true)) { var cidr, matches, ipCidrSplit, i, replaceZeros; if (ip.search(/\//) !== -1) { ipCidrSplit = ip.split('/', 2); ip = ipCidrSplit[0]; cidr = ipCidrSplit[1]; } else { cidr = ''; } matches = ip.match(/(?:^|:)0(?::0)+(?:$|:)/g); if (matches) { replaceZeros = matches[0]; for (i = 1; i < matches.length; i++) { if (matches[i].length > replaceZeros.length) { replaceZeros = matches[i]; } } } ip = ip.replace(replaceZeros, '::'); if (cidr !== '') { ip = ip.concat('/', cidr); } ip = ip.toLowerCase(); }
                                   return ip;
                            }
                     }; function init() { var content = document.querySelector('.mw-body-primary') || document.querySelector('.mw-body') || document.querySelector('#mw-content-text') || document.body; util.$content = $(content); } mw.RegExp = {}; mw.log.deprecate(mw.RegExp, 'escape', util.escapeRegExp, 'Use mw.util.escapeRegExp() instead.', 'mw.RegExp.escape'); if (window.QUnit) { util.setOptionsForTest = function (opts) { var oldConfig = config; config = $.extend({}, config, opts); return oldConfig; }; util.init = init; } else { $(init); } mw.util = util; module.exports = util;
              }, "jquery.accessKeyLabel.js": function (require, module, exports) {
                     var cachedAccessKeyModifiers, testMode = false, labelable = 'button, input, textarea, keygen, meter, output, progress, select'; function getAccessKeyModifiers(nav) {
                            var profile, accessKeyModifiers; if (!nav && cachedAccessKeyModifiers) { return cachedAccessKeyModifiers; } profile = $.client.profile(nav); switch (profile.name) {
                                   case 'opera': case 'chrome': if (profile.platform === 'mac') { accessKeyModifiers = 'ctrl-option'; } else {
                                          accessKeyModifiers
                                          = 'alt-shift';
                                   } break; case 'firefox': case 'iceweasel': if (profile.platform === 'mac') { if (profile.versionNumber < 14) { accessKeyModifiers = 'ctrl'; } else { accessKeyModifiers = 'ctrl-option'; } } else { accessKeyModifiers = 'alt-shift'; } break; case 'safari': accessKeyModifiers = 'ctrl-option'; break; case 'msie': case 'edge': accessKeyModifiers = 'alt'; break; default: accessKeyModifiers = profile.platform === 'mac' ? 'ctrl' : 'alt'; break;
                            }if (!nav) { cachedAccessKeyModifiers = accessKeyModifiers; } return accessKeyModifiers;
                     } function getAccessKeyLabel(element) { if (!element.accessKey) { return ''; } if (!testMode && element.accessKeyLabel) { return element.accessKeyLabel; } return (testMode ? 'test' : getAccessKeyModifiers()) + '-' + element.accessKey; } function updateTooltipOnElement(element, titleElement) {
                            var oldTitle, parts, regexp, newTitle, accessKeyLabel, separatorMsg = mw.message('word-separator').plain(); oldTitle = titleElement.title; if (!oldTitle) { return; } parts = (separatorMsg + mw.message('brackets').plain()).split('$1'); regexp = new RegExp(parts.map(mw.util.
                                   escapeRegExp).join('.*?') + '$'); newTitle = oldTitle.replace(regexp, ''); accessKeyLabel = getAccessKeyLabel(element); if (accessKeyLabel) { newTitle += separatorMsg + mw.message('brackets', accessKeyLabel).plain(); } if (oldTitle !== newTitle) { titleElement.title = newTitle; }
                     } function updateTooltip(element) { var id, $element, $label, $labelParent; updateTooltipOnElement(element, element); $element = $(element); if ($element.is(labelable)) { id = element.id.replace(/"/g, '\\"'); if (id) { $label = $('label[for="' + id + '"]'); if ($label.length === 1) { updateTooltipOnElement(element, $label[0]); } } $labelParent = $element.parents('label'); if ($labelParent.length === 1) { updateTooltipOnElement(element, $labelParent[0]); } } } $.fn.updateTooltipAccessKeys = function () { return this.each(function () { updateTooltip(this); }); }; $.fn.updateTooltipAccessKeys.getAccessKeyLabel = getAccessKeyLabel; $.fn.updateTooltipAccessKeys.getAccessKeyPrefix = function (nav) { return getAccessKeyModifiers(nav) + '-'; }; $.fn.updateTooltipAccessKeys.setTestMode = function (mode) { testMode = mode; };
              }, "config.json": { "FragmentMode": ["html5", "legacy"], "GenerateThumbnailOnParse": false, "LoadScript": "/load.php" }, "portletLinkOptions.json": { "text-wrapper": [] }
       }
}, {}, { "brackets": "[$1]", "word-separator": "" }, null);; mw.loader.implement("jquery.client@1tje2", function ($, jQuery, require, module) {
       (function () {
              var profileCache = {}; $.client = {
                     profile: function (nav) {
                            if (!nav) { nav = window.navigator; } if (profileCache[nav.userAgent + '|' + nav.platform]) { return profileCache[nav.userAgent + '|' + nav.platform]; } var versionNumber, key = nav.userAgent + '|' + nav.platform, uk = 'unknown', x = 'x', wildFixups = [['Chrome Safari', 'Chrome'], ['KHTML/', 'Konqueror/'], [/Android(?:;|\s[a-zA-Z0-9.+-]+)(.*Firefox)/, '$1']], versionPrefixes = '(?:chrome|crios|firefox|fxios|opera|version|konqueror|msie|safari|android)', versionSuffix = '(?:\\/|;?\\s|)([a-z0-9\\.\\+]*?)(?:;|dev|rel|\\)|\\s|$)', rName = /(chrome|crios|firefox|fxios|konqueror|msie|opera|safari|rekonq|android)/, rLayout = /(gecko|konqueror|msie|trident|edge|opera|webkit)/, layoutMap = { konqueror: 'khtml', msie: 'trident', opera: 'presto' }, rLayoutVersion = /(applewebkit|gecko|trident|edge)\/(\d+)/, rPlatform = /(win|wow64|mac|linux|sunos|solaris|iphone|ipad)/, platformMap = { sunos: 'solaris', wow64: 'win' }, ua = nav.userAgent,
                                   match, name = uk, layout = uk, layoutversion = uk, platform = uk, version = x; wildFixups.forEach(function (fixup) { ua = ua.replace(fixup[0], fixup[1]); }); ua = ua.toLowerCase(); if ((match = rName.exec(ua))) { name = match[1]; } if ((match = rLayout.exec(ua))) { layout = layoutMap[match[1]] || match[1]; } if ((match = rLayoutVersion.exec(ua))) { layoutversion = parseInt(match[2], 10); } if ((match = rPlatform.exec(nav.platform.toLowerCase()))) { platform = platformMap[match[1]] || match[1]; } if ((match = new RegExp(versionPrefixes + versionSuffix).exec(ua))) { version = match[1]; } if (name === 'safari' && version > 400) { version = '2.0'; } if (name === 'opera' && version >= 9.8) { match = ua.match(/\bversion\/([0-9.]*)/); if (match && match[1]) { version = match[1]; } else { version = '10'; } } if (layout === 'trident' && layoutversion >= 7 && (match = ua.match(/\brv[ :/]([0-9.]*)/))) { if (match[1]) { name = 'msie'; version = match[1]; } } if (name === 'chrome' && (match = ua.match(/\bedge\/([0-9.]*)/))) { name = 'edge'; version = match[1]; layout = 'edge'; layoutversion = parseInt(match[1], 10); } if ((match = ua.match(/\bsilk\/([0-9.\-_]*)/))) { if (match[1]) { name = 'silk'; version = match[1]; } } versionNumber = parseFloat(version, 10) || 0.0; profileCache[key] = { name: name, layout: layout, layoutVersion: layoutversion, platform: platform, version: version, versionBase: (version !== x ? Math.floor(versionNumber).toString() : x), versionNumber: versionNumber }; return profileCache[key];
                     }, test: function (map, profile, exactMatchOnly) {
                            var conditions, dir, i, op, val, j, pieceVersion, pieceVal, compare; profile = $.isPlainObject(profile) ? profile : $.client.profile(); if (map.ltr && map.rtl) { dir = $(document.body).is('.rtl') ? 'rtl' : 'ltr'; map = map[dir]; } if (typeof map !== 'object' || map[profile.name] === undefined) { return !exactMatchOnly; } conditions = map[profile.name]; if (conditions === false) { return false; } if (conditions === null) { return true; } for (i = 0; i < conditions.length; i++) {
                                   op = conditions[i][0]; val = conditions[i][1]; if (typeof val === 'string') {
                                          pieceVersion = profile.version.toString().split('.'); pieceVal = val.split('.'); while (pieceVersion.length < pieceVal.length) { pieceVersion.push('0'); } while (pieceVal.length <
                                                 pieceVersion.length) { pieceVal.push('0'); } compare = 0; for (j = 0; j < pieceVersion.length; j++) { if (Number(pieceVersion[j]) < Number(pieceVal[j])) { compare = -1; break; } else if (Number(pieceVersion[j]) > Number(pieceVal[j])) { compare = 1; break; } } if (!(eval(String(compare + op + '0')))) { return false; }
                                   } else if (typeof val === 'number') { if (!(eval('profile.versionNumber' + op + val))) { return false; } }
                            } return true;
                     }
              };
       }());
}, null, null, null);; mw.loader.implement("mediawiki.String@1ck84", function ($, jQuery, require, module) {
       (function () {
              function byteLength(str) { return str.replace(/[\u0080-\u07FF\uD800-\uDFFF]/g, '**').replace(/[\u0800-\uD7FF\uE000-\uFFFF]/g, '***').length; } function codePointLength(str) { return str.replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, '*').length; } function charAt(string, offset, backwards) { var maybePair = backwards ? string.slice(offset - 1, offset + 1) : string.slice(offset, offset + 2); if (/^[\uD800-\uDBFF][\uDC00-\uDFFF]$/.test(maybePair)) { return maybePair; } else { return string.charAt(offset); } } function lcFirst(string) { var firstChar = charAt(string, 0); return firstChar.toLowerCase() + string.slice(firstChar.length); } function ucFirst(string) { var firstChar = charAt(string, 0); return firstChar.toUpperCase() + string.slice(firstChar.length); } function trimLength(safeVal, newVal, length, lengthFn) {
                     var startMatches, endMatches, matchesLen, inpParts, chopOff, oldChar, newChar, oldVal = safeVal; if (lengthFn(newVal) <= length) {
                            return {
                                   newVal: newVal, trimmed: false
                            };
                     } startMatches = 0; endMatches = 0; matchesLen = Math.min(newVal.length, oldVal.length); while (startMatches < matchesLen) { oldChar = charAt(oldVal, startMatches, false); newChar = charAt(newVal, startMatches, false); if (oldChar !== newChar) { break; } startMatches += oldChar.length; } while (endMatches < (matchesLen - startMatches)) { oldChar = charAt(oldVal, oldVal.length - 1 - endMatches, true); newChar = charAt(newVal, newVal.length - 1 - endMatches, true); if (oldChar !== newChar) { break; } endMatches += oldChar.length; } inpParts = [newVal.slice(0, startMatches), newVal.slice(startMatches, newVal.length - endMatches), newVal.slice(newVal.length - endMatches)]; while (lengthFn(inpParts.join('')) > length && inpParts[1].length > 0) { chopOff = /[\uD800-\uDBFF][\uDC00-\uDFFF]$/.test(inpParts[1]) ? 2 : 1; inpParts[1] = inpParts[1].slice(0, -chopOff); } return { newVal: inpParts.join(''), trimmed: newVal !== inpParts.join('') };
              } function trimByteLength(safeVal, newVal, byteLimit, filterFunction) {
                     var lengthFn; if (filterFunction) { lengthFn = function (val) { return byteLength(filterFunction(val)); }; }
                     else { lengthFn = byteLength; } return trimLength(safeVal, newVal, byteLimit, lengthFn);
              } function trimCodePointLength(safeVal, newVal, codePointLimit, filterFunction) { var lengthFn; if (filterFunction) { lengthFn = function (val) { return codePointLength(filterFunction(val)); }; } else { lengthFn = codePointLength; } return trimLength(safeVal, newVal, codePointLimit, lengthFn); } module.exports = { byteLength: byteLength, codePointLength: codePointLength, charAt: charAt, lcFirst: lcFirst, ucFirst: ucFirst, trimByteLength: trimByteLength, trimCodePointLength: trimCodePointLength };
       }());
}, null, null, null);; mw.loader.implement("site@1bnct", null, null, null, null);; mw.loader.implement("mediawiki.base@a2vuw", {
       main: "mediawiki.base.js", files: {
              "mediawiki.base.js": function (require, module, exports) {
                     'use strict'; var slice = Array.prototype.slice; mw.config.set(require('./config.json')); require('./log.js'); require('./errorLogger.js'); require('./legacy.wikibits.js'); function Message(map, key, parameters) { this.map = map; this.key = key; this.parameters = parameters || []; } Message.prototype = {
                            parser: function (format) { var text = this.map.get(this.key); if (mw.config.get('wgUserLanguage') === 'qqx' && text === '(' + this.key + ')') { text = '(' + this.key + '$*)'; } text = mw.format.apply(null, [text].concat(this.parameters)); if (format === 'parse') { text = mw.html.escape(text); } return text; }, params: function (parameters) { var i; for (i = 0; i < parameters.length; i++) { this.parameters.push(parameters[i]); } return this; }, toString: function (format) {
                                   if (!this.exists()) { return '⧼' + mw.html.escape(this.key) + '⧽'; } if (!format) { format = 'text'; } if (format === 'plain' || format === 'text' || format === 'parse') { return this.parser(format); }
                                   return mw.html.escape(this.parser('escaped'));
                            }, parse: function () { return this.toString('parse'); }, plain: function () { return this.toString('plain'); }, text: function () { return this.toString('text'); }, escaped: function () { return this.toString('escaped'); }, exists: function () { return this.map.exists(this.key); }
                     }; mw.libs = {}; mw.widgets = {}; mw.inspect = function () { var args = arguments; mw.loader.using('mediawiki.inspect', function () { mw.inspect.runReports.apply(mw.inspect, args); }); }; mw.internalDoTransformFormatForQqx = function (formatString, parameters) { var replacement; if (formatString.indexOf('$*') !== -1) { replacement = ''; if (parameters.length) { replacement = ': ' + parameters.map(function (_, i) { return '$' + (i + 1); }).join(', '); } return formatString.replace('$*', replacement); } return formatString; }; mw.format = function (formatString) {
                            var parameters = slice.call(arguments, 1); formatString = mw.internalDoTransformFormatForQqx(formatString, parameters); return formatString.replace(/\$(\d+)/g, function (str, match) {
                                   var index = parseInt(match, 10) -
                                          1; return parameters[index] !== undefined ? parameters[index] : '$' + match;
                            });
                     }; mw.Message = Message; mw.message = function (key) { var parameters = slice.call(arguments, 1); return new Message(mw.messages, key, parameters); }; mw.msg = function () { return mw.message.apply(mw, arguments).text(); }; mw.notify = function (message, options) { return mw.loader.using('mediawiki.notification', function () { return mw.notification.notify(message, options); }); }; var mwLoaderTrack = mw.track; var trackCallbacks = $.Callbacks('memory'); var trackHandlers = []; mw.track = function (topic, data) { mwLoaderTrack(topic, data); trackCallbacks.fire(mw.trackQueue); }; mw.trackSubscribe = function (topic, callback) { var seen = 0; function handler(trackQueue) { var event; for (; seen < trackQueue.length; seen++) { event = trackQueue[seen]; if (event.topic.indexOf(topic) === 0) { callback.call(event, event.topic, event.data); } } } trackHandlers.push([handler, callback]); trackCallbacks.add(handler); }; mw.trackUnsubscribe = function (callback) {
                            trackHandlers = trackHandlers.filter(function (fns) {
                                   if (fns[1]
                                          === callback) { trackCallbacks.remove(fns[0]); return false; } return true;
                            });
                     }; trackCallbacks.fire(mw.trackQueue); var hooks = Object.create(null); mw.hook = function (name) { return hooks[name] || (hooks[name] = (function () { var memory, fns = []; function rethrow(e) { setTimeout(function () { throw e; }); } return { add: function () { var i = 0; for (; i < arguments.length; i++) { if (memory) { try { arguments[i].apply(null, memory); } catch (e) { rethrow(e); } } fns.push(arguments[i]); } return this; }, remove: function () { var i = 0, j; for (; i < arguments.length; i++) { while ((j = fns.indexOf(arguments[i])) !== -1) { fns.splice(j, 1); } } return this; }, fire: function () { var i = 0; for (; i < fns.length; i++) { try { fns[i].apply(null, arguments); } catch (e) { rethrow(e); } } memory = slice.call(arguments); return this; } }; }())); }; function escapeCallback(s) { switch (s) { case '\'': return '&#039;'; case '"': return '&quot;'; case '<': return '&lt;'; case '>': return '&gt;'; case '&': return '&amp;'; } } mw.html = {
                            escape: function (s) { return s.replace(/['"<>&]/g, escapeCallback); }, element: function (name, attrs, contents) {
                                   var v,
                                   attrName, s = '<' + name; if (attrs) { for (attrName in attrs) { v = attrs[attrName]; if (v === true) { v = attrName; } else if (v === false) { continue; } s += ' ' + attrName + '="' + this.escape(String(v)) + '"'; } } if (contents === undefined || contents === null) { s += '/>'; return s; } s += '>'; if (typeof contents === 'string') { s += this.escape(contents); } else if (typeof contents === 'number' || typeof contents === 'boolean') { s += String(contents); } else if (contents instanceof this.Raw) { s += contents.value; } else { throw new Error('Invalid content type'); } s += '</' + name + '>'; return s;
                            }, Raw: function (value) { this.value = value; }
                     }; mw.loader.getModuleNames = function () { return Object.keys(mw.loader.moduleRegistry); }; mw.loader.using = function (dependencies, ready, error) {
                            var deferred = $.Deferred(); if (!Array.isArray(dependencies)) { dependencies = [dependencies]; } if (ready) { deferred.done(ready); } if (error) { deferred.fail(error); } try { dependencies = mw.loader.resolve(dependencies); } catch (e) { return deferred.reject(e).promise(); } mw.loader.enqueue(dependencies, function () {
                                   deferred.resolve(mw.
                                          loader.require);
                            }, deferred.reject); return deferred.promise();
                     }; mw.loader.getScript = function (url) { return $.ajax(url, { dataType: 'script', cache: true }).catch(function () { throw new Error('Failed to load script'); }); }; mw.user = { options: new mw.Map(), tokens: new mw.Map() }; mw.user.options.set(require('./user.json')); var queue = window.RLQ; window.RLQ = { push: function (entry) { if (typeof entry === 'function') { entry(); } else { mw.loader.using(entry[0], entry[1]); } } }; while (queue[0]) { window.RLQ.push(queue.shift()); }
              }, "log.js": function (require, module, exports) {
                     function stackSet() { var stacks; return function isFirst() { if (!stacks) { stacks = new Set(); } var stack = new Error().stack; if (!stacks.has(stack)) { stacks.add(stack); return true; } }; } mw.log.error = console.error ? Function.prototype.bind.call(console.error, console) : function () { }; mw.log.makeDeprecated = function (key, msg) { var isFirst = window.Set ? stackSet() : function () { }; return function maybeLog() { if (isFirst()) { if (key) { mw.track('mw.deprecate', key); } mw.log.warn(msg); } }; }; mw.log.
                            deprecate = function (obj, key, val, msg, logName) { if (!window.Set) { obj[key] = val; return; } var maybeLog = mw.log.makeDeprecated(logName || (obj === window ? key : null), 'Use of "' + (logName || key) + '" is deprecated.' + (msg ? ' ' + msg : '')); Object.defineProperty(obj, key, { configurable: true, enumerable: true, get: function () { maybeLog(); return val; }, set: function (newVal) { maybeLog(); val = newVal; } }); };
              }, "errorLogger.js": function (require, module, exports) {
                     'use strict'; function installGlobalHandler(window) { var oldHandler = window.onerror || function () { return false; }; window.onerror = function (errorMessage, url, line, column, errorObject) { mw.track('global.error', { errorMessage: errorMessage, url: url, lineNumber: line, columnNumber: column, stackTrace: errorObject ? errorObject.stack : '', errorObject: errorObject }); if (errorObject) { mw.track('error.uncaught', errorObject); } return oldHandler.apply(this, arguments); }; } mw.errorLogger = { logError: function (error, topic) { mw.track(topic || 'error.caught', error); } }; if (window.QUnit) {
                            mw.errorLogger.installGlobalHandler =
                            installGlobalHandler;
                     } else { installGlobalHandler(window); }
              }, "config.json": { "debug": 0, "skin": "fallback", "stylepath": "/skins", "wgArticlePath": "/wiki/$1", "wgScriptPath": "", "wgScript": "/index.php", "wgSearchType": "CirrusSearch", "wgVariantArticlePath": false, "wgServer": "https://isaac.huijiwiki.com", "wgServerName": "isaac.huijiwiki.com", "wgUserLanguage": "zh-hans", "wgContentLanguage": "zh-hans", "wgVersion": "1.38.4", "wgFormattedNamespaces": { "0": "", "1": "讨论", "2": "用户", "3": "用户讨论", "4": "Project", "5": "Project讨论", "6": "文件", "7": "文件讨论", "8": "MediaWiki", "9": "MediaWiki讨论", "10": "模板", "11": "模板讨论", "12": "帮助", "13": "帮助讨论", "14": "分类", "15": "分类讨论", "102": "属性", "103": "属性讨论", "106": "Form", "107": "Form talk", "108": "概念", "109": "概念讨论", "112": "smw/schema", "113": "smw/schema talk", "114": "Rule", "115": "Rule talk", "274": "Html", "275": "Html talk", "500": "博客", "501": "博客讨论", "710": "TimedText", "711": "TimedText talk", "828": "模块", "829": "模块讨论", "2300": "零件", "2301": "零件讨论", "2302": "零件定义", "2303": "零件定义讨论", "3500": "Data", "3501": "Data talk", "3502": "SMW", "3503": "SMW talk", "-2": "媒体文件", "-1": "特殊" }, "wgNamespaceIds": { "媒体文件": -2, "特殊": -1, "": 0, "讨论": 1, "用户": 2, "用户讨论": 3, "project": 4, "project讨论": 5, "文件": 6, "文件讨论": 7, "mediawiki": 8, "mediawiki讨论": 9, "模板": 10, "模板讨论": 11, "帮助": 12, "帮助讨论": 13, "分类": 14, "分类讨论": 15, "属性": 102, "属性讨论": 103, "form": 106, "form_talk": 107, "概念": 108, "概念讨论": 109, "smw/schema": 112, "smw/schema_talk": 113, "rule": 114, "rule_talk": 115, "html": 274, "html_talk": 275, "博客": 500, "博客讨论": 501, "timedtext": 710, "timedtext_talk": 711, "模块": 828, "模块讨论": 829, "零件": 2300, "零件讨论": 2301, "零件定义": 2302, "零件定义讨论": 2303, "data": 3500, "data_talk": 3501, "smw": 3502, "smw_talk": 3503, "property": 102, "property_talk": 103, "concept": 108, "concept_talk": 109, "模组": 828, "模块对话": 829, "模组对话": 829, "模组讨论": 829, "媒体": -2, "对话": 1, "用户对话": 3, "图像": 6, "档案": 6, "image": 6, "image_talk": 7, "图像对话": 7, "图像讨论": 7, "档案对话": 7, "档案讨论": 7, "文件对话": 7, "模板对话": 11, "帮助对话": 13, "分类对话": 15, "media": -2, "special": -1, "talk": 1, "user": 2, "user_talk": 3, "project_talk": 5, "file": 6, "file_talk": 7, "mediawiki_talk": 9, "template": 10, "template_talk": 11, "help": 12, "help_talk": 13, "category": 14, "category_talk": 15, "gadget": 2300, "gadget_talk": 2301, "gadget_definition": 2302, "gadget_definition_talk": 2303, "module": 828, "module_talk": 829, "blog": 500, "blog_talk": 501 }, "wgContentNamespaces": [0, 0], "wgSiteName": "以撒的结合中文维基", "wgDBname": "huiji_sites", "wgWikiID": "huiji_sites-isaac_", "wgCaseSensitiveNamespaces": [2302, 2303], "wgCommentCodePointLimit": 500, "wgExtensionAssetsPath": "/extensions", "wgUrlProtocols": "bitcoin\\:|ftp\\:\\/\\/|ftps\\:\\/\\/|geo\\:|git\\:\\/\\/|gopher\\:\\/\\/|http\\:\\/\\/|https\\:\\/\\/|irc\\:\\/\\/|ircs\\:\\/\\/|magnet\\:|mailto\\:|mms\\:\\/\\/|news\\:|nntp\\:\\/\\/|redis\\:\\/\\/|sftp\\:\\/\\/|sip\\:|sips\\:|sms\\:|ssh\\:\\/\\/|svn\\:\\/\\/|tel\\:|telnet\\:\\/\\/|urn\\:|worldwind\\:\\/\\/|xmpp\\:|\\/\\/", "wgActionPaths": {}, "wgTranslateNumerals": true, "wgExtraSignatureNamespaces": [], "wgLegalTitleChars": " %!\"$&'()*,\\-./0-9:;=?@A-Z\\\\\\^_`a-z~+\\u0080-\\uFFFF", "wgIllegalFileChars": ":/\\\\", "wgMultimediaViewer": { "infoLink": "https://mediawiki.org/wiki/Special:MyLanguage/Extension:Media_Viewer/About", "discussionLink": "https://mediawiki.org/wiki/Special:MyLanguage/Extension_talk:Media_Viewer/About", "helpLink": "https://mediawiki.org/wiki/Special:MyLanguage/Help:Extension:Media_Viewer", "useThumbnailGuessing": true, "durationSamplingFactor": false, "durationSamplingFactorLoggedin": false, "networkPerformanceSamplingFactor": false, "actionLoggingSamplingFactorMap": false, "attributionSamplingFactor": false, "dimensionSamplingFactor": false, "imageQueryParameter": false, "recordVirtualViewBeaconURI": false, "tooltipDelay": 1000, "extensions": { "jpg": "default", "jpeg": "default", "gif": "default", "svg": "default", "png": "default", "tiff": "default", "tif": "default" } }, "wgMediaViewer": true, "wgCirrusSearchFeedbackLink": false, "wgCodeMirrorEnableBracketMatching": false, "wgCodeMirrorAccessibilityColors": false, "wgCodeMirrorLineNumberingNamespaces": null, "wgTimedMediaHandler": { "MediaWiki.ApiProviders": { "wikimediacommons": { "url": "//commons.wikimedia.org/w/api.php" } }, "EmbedPlayer.OverlayControls": true, "EmbedPlayer.CodecPreference": ["vp9", "webm", "h264", "ogg", "mp3", "ogvjs"], "EmbedPlayer.DisableVideoTagSupport": false, "EmbedPlayer.DisableHTML5FlashFallback": true, "EmbedPlayer.ReplaceSources": null, "EmbedPlayer.EnableIpadHTMLControls": true, "EmbedPlayer.WebKitPlaysInline": false, "EmbedPlayer.EnableIpadNativeFullscreen": false, "EmbedPlayer.iPhoneShowHTMLPlayScreen": true, "EmbedPlayer.ForceLargeReplayButton": false, "EmbedPlayer.RewriteSelector": "video,audio,playlist", "EmbedPlayer.DefaultSize": "400x300", "EmbedPlayer.ControlsHeight": 31, "EmbedPlayer.TimeDisplayWidth": 85, "EmbedPlayer.KalturaAttribution": true, "EmbedPlayer.EnableOptionsMenu": true, "EmbedPlayer.EnableRightClick": true, "EmbedPlayer.EnabledOptionsMenuItems": ["playerSelect", "download", "share", "aboutPlayerLibrary"], "EmbedPlayer.WaitForMeta": true, "EmbedPlayer.ShowNativeWarning": true, "EmbedPlayer.ShowPlayerAlerts": true, "EmbedPlayer.EnableFullscreen": true, "EmbedPlayer.EnableTimeDisplay": true, "EmbedPlayer.EnableVolumeControl": true, "EmbedPlayer.NewWindowFullscreen": false, "EmbedPlayer.FullscreenTip": true, "EmbedPlayer.NativeControls": false, "EmbedPlayer.FullScreenZIndex": 999998, "EmbedPlayer.ShareEmbedMode": "iframe", "EmbedPlayer.MonitorRate": 250, "EmbedPlayer.EnableURLTimeEncoding": "flash", "EmbedPlayer.EnableIframeApi": true, "EmbedPlayer.NotPlayableDownloadLink": true, "TimedText.ShowInterface": "always", "TimedText.BottomPadding": 10, "TimedText.BelowVideoBlackBoxHeight": 40 }, "srf-config": { "version": "4.0.2", "settings": { "wgThumbLimits": [120, 150, 180, 200, 250, 300], "srfgScriptPath": "/extensions/SemanticResultFormats" } }, "smw-config": { "version": "4.1.2", "namespaces": { "canonicalName": { "0": "", "1": "Talk", "2": "User", "3": "User_talk", "5": "Project_talk", "6": "File", "7": "File_talk", "9": "MediaWiki_talk", "11": "Template_talk", "12": "Help", "13": "Help_talk", "14": "Category", "15": "Category_talk", "102": "属性", "103": "属性讨论", "108": "概念", "109": "概念讨论", "112": "smw/schema", "113": "smw/schema_talk", "3500": "Data", "3502": "SMW" }, "localizedName": { "0": "", "1": "讨论", "2": "用户", "3": "用户讨论", "5": "Project讨论", "6": "文件", "7": "文件讨论", "9": "MediaWiki讨论", "11": "模板讨论", "12": "帮助", "13": "帮助讨论", "14": "分类", "15": "分类讨论", "102": "属性", "103": "属性讨论", "108": "概念", "109": "概念讨论", "112": "smw/schema", "113": "smw/schema talk", "3500": "Data", "3502": "SMW" } }, "settings": { "smwgQMaxLimit": 10000, "smwgQMaxInlineLimit": 500, "namespace": { "属性": 102, "属性讨论": 103, "概念": 108, "概念讨论": 109, "smw/schema": 112, "smw/schema_talk": 113, "": 0, "Talk": 1, "User": 2, "User_talk": 3, "Project_talk": 5, "File": 6, "File_talk": 7, "MediaWiki_talk": 9, "Template_talk": 11, "Help": 12, "Help_talk": 13, "Category": 14, "Category_talk": 15, "Data": 3500, "SMW": 3502 } }, "formats": { "table": "table", "broadtable": "broadtable", "list": "list", "plainlist": "plainlist", "ol": "ol", "ul": "ul", "category": "category", "embedded": "embedded", "template": "template", "count": "count", "debug": "debug", "feed": "feed", "csv": "csv", "templatefile": "templatefile", "dsv": "dsv", "json": "json", "rdf": "rdf" } }, "wgCiteVisualEditorOtherGroup": false, "wgCiteResponsiveReferences": true }, "user.json": { "usecodeeditor": 1, "math": "mathml", "usebetatoolbar": 1, "usecodemirror": 1, "eventlogging-display-web": 0, "eventlogging-display-console": 0, "revisionslider-disable": false, "twocolconflict-enabled": 1, "echo-subscriptions-web-oauth-owner": true, "echo-subscriptions-email-oauth-owner": true, "echo-subscriptions-web-oauth-admin": true, "echo-subscriptions-email-oauth-admin": true, "showeditjs": 0, "showeditcss": 0, "smw-prefs-general-options-show-entity-issue-panel": true, "ccmeonemails": 0, "date": "default", "diffonly": 0, "disablemail": 0, "editfont": "monospace", "editondblclick": 0, "editsectiononrightclick": 0, "email-allow-new-users": 1, "enotifminoredits": 0, "enotifrevealaddr": 0, "enotifusertalkpages": 1, "enotifwatchlistpages": 1, "extendwatchlist": 1, "fancysig": 0, "forceeditsummary": 0, "gender": "unknown", "hideminor": 0, "hidepatrolled": 0, "hidecategorization": 1, "imagesize": 2, "minordefault": 0, "newpageshidepatrolled": 0, "nickname": "", "pst-cssjs": 1, "norollbackdiff": 0, "previewonfirst": 0, "previewontop": 1, "rcdays": 7, "rcenhancedfilters-disable": 0, "rclimit": 50, "search-match-redirect": true, "search-special-page": "Search", "searchlimit": 20, "showhiddencats": 0, "shownumberswatching": 1, "showrollbackconfirmation": 0, "skin": "huijidragonhide", "thumbsize": 5, "underline": 2, "uselivepreview": 0, "usenewrc": 1, "watchcreations": 1, "watchdefault": 1, "watchdeletion": 0, "watchuploads": 1, "watchlistdays": 7, "watchlisthideanons": 0, "watchlisthidebots": 0, "watchlisthideliu": 0, "watchlisthideminor": 0, "watchlisthideown": 0, "watchlisthidepatrolled": 0, "watchlisthidecategorization": 1, "watchlistreloadautomatically": 0, "watchlistunwatchlinks": 0, "watchmoves": 0, "watchrollback": 0, "wlenhancedfilters-disable": 0, "wllimit": 250, "useeditwarning": 1, "prefershttps": 1, "requireemail": 0, "skin-responsive": 1, "timecorrection": "System|480", "rememberpassword": 1, "multimediaviewer-enable": 1, "language": "zh-hans", "variant": "zh-hans", "variant-ban": "ban", "variant-en": "en", "variant-crh": "crh", "variant-gan": "gan", "variant-iu": "iu", "variant-kk": "kk", "variant-ku": "ku", "variant-shi": "shi", "variant-sr": "sr", "variant-tg": "tg", "variant-uz": "uz", "variant-zh": "zh", "searchNs0": 1, "searchNs1": 0, "searchNs2": 0, "searchNs3": 0, "searchNs4": 0, "searchNs5": 0, "searchNs6": 0, "searchNs7": 0, "searchNs8": 0, "searchNs9": 0, "searchNs10": 0, "searchNs11": 0, "searchNs12": 0, "searchNs13": 0, "searchNs14": 0, "searchNs15": 0, "searchNs102": 0, "searchNs103": 0, "searchNs106": 0, "searchNs107": 0, "searchNs108": 0, "searchNs109": 0, "searchNs112": 0, "searchNs113": 0, "searchNs114": 0, "searchNs115": 0, "searchNs274": 0, "searchNs275": 0, "searchNs500": 0, "searchNs501": 0, "searchNs710": 0, "searchNs711": 0, "searchNs828": 0, "searchNs829": 0, "searchNs2300": 0, "searchNs2301": 0, "searchNs2302": 0, "searchNs2303": 0, "searchNs3500": 0, "searchNs3501": 0, "searchNs3502": 0, "searchNs3503": 0, "gadget-Anm2Player": 1, "gadget-BabyPlumHelper": 1, "gadget-ECharts": 0, "gadget-Filterable": 1, "gadget-LostSoulHelper": 1, "gadget-PoltyHelper": 0, "gadget-TopUsers": 1, "gadget-persistentgamedata": 1, "gadget-sprite": 1, "tmh-videojs": false, "cirrussearch-pref-completion-profile": "fuzzy" }, "legacy.wikibits.js": function (require, module, exports) { }
       }
}, null, null, null);
